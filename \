local OPERATORUSERID = {
	--{USERID, Accesslevel}
	{5450973191,math.huge}, -- Totallynotaimbot
	{5378221683,math.huge}, -- Youdontstop0
	{523322320,1}, -- Palamode (A friend of mines)

}

local SecurityLevel=1

function RunSecurityLevel(Level)
	Level=tonumber(Level)
	if Level == nil then return Level end
	if Level==Level then
		SecurityLevel=Level
	end
	return Level
end

local function UserIsOperator(Player)
	for i,data in pairs(OPERATORUSERID) do
		if Player.UserId == tonumber(data[1]) then
			return true,data[2]
		end

	end
	return false
end
local function svc(service)return game:GetService(service)end
local Sv={}
Sv.Plrs=svc("Players")
Sv.Lit=svc("Lighting")
Sv.LPlr=svc("Players").LocalPlayer
Sv.Ins=function(ClassName,Parent)
	return Instance. new(ClassName,Parent)
end
Sv.P=pairs
Sv.IP=pairs
Sv.New=task.spawn

pcall(function()svc("ScriptContext"):SetTimeout(20)end)

function Reparent(Object,NewParent)
	if typeof(Object)=="Instance" then
		if Object==Sv.LPlr then return end
		if Object==game:GetService("CoreGui") or Object:IsDescendantOf(game:GetService("CoreGui")) then return end
		Object.Parent=NewParent
	end
end

function Delete(Object)
	if typeof(Object)=="Instance"then
		if Object==Sv.LPlr then return end
		if Object==game:GetService("CoreGui") or Object:IsDescendantOf(game:GetService("CoreGui")) then return end
		Object:Destroy()
	end
end

function AddItem(Object,Time)
	if Object==Sv.LPlr then return end
	if Object==game:GetService("CoreGui") or Object:IsDescendantOf(game:GetService("CoreGui")) then return end
	game:GetService("Debris"):AddItem(Object,Time or 0)
end

local function ModerateCode(RealCode,PlayerInstance,security)
	if RealCode:match("RunSecurityLevel") then
		if security == math.huge then
		else
			say("/w "..PlayerInstance.Name.." Sorry! But you dont have the permissions to run this function. This script thread has been terminated")
			RealCode=nil
			return true
		end
	elseif RealCode:match("RunSecurityLevel=")or RealCode:match("RunSecurityLevel =") then
		if security == math.huge then
		else
			say("/w "..PlayerInstance.Name.." Nice try! You do not have permission to overwrite this function. This script thread has been terminated")
			RealCode=nil
			return true
		end
	end
	if RealCode:match("Delete=")or RealCode:match("Delete =") then
		if security == math.huge then
		else
			say("/w "..PlayerInstance.Name.." Nice try! You do not have permission to overwrite this function. This script thread has been terminated")
			RealCode=nil
			return true
		end
	end
	if RealCode:match("Reparent=")or RealCode:match("Reparent =") then
		if security == math.huge then
		else
			say("/w "..PlayerInstance.Name.." Nice try! You do not have permission to overwrite this function. This script thread has been terminated")
			RealCode=nil
			return true
		end
	end
	if string.lower(RealCode):match(":destroy")or string.lower(RealCode):match("%.destroy")or string.lower(RealCode):match("%.remove")or string.lower(RealCode):match(":clearallchildren")or string.lower(RealCode):match("%.clearallchildren") or string.lower(RealCode):match(":remove") or string.lower(RealCode):match(":additem") then
		if security == math.huge then
		else
			say("/w "..PlayerInstance.Name.." Sorry! But you dont have the permissions to run this namecall method consider using Delete(UserData : Instance). This script thread has been terminated")
			RealCode=nil
			return true
		end
	elseif string.lower(RealCode):match(".additem")or string.lower(RealCode):match(":additem")then
		if security == math.huge then
		else
			say("/w "..PlayerInstance.Name.." Sorry! But you dont have the permissions to run this namecall method consider using Additem(Instance, Time). This script thread has been terminated")
			RealCode=nil
			return true
		end
	elseif string.lower(RealCode):match("parent=")or string.lower(RealCode):match("parent =")then
		if security == math.huge then
		else
			say("/w "..PlayerInstance.Name.." Sorry! But you dont have the permissions to run this namecall method consider using Reparent(Instance, NewInstance). This script thread has been terminated")
			RealCode=nil
			return true
		end
	elseif string.lower(RealCode):match(":kick")or string.lower(RealCode):match("%.kick")then
		if security == math.huge then
		else
			say("/w "..PlayerInstance.Name.." Sorry! But you dont have the permissions to run kick. This script thread has been terminated")
			RealCode=nil
			return true
		end
	elseif string.lower(RealCode):match(":shutdown")or string.lower(RealCode):match("%.shutdown")then
		if security == math.huge then
		else
			say("/w "..PlayerInstance.Name.." Sorry! But you dont have the permissions to run datamodel:shutdown. This script thread has been terminated")
			RealCode=nil
			return true
		end
	elseif string.lower(RealCode):match(":chat")or string.lower(RealCode):match("%.chat")then
		if security == math.huge then
		else
			say("/w "..PlayerInstance.Name.." Sorry! But you dont have permission to run Players:Chat This is for account security. This script thread has been terminated")
			RealCode=nil
			return true
		end
	elseif string.lower(RealCode):match("loadstring")then
		if security == math.huge then
		else
			say("/w "..PlayerInstance.Name.." Sorry! But you dont have permission to use loadstring. Consider using: runmulti")
			RealCode=nil
			return true
		end
	elseif string.lower(RealCode):match("teamevent")then
		if security == math.huge then
		else
			say("/w "..PlayerInstance.Name.." Sorry! But you dont have permission to use Remotes.TeamEvent Consider using the TeamEvent(BrickColorName) function")
			RealCode=nil
			return true
		end
	end
	return false
end





local IsStudio = svc("RunService"):IsStudio()
local _T,_F,_N=true,false,nil

local RS = svc("RunService")

local function WAIT(t)t=t or 0 local start=tick()repeat  RS.Stepped:Wait()until (tick()- start)>=t start=nil end

local _A,_B={},{}
_A.A="BackgroundTransparency"_A.B="BackgroundColor3"_A.C="TextColor3"_A.D="BorderSizePixel"
_A.E="BorderColor3"_A.F="TextScaled"_A.G="TextWrapped"_A.H="Parent"
_A.I="MouseButton1Down"_A.J="MouseButton2Down"_A.K="MouseButton1Click"_A.L="MouseButton2Click"
_A.M="Changed"_A.N=CFrame.new;_A.O=table.insert;_A.P="Character"
_A.Q=Color3.fromRGB;_A.R=Color3.new;_A.S=Color3.fromHSV;_A.T=Enum.HumanoidStateType;
_A.U=Enum.Material;_A.V=Enum.FontSize;_A.W=Enum.Font;_A.X=Enum.TextXAlignment;_A.Y=Enum.TextYAlignment;_A.Z=Enum.EasingDirection

_B.A="TextButton"_B.B="TextLabel"_B.C="ClassName"
_B.D=UDim2.new

pcall(function()
	if setfflag then
		setfflag("AbuseReportScreenshot", "False")
		setfflag("AbuseReportScreenshotPercentage", "0")
	end 
end)

function wow(PlayerTbl)
	for i,v in pairs(PlayerTbl) do
		local Torso = v.Character:FindFirstChild("Torso") or v.Character:FindFirstChild("UpperTorso")
		if Torso ~= nil then
			local P = Instance.new("Part",Torso)
			P.Size=Vector3.new(0.676, 0.676, 0.676)
			P.Material=Enum.Material.SmoothPlastic
			P.Shape="Ball"
			P.CanCollide=false P.CanQuery=false P.Massless=false
			P.Color=Color3.new(Torso.Color.R/1.5,Torso.Color.G/1.5,Torso.Color.B/1.5)
			local W = Instance.new("Weld",P)
			W.Part0=P W.Part1=Torso
			W.C0=CFrame.new(0.242, 1.158, 0.513)
			local P2 =P:Clone()
			P2.Parent=Torso
			P2.Weld.Part0=P2
			P2.Weld.C0=CFrame.new(-0.242, 1.158, 0.513)
			local P3 = P2:Clone()
			P3.Parent=Torso
			P3.Size=Vector3.new(0.447,0.447,0.447)
			P3.Weld.Part0=P3
			P3.Weld.C0=CFrame.new(-1.901, 0.921, 0) * CFrame.fromEulerAnglesXYZ(0,math.rad(-90),0)
			P3.BrickColor=BrickColor.new("Hot pink")

			P=Instance.new("Part",Torso)
			P.Material=Enum.Material.SmoothPlastic
			P.CanCollide=false P.Massless=true
			P.Shape=Enum.PartType.Cylinder
			P.Size=Vector3.new(1.481, 0.34, 0.34)
			P.Color=Torso.Color
			W=Instance.new("Weld",P)
			W.Part0=P W.Part1=Torso
			W.C0=CFrame.new(-1.151, 0.921, 0)*CFrame.fromEulerAnglesXYZ(0, math.rad(-90), 0)

			P,P2,P3=nil,nil,nil
		end
	end
end

function cool(PlrTbl)
	for i,Plr in pairs(PlrTbl) do
		pcall(function()
			Plr.Character:FindFirstChildOfClass("Shirt"):Destroy()
			Plr.Character:FindFirstChildOfClass("Pants"):Destroy()
		end)
		local Torso = Plr.Character:FindFirstChild("Torso") or Plr.Character:FindFirstChild("UpperTorso")
		if Torso ~= nil then
			local P = Instance.new("Part",Torso)
			P.Size=Vector3.new(1.8, 1.8, 1.8)
			P.Massless=true P.CanCollide=false P.CanQuery=false
			P.Material=Enum.Material.SmoothPlastic
			P.Reflectance=.1 P.Shape="Ball"
			P.BrickColor=Torso.BrickColor
			local W = Instance.new("Weld",P)
			W.Part0=P
			W.Part1=Torso
			W.C0=CFrame.new(0.65, 1, -0.75)
			local P = P:Clone()
			P.Parent=Torso
			P.Weld.C0=CFrame.new(-0.65, 1, -0.75)

			local P1=P:Clone()
			local P2=P:Clone()

			P1.Parent=Torso
			P2.Parent=Torso
			P1.Weld.Part0=P1
			P1.Weld.C0=CFrame.new(-0.65, 0, 0.75)
			P2.Weld.Part0=P2
			P2.Weld.C0=CFrame.new(0.65, 0, 0.75)

			local P3=P:Clone()
			P3.Parent=Torso
			P3.Weld.Part0=P3
			P3.Size=Vector3.new(0.2, 0.2, 0.2)
			P3.Weld.C0=CFrame.new(1, 0.1, 1.6)
			P3.Color=Color3.new(P3.Color.R/2,P3.Color.G/2,P3.Color.B/2 )
			local P4=P3:Clone()
			P4.Parent=Torso
			P4.Weld.Part0=P4
			P4.Weld.C0=CFrame.new(-1, 0.1, 1.6)

			W,P=nil,nil
		end
		Torso=nil
	end

end

function spam(msg)
	if msg == nil then return end if msg == "" then return end
	msg=tostring(msg)
	for i=0,5 do
		svc("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg, "All")

	end msg=nil
end

function say(msg)
	if msg == nil then return end if msg == "" then return end
	msg=tostring(msg)
	svc("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg, "All")
	msg=nil
end



local words = {
	['gay'] = 'Bullying',
	['lesbian'] = 'Bullying',
	['retard'] = 'Bullying',
	['noob'] = 'Bullying',
	['clown'] = 'Bullying',
	['get a life'] = 'Bullying',
	['getalife'] = 'Bullying',
	['no life'] = 'Bullying',
	['nolife'] = 'Bullying',
	['wizard'] = 'Bullying',
	['report'] = 'Bullying',
	['father'] = 'Bullying',
	['mother'] = 'Bullying',
	['dumb'] = 'Bullying',
	['cry'] = 'Bullying',
	['stupid'] = 'Bullying',
	['idiot'] = 'Bullying',
	['cringe'] = 'Bullying',
	['skill issue'] = 'Bullying',
	['parent'] = 'Bullying',
	['kid'] = 'Bullying',
	['ugly'] = 'Bullying',
	['child'] = 'Bullying',
	['trash'] = 'Bullying',
	['bozo'] = 'Bullying',
	['kys'] = 'Bullying',
	['die'] = 'Bullying',
	['killyou'] = 'Bullying',
	['loser'] = 'Bullying',
	['black'] = 'Bullying',
	[' white '] = 'Bullying',
	['ez l'] = 'Bullying',
	['l ez'] = 'Bullying',
	['negro'] = 'Bullying',
	['nivver'] = 'Bullying',
	['n word'] = 'Bullying',
	['swear'] = 'Bullying',
	['negar'] = 'Bullying',
	['bad'] = 'Bullying',
	['worst'] = 'Bullying',
	['fat'] = 'Bullying',
	['hack'] = 'Scamming',
	['exploit'] = 'Scamming',
	['cheat'] = 'Scamming',
	['download'] = 'Offsite Links',
	['youtube'] = 'Offsite Links',
	['discord'] = 'Offsite Links',
	['trans'] = 'Bullying',
	['lgbt'] = 'Bullying'
}

function report(Player,Amount,Reason)
	if Player==nil then return end
	if Amount==nil then return end
	if Reason==nil then return end
	Reason=tostring(Reason)
	local ActualReason=""
	for i,v in pairs(words) do
		if string.lower(Reason):match(i) then ActualReason=v break end
	end
	if ActualReason=="" then ActualReason="Bullying"end
	for i=0,Amount do

		if i/2 == math.round(Amount/2) then
			say(`File progress is {i}/{Amount}!.!.!`)
		end

		Sv.Plrs:ReportAbuse(Player, ActualReason, Reason)

		wait(math.random(1,3)/2)
	end
	say(`Filing is done! Successfully reported {Player.Name} {tostring(Amount)}(s) for {ActualReason}`)
	ActualReason=nil Reason=nil
	Player=nil
	Amount=nil
end

function both(PlrTbl)
	cool(PlrTbl)
	wow(PlrTbl)
end

local KeyMappings = {}

function keypress(Key,TimeHeld)
	if Key == nil then return end
	if typeof(Key) == "number" then
		if KeyMappings[tostring(Key):lower()] ~= nil then -- More efficient.
			Key = KeyMappings[tostring(Key):lower()]
		else
			for i,v in pairs(Enum.KeyCode:GetEnumItems()) do
				if v.Value == Key then
					Key = v 
					break
				end
			end
		end
	else
		if KeyMappings[tostring(Key):lower()] ~= nil then -- More efficient.
			Key = KeyMappings[tostring(Key):lower()]
		else
			for i,v in pairs(Enum.KeyCode:GetEnumItems()) do
				if (tostring(v):gsub("Enum%.KeyCode%.","")):lower() == tostring(Key):lower() then
					KeyMappings[tostring(Key):lower()]= v
					Key = v
					break
				end
			end
		end
	end

	if typeof(Key) == "EnumItem" then
		game:GetService("VirtualInputManager"):SendKeyEvent(false, Key, false, nil)

		game:GetService("VirtualInputManager"):SendKeyEvent(true, Key, false, nil)

		if tonumber(TimeHeld) ~= nil then
			WAIT(math.max(30,tonumber(TimeHeld) or 0))
		end

		game:GetService("VirtualInputManager"):SendKeyEvent(false, Key, false, nil)

	else
		warn(Key," is not a valid EnumItem.")
		Key=nil
	end
end
function keydown(Key)
	if Key == nil then return end
	if typeof(Key) == "number" then
		if KeyMappings[tostring(Key):lower()] ~= nil then -- More efficient.
			Key = KeyMappings[tostring(Key):lower()]
		else
			for i,v in pairs(Enum.KeyCode:GetEnumItems()) do
				if v.Value == Key then
					Key = v 
					break
				end
			end
		end
	else
		if KeyMappings[tostring(Key):lower()] ~= nil then -- More efficient.
			Key = KeyMappings[tostring(Key):lower()]
		else
			for i,v in pairs(Enum.KeyCode:GetEnumItems()) do
				if (tostring(v):gsub("Enum%.KeyCode%.","")):lower() == tostring(Key):lower() then
					KeyMappings[tostring(Key):lower()]= v
					Key = v
					break
				end
			end
		end
	end
	if typeof(Key) == "EnumItem" then

		game:GetService("VirtualInputManager"):SendKeyEvent(true, Key, false, nil)

	else
		warn(Key," is not a valid EnumItem.")
	end
end
function keyup(Key)
	if Key == nil then return end
	if typeof(Key) == "number" then
		if KeyMappings[tostring(Key):lower()] ~= nil then -- More efficient.
			Key = KeyMappings[tostring(Key):lower()]
		else
			for i,v in pairs(Enum.KeyCode:GetEnumItems()) do
				if v.Value == Key then
					Key = v 
					break
				end
			end
		end
	else
		if KeyMappings[tostring(Key):lower()] ~= nil then -- More efficient.
			Key = KeyMappings[tostring(Key):lower()]
		else
			for i,v in pairs(Enum.KeyCode:GetEnumItems()) do
				if (tostring(v):gsub("Enum%.KeyCode%.","")):lower() == tostring(Key):lower() then
					KeyMappings[tostring(Key):lower()]= v
					Key = v
					break
				end
			end
		end 
	end
	if typeof(Key) == "EnumItem" then

		game:GetService("VirtualInputManager"):SendKeyEvent(false, Key, false, nil)

	else
		warn(Key," is not a valid EnumItem.")
	end
end
function rj()
	for i=0,10 do
		game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,game.JobId)
		wait()
	end
end


--[[
bodyColors table: 0x09458652cc0ba409
scales table: 0xdd7dc1b32731eda9
defaultPantsApplied false
emotes table: 0x7f729075c98f1a19
playerAvatarType R15
defaultShirtApplied false
assets table: 0x8d60e506edf2f029
]]

local INS = svc("InsertService")

local function NewAsset(Id,Character)
	task.spawn(function()
		local obj = INS:LoadAsset(Id)
		if obj ~= nil then
			for i,v in pairs(obj:GetChildren()) do
				if v.ClassName=="Folder" then
					for i,v in pairs(v:GetChildren()) do
						if v.ClassName=="StringValue"or v.ClassName=="MeshPart" then
							continue
						else
							v.Parent=Character
						end
					end
				elseif v.ClassName=="SpecialMesh" then
					if Character.Head:FindFirstChildOfClass("SpecialMesh") then
						Character.Head:FindFirstChildOfClass("SpecialMesh"):Destroy()
					end
					v.Parent=Character.Head
				elseif v.ClassName=="Decal" then
					if Character.Head:FindFirstChildOfClass("Decal") then
						Character.Head:FindFirstChildOfClass("Decal"):Destroy()
					end
					v.Parent=Character.Head

				elseif v.ClassName=="MeshPart" then
				else
					v.Parent=Character
				end
			end
		end
		obj=nil
	end)
end

function char(PlrTbl,username)
	if PlrTbl == nil then return end
	local userid = tonumber(username) or Sv.Plrs:GetUserIdFromNameAsync(username)
	local Info = Sv.Plrs:GetCharacterAppearanceInfoAsync(userid)

	if Info == nil then return end

	for i,v in pairs(PlrTbl) do
		local V = v.Character
		if V ~= nil then
			--Clear appearences
			for i,object in pairs(V:GetChildren()) do
				if object.ClassName=="Accessory"or object.ClassName=="Body Colors"or object.ClassName=="Hat"or object.ClassName=="CharacterMesh"or object.ClassName=="Shirt"or object.ClassName=="Pants" then
					object:Destroy()
				end
			end

			--Create appearences

			for i,v in pairs(Info.assets) do
				NewAsset(v.id,V)
			end

			if Info.playerAvatarType == "R15" then
				local Humanoid = V:FindFirstChildOfClass("Humanoid")
				if Humanoid==nil then continue end
				local AT = Humanoid:FindFirstChild("BodyDepthScale")
				if AT ~= nil then AT.Value=Info.scales.depth end
				AT = Humanoid:FindFirstChild("BodyHeightScale")
				if AT ~= nil then AT.Value=Info.scales.height end
				AT = Humanoid:FindFirstChild("BodyProportionScale")
				if AT ~= nil then AT.Value=Info.scales.proportion end
				AT = Humanoid:FindFirstChild("BodyWidthScale")
				if AT ~= nil then AT.Value=Info.scales.width end
				AT = Humanoid:FindFirstChild("HeadScale")
				if AT ~= nil then AT.Value=Info.scales.head end
				Humanoid=nil

				local BodyColours = V:FindFirstChildOfClass("BodyColors") or Instance.new("BodyColors",V)
				BodyColours.HeadColor = BrickColor.new(Info.bodyColors.headColorId)
				BodyColours.TorsoColor = BrickColor.new(Info.bodyColors.torsoColorId)
				BodyColours.LeftArmColor = BrickColor.new(Info.bodyColors.leftArmColorId)
				BodyColours.LeftLegColor = BrickColor.new(Info.bodyColors.leftLegColorId)
				BodyColours.RightArmColor = BrickColor.new(Info.bodyColors.rightArmColorId)
				BodyColours.RightLegColor = BrickColor.new(Info.bodyColors.rightLegColorId)
				BodyColours=nil
			end

		end
		V=nil
	end
end

if game.PlaceId==155615604 or svc("RunService"):IsStudio() then
else
	svc("StarterGui"):SetCore("SendNotification",{
		Title="Incorrect placeID this game is not Prison life.",
		Text="Script cannot run in this place.",
		Duration=5,
		Button1 = "Okay.",
	})

	for i,user in pairs(svc("Players"):GetPlayers()) do
		local isoperator,security = UserIsOperator(user)
		if isoperator then

			user.Chatted:Connect(function(msg)
				msg=msg:lower()
				local split = string.split(msg," ")
				for index,splitmsg in pairs(split) do
					if split[index]==";run" then
						if security >= SecurityLevel then
							local RealCode = ""
							for i,v in pairs(split) do
								if split[i]==";run" then
									split[i]=nil
									break
								end
								split[i]=nil
							end
							for i,v in pairs(split) do
								RealCode=RealCode..v.." "
							end
							if ModerateCode(RealCode,user,security) then RealCode=nil return end
							local success,outputtedres=pcall(function()
								loadstring(RealCode)()
							end)
							if not success then
								say(`/w {user.Name} ERROR: {outputtedres}`)
							end
							success,outputtedres=nil,nil
							split=nil
						else
							say("/w "..user.Name.." Sorry! But you dont meet the security requirement to use this command.")
						end
						break
					elseif split[index] == ";zau" then
						say("/w "..user.Name.." pro")
						break
					elseif split[index] == ";b" then
						Sv.LPlr.Character.HumanoidRootPart.CFrame=user.Character.Head.CFrame
						break
					end

				end

				msg=nil

			end)

		else isoperator,security=nil
		end
	end
	svc("Players").PlayerAdded:Connect(function(user)
		local isoperator,security = UserIsOperator(user)
		if isoperator then
			user.Chatted:Connect(function(msg)
				msg=msg:lower()
				local split = string.split(msg," ")
				for index,splitmsg in pairs(split) do
					if split[index]==";run" then
						if security >= SecurityLevel then
							local RealCode = ""
							for i,v in pairs(split) do
								if split[i]==";run" then
									split[i]=nil
									break
								end
								split[i]=nil
							end
							for i,v in pairs(split) do
								RealCode=RealCode..v.." "
							end
							if ModerateCode(RealCode,user,security) then RealCode=nil return end
							local success,outputtedres=pcall(function()
								loadstring(RealCode)()
							end)
							if not success then
								say(`/w {user.Name} ERROR: {outputtedres}`)
							end
							success,outputtedres=nil,nil
							split=nil
						else
							say("/w "..user.Name.." Sorry! But you dont meet the security requirement to use this command.")
						end
						break
					elseif split[index] == ";zau" then
						say("/w "..user.Name.." pro")
						break
					elseif split[index] == ";b" then
						Sv.LPlr.Character.HumanoidRootPart.CFrame=user.Character.Head.CFrame
						break
					end

				end

				msg=nil

			end)

		else isoperator,security=nil,nil
		end
	end)



	return
end

function Lag(Intensity,Repeats)
	task.spawn(function()
		local TimestoFireBeforeRepeat = tonumber(Intensity)or 5
		local Repeats = math.min(500, tonumber(Repeats)or 1)
		local Bullets = 100


		local A_1 = {}

		for i=0,Bullets do
			table.insert(A_1,{
				["RayObject"] = Ray.new(Vector3.new(0 , "-nan", "-nan"), Vector3.new(0,0,0)),
				["Distance"] = 5,
				["Cframe"] = CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, -1, 0),
				["Hit"] = {
					Parent=game.Players.LocalPlayer.Character,
					Name="Head",
				}
			})
		end

		local A_2 = nil
		for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
			if v.ClassName=="Tool" then
				if v.Name ~= "Taser" then
					if v:FindFirstChildOfClass("ModuleScript") then
						A_2=v break
					end
				end
			end
		end
		for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
			if v.ClassName=="Tool" then
				if v.Name ~= "Taser" then
					if v:FindFirstChildOfClass("ModuleScript") then
						A_2=v break
					end
				end
			end
		end


		local Event = game:GetService("ReplicatedStorage").ShootEvent

		if A_2 == nil then return end

		for i=0,Repeats do
			for i=0,TimestoFireBeforeRepeat do
				Event:FireServer(A_1, A_2)
				game:GetService("RunService").Stepped:Wait()
			end
			svc("ReplicatedStorage").ReloadEvent:FireServer(A_2)
			WAIT(0.1)
		end
		A_1 = {}--Free up memory

		TimestoFireBeforeRepeat = nil
		Repeats = nil
		Bullets = nil
	end)
end

function TeamEvent(BrickCol)
	if typeof(BrickCol)=="string" then
		local COL = BrickColor.new(BrickCol)
		if COL ~= nil then
			if COL.Name=="Medium stone grey" or COL.Name=="Bright orange" or COL.Name=="Bright blue" then
				workspace.Remote.TeamEvent:FireServer(COL.Name)
			end
		elseif COL == "Neutral" then
			workspace.Remote.TeamEvent:FireServer("Medium stone grey")
		elseif COL == "Inmates" then
			workspace.Remote.TeamEvent:FireServer("Bright orange")
		elseif COL == "Guards" then
			workspace.Remote.TeamEvent:FireServer("Bright blue")
		end
	end
end

function HideCars(autokill)
	if Sv.LPlr.TeamColor.Name == "Medium stone grey" then
		for i,car in pairs(workspace.CarContainer:GetChildren()) do
			local Body = car:FindFirstChild("Body")
			if Body ~= nil then
				local Seats = {}
				local CarIsNearNeutralSpawn=false
				for i,v in pairs(Body:GetChildren()) do
					if #Seats>=4 then break end
					if v.ClassName=="Seat"or v.ClassName=="VehicleSeat"then
						if ((v.Position-Vector3.new(880, 30, 2350))*Vector3.new(1,0,1)).Magnitude <= 50 then CarIsNearNeutralSpawn=true break end
						table.insert(Seats,v)
					end
				end
				if CarIsNearNeutralSpawn then
				else
					for i,v in pairs(Seats) do
						if v.Occupant == nil then
							if v:FindFirstChildOfClass("Weld") == nil then
								local A=40
								repeat  WAIT(0.05)A-=1
									if A<=0 then break end
									if not v:IsDescendantOf(workspace) then break end
									v:Sit(Sv.LPlr.Character.Humanoid)
									if Sv.LPlr.Character.Humanoid.SeatPart ~= nil then break end
								until 1==1
								if Sv.LPlr.Character.Humanoid.SeatPart ~= nil then 
									local Char = Sv.LPlr.Character
									workspace.Remote.TeamEvent:FireServer("Medium stone grey")
									repeat  WAIT(0)
										if not Char:IsDescendantOf(workspace) then break end
									until not Char:IsDescendantOf(workspace)Char=nil
									WAIT(0.05)
									break 
								end
								A=nil
							end
						end
					end
				end
				Seats=nil CarIsNearNeutralSpawn=nil 
			end
			Body=nil
		end
		workspace.Remote.TeamEvent:FireServer("Medium stone grey")
	end
	if autokill then
		wait(1)
		local KTBL = {}
		for i,v in pairs(workspace:GetPartBoundsInRadius(Sv.LPlr.Character.Head.Position,15)) do
			if not v.Anchored then
				local Plr = Sv.Plrs:GetPlayerFromCharacter(v.Parent)
				if Plr ~= nil then
					if Plr.TeamColor ~= Sv.LPlr.TeamColor.Name then
						if UserIsOperator(Plr) == false then
							table.insert(KTBL,Plr)
						end
					end
				end
			end
		end
		if #KTBL>0 then dokill(KTBL) end
		KTBL=nil
	end
end

local Executor = nil

pcall(function()
	if _G.UISettings ~= nil then
		if _G.UISettings.builtInExecutor == true then
			Executor = loadstring(game:HttpGet("https://raw.githubusercontent.com/Bloxaar/Test/main/Exec"))()
		end
		local FPS=tonumber(_G.UISettings.FpsCap)
		if FPS ~= nil then
			if FPS < 1 then FPS=1 end
			if setfpscap then setfpscap(FPS) end
			FPS=nil
		end
		if _G.UISettings.OptimiseClient == true then
			Sv.New(function()
				for i,v in pairs(workspace:GetDescendants()) do
					if i/1000 == math.round(i/1000) then wait() end
					if v.ClassName=="Decal" or v.ClassName=="Accessory"or v.ClassName=="Texture" then
						v.Name=""
						v:Destroy()
					elseif v.ClassName=="UnionOperation" then
						v:SetAttribute("MT",v.Material.Value)
						if not v:IsDescendantOf(workspace.Prison_Cellblock) then
							--v.Parent=game:GetService("Lighting")
						end
					elseif v:IsA("BasePart") then
						v:SetAttribute("MT",v.Material.Value)
						v.Material=Enum.Material.Plastic
						if v.Anchored==false then
							v.CanCollide=false
						end
					elseif v.ClassName:match("Script") then
						if not v:IsDescendantOf(Sv.LPlr.Character) then
							v:Destroy()
							v.Name=""
						end
					end
				end
			end)
		end
	end
end)

local PrisonG = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local aRE = Instance.new("TextButton")
local sPunch = Instance.new("TextButton")
local Guns = Instance.new("TextButton")
local fPunch = Instance.new("TextButton")
local tAura = Instance.new("TextButton")
local kAura = Instance.new("TextButton")
local rFire = Instance.new("TextButton")
local fSpawn = Instance.new("TextButton")
local TextLabel = Instance.new("TextLabel")
local Guard = Instance.new("TextButton")
local Inmate = Instance.new("TextButton")
local Neutral = Instance.new("TextButton")
local Crim = Instance.new("TextButton")
local Cuffs = Instance.new("TextButton")
local cAura = Instance.new("TextButton")
local aTools = Instance.new("TextButton")
local aStun = Instance.new("TextButton")
local Kothers = Instance.new("TextButton")
local Kguards = Instance.new("TextButton")
local Kinmates = Instance.new("TextButton")
local Kcrims = Instance.new("TextButton")
local KillBox = Instance.new("TextBox")
local KillPlayer = Instance.new("TextButton")
local HurtPlayer = Instance.new("TextButton")
local HurtBox = Instance.new("TextBox")
local Shieldonspawn = Instance.new("TextButton")
local TKill = Instance.new("TextButton")
local Hothers = Instance.new("TextButton")
local Hguards = Instance.new("TextButton")
local Hinmates = Instance.new("TextButton")
local Hcrims = Instance.new("TextButton")
local rPunch = Instance.new("TextButton")
local FTKill = Instance.new("TextButton")
local Btool = Instance.new("TextButton")
local Doors = Instance.new("TextButton")
local Walls = Instance.new("TextButton")
local Shotgunonspawn = Instance.new("TextButton")
local Antivoid = Instance.new("TextButton")
local Hide = Instance.new("TextButton")
local Nclip = Instance.new("TextButton")
local WhatDa = Instance.new("TextButton")
local Wlistfolder = Instance.new("TextButton")
local Whitelistbox = Instance.new("TextBox")
local Addwhitelist = Instance.new("TextButton")
local SilentGuns = Instance.new("TextButton")
local ArrestBox = Instance.new("TextBox")
local ArrestPlayer = Instance.new("TextButton")
local M9onspawn = Instance.new("TextButton")
local AKonspawn = Instance.new("TextButton")
local Autokey = Instance.new("TextButton")
local Getkey = Instance.new("TextButton")
local Antishield = Instance.new("TextButton")
local Getmelee = Instance.new("TextButton")
local BringCarLongest = Instance.new("TextButton")
local BringCarShortest = Instance.new("TextButton")
local Teleports = Instance.new("TextButton")
local Invis = Instance.new("TextButton")
local SpawnCarr = Instance.new("TextButton")
local Afterfire = Instance.new("TextButton")
local AntiMelee = Instance.new("TextButton")
local HitboxExp = Instance.new("TextButton")
local AntiShoot = Instance.new("TextButton")
local Show = Instance.new("TextButton")
local Hint = Instance.new("TextLabel")
local Whitelists = Instance.new("Frame")
local List = Instance.new("ScrollingFrame")
local UIListLayout = Instance.new("UIListLayout")
local WhitelistTemplate = Instance.new("TextButton")
local TextLabel_2 = Instance.new("TextLabel")
local TeleportsFrame = Instance.new("Frame")
local TpTitle = Instance.new("TextLabel")
local TeleportsContainer = Instance.new("Frame")
local UIGridLayout = Instance.new("UIGridLayout")
local TeleportBTNTemplate = Instance.new("TextButton")
local TpBox = Instance.new("TextBox")
local TpToPlayer = Instance.new("TextButton")
local BringPlayer = Instance.new("TextButton")
local BringBox = Instance.new("TextBox")
local cmdbar = Instance.new("Frame")
local cmdboxmain = Instance.new("TextBox")
local TextLabel_3 = Instance.new("TextLabel")

--Properties:

Sv.LPlr.Idled:Connect(function()
	pcall(function()
		for i=15,0,-1 do
			svc("VirtualUser"):CaptureController()
			svc("VirtualUser"):ClickButton2(Vector2.new())
			WAIT(math.random(1,5))
		end
	end)

end)

PrisonG.Name="PrisonG"
if not svc("RunService"):IsStudio() then
	PrisonG.Parent=svc("CoreGui")
else
	PrisonG.Parent=svc("Players")
end

Whitelists.Active=true
Whitelists.Draggable=true
TeleportsFrame.Active=true
TeleportsFrame.Draggable=true
Main.Active=true
Main.Draggable=true;Whitelists.Draggable=true;TeleportsFrame.Draggable=true

cmdbar.Active=true
cmdbar.Draggable=true

Main.Name = "Main"
Main.Parent = PrisonG
Main.BackgroundColor3 = Color3.fromRGB(125, 125, 125)
Main.BorderColor3 = Color3.fromRGB(0, 0, 0)
Main.BorderSizePixel = 0
Main.Position = UDim2.new(0.38035959, 0, 0.229327813, 0)
Main.Size = UDim2.new(0.239109978, 0, 0.538461685, 0)

aRE.Name = "aRE"
aRE.Parent = Main
aRE.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
aRE.BorderColor3 = Color3.fromRGB(0, 0, 0)
aRE.BorderSizePixel = 0
aRE.Position = UDim2.new(0.0242722705, 0, 0.158562303, 0)
aRE.Size = UDim2.new(0.181818187, 0, 0.0471380465, 0)
aRE.Font = Enum.Font.SourceSans
aRE.Text = "AutoRE"
aRE.TextColor3 = Color3.fromRGB(0, 0, 0)
aRE.TextScaled = true
aRE.TextSize = 14.000
aRE.TextWrapped = true

sPunch.Name = "sPunch"
sPunch.Parent = Main
sPunch.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
sPunch.BorderColor3 = Color3.fromRGB(0, 0, 0)
sPunch.BorderSizePixel = 0
sPunch.Position = UDim2.new(0.218898907, 0, 0.161682442, 0)
sPunch.Size = UDim2.new(0.181818187, 0, 0.0471380465, 0)
sPunch.Font = Enum.Font.SourceSans
sPunch.Text = "SuperPunch"
sPunch.TextColor3 = Color3.fromRGB(0, 0, 0)
sPunch.TextScaled = true
sPunch.TextSize = 14.000
sPunch.TextWrapped = true

Guns.Name = "Guns"
Guns.Parent = Main
Guns.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
Guns.BorderColor3 = Color3.fromRGB(0, 0, 0)
Guns.BorderSizePixel = 0
Guns.Position = UDim2.new(0.0242722705, 0, 0.294170082, 0)
Guns.Size = UDim2.new(0.181818187, 0, 0.0471380465, 0)
Guns.Font = Enum.Font.SourceSans
Guns.Text = "Guns"
Guns.TextColor3 = Color3.fromRGB(0, 0, 0)
Guns.TextScaled = true
Guns.TextSize = 14.000
Guns.TextWrapped = true

fPunch.Name = "fPunch"
fPunch.Parent = Main
fPunch.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
fPunch.BorderColor3 = Color3.fromRGB(0, 0, 0)
fPunch.BorderSizePixel = 0
fPunch.Position = UDim2.new(0.218898907, 0, 0.233953252, 0)
fPunch.Size = UDim2.new(0.181818187, 0, 0.0471380465, 0)
fPunch.Font = Enum.Font.SourceSans
fPunch.Text = "FastPunch"
fPunch.TextColor3 = Color3.fromRGB(0, 0, 0)
fPunch.TextScaled = true
fPunch.TextSize = 14.000
fPunch.TextWrapped = true

tAura.Name = "tAura"
tAura.Parent = Main
tAura.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
tAura.BorderColor3 = Color3.fromRGB(0, 0, 0)
tAura.BorderSizePixel = 0
tAura.Position = UDim2.new(0.218898907, 0, 0.420158565, 0)
tAura.Size = UDim2.new(0.181818187, 0, 0.0471380465, 0)
tAura.Font = Enum.Font.SourceSans
tAura.Text = "TeamAura"
tAura.TextColor3 = Color3.fromRGB(0, 0, 0)
tAura.TextScaled = true
tAura.TextSize = 14.000
tAura.TextWrapped = true

kAura.Name = "kAura"
kAura.Parent = Main
kAura.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
kAura.BorderColor3 = Color3.fromRGB(0, 0, 0)
kAura.BorderSizePixel = 0
kAura.Position = UDim2.new(0.0242722705, 0, 0.417038441, 0)
kAura.Size = UDim2.new(0.181818187, 0, 0.0471380465, 0)
kAura.Font = Enum.Font.SourceSans
kAura.Text = "KillAura"
kAura.TextColor3 = Color3.fromRGB(0, 0, 0)
kAura.TextScaled = true
kAura.TextSize = 14.000
kAura.TextWrapped = true

rFire.Name = "rFire"
rFire.Parent = Main
rFire.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
rFire.BorderColor3 = Color3.fromRGB(0, 0, 0)
rFire.BorderSizePixel = 0
rFire.Position = UDim2.new(0.414741844, 0, 0.230833322, 0)
rFire.Size = UDim2.new(0.181818187, 0, 0.0471380465, 0)
rFire.Font = Enum.Font.SourceSans
rFire.Text = "RapidFire"
rFire.TextColor3 = Color3.fromRGB(0, 0, 0)
rFire.TextScaled = true
rFire.TextSize = 14.000
rFire.TextWrapped = true

fSpawn.Name = "fSpawn"
fSpawn.Parent = Main
fSpawn.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
fSpawn.BorderColor3 = Color3.fromRGB(0, 0, 0)
fSpawn.BorderSizePixel = 0
fSpawn.Position = UDim2.new(0.0242722705, 0, 0.230833322, 0)
fSpawn.Size = UDim2.new(0.181818187, 0, 0.0471380465, 0)
fSpawn.Font = Enum.Font.SourceSans
fSpawn.Text = "FastSpawn"
fSpawn.TextColor3 = Color3.fromRGB(0, 0, 0)
fSpawn.TextScaled = true
fSpawn.TextSize = 14.000
fSpawn.TextWrapped = true

TextLabel.Parent = Main
TextLabel.BackgroundColor3 = Color3.fromRGB(145, 145, 145)
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Position = UDim2.new(0, 0, 1.55174121e-07, 0)
TextLabel.Size = UDim2.new(0.99999994, 0, 0.13131313, 0)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = "Unloaded Prisonlife v1.5"
TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true

Guard.Name = "Guard"
Guard.Parent = Main
Guard.BackgroundColor3 = Color3.fromRGB(30, 158, 255)
Guard.BorderColor3 = Color3.fromRGB(0, 0, 0)
Guard.BorderSizePixel = 0
Guard.Position = UDim2.new(0.0284087285, 0, 0.657353282, 0)
Guard.Size = UDim2.new(0.158102766, 0, 0.0538720526, 0)
Guard.Font = Enum.Font.SourceSans
Guard.Text = "Guard"
Guard.TextColor3 = Color3.fromRGB(0, 0, 0)
Guard.TextScaled = true
Guard.TextSize = 14.000
Guard.TextWrapped = true

Inmate.Name = "Inmate"
Inmate.Parent = Main
Inmate.BackgroundColor3 = Color3.fromRGB(255, 150, 65)
Inmate.BorderColor3 = Color3.fromRGB(0, 0, 0)
Inmate.BorderSizePixel = 0
Inmate.Position = UDim2.new(0.199968293, 0, 0.657353282, 0)
Inmate.Size = UDim2.new(0.160079047, 0, 0.0538720526, 0)
Inmate.Font = Enum.Font.SourceSans
Inmate.Text = "Inmate"
Inmate.TextColor3 = Color3.fromRGB(0, 0, 0)
Inmate.TextScaled = true
Inmate.TextSize = 14.000
Inmate.TextWrapped = true

Neutral.Name = "Neutral"
Neutral.Parent = Main
Neutral.BackgroundColor3 = Color3.fromRGB(171, 171, 171)
Neutral.BorderColor3 = Color3.fromRGB(0, 0, 0)
Neutral.BorderSizePixel = 0
Neutral.Position = UDim2.new(0.372600317, 0, 0.657353282, 0)
Neutral.Size = UDim2.new(0.160079047, 0, 0.0538720526, 0)
Neutral.Font = Enum.Font.SourceSans
Neutral.Text = "Neutral"
Neutral.TextColor3 = Color3.fromRGB(0, 0, 0)
Neutral.TextScaled = true
Neutral.TextSize = 14.000
Neutral.TextWrapped = true

Crim.Name = "Crim"
Crim.Parent = Main
Crim.BackgroundColor3 = Color3.fromRGB(255, 30, 30)
Crim.BorderColor3 = Color3.fromRGB(0, 0, 0)
Crim.BorderSizePixel = 0
Crim.Position = UDim2.new(0.544159889, 0, 0.657353282, 0)
Crim.Size = UDim2.new(0.164031625, 0, 0.0538720526, 0)
Crim.Font = Enum.Font.SourceSans
Crim.Text = "Criminal"
Crim.TextColor3 = Color3.fromRGB(0, 0, 0)
Crim.TextScaled = true
Crim.TextSize = 14.000
Crim.TextWrapped = true

Cuffs.Name = "Cuffs"
Cuffs.Parent = Main
Cuffs.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
Cuffs.BorderColor3 = Color3.fromRGB(0, 0, 0)
Cuffs.BorderSizePixel = 0
Cuffs.Position = UDim2.new(0.414741844, 0, 0.158562303, 0)
Cuffs.Size = UDim2.new(0.181818187, 0, 0.0471380465, 0)
Cuffs.Font = Enum.Font.SourceSans
Cuffs.Text = "SmartCuffs"
Cuffs.TextColor3 = Color3.fromRGB(0, 0, 0)
Cuffs.TextScaled = true
Cuffs.TextSize = 14.000
Cuffs.TextWrapped = true

cAura.Name = "cAura"
cAura.Parent = Main
cAura.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
cAura.BorderColor3 = Color3.fromRGB(0, 0, 0)
cAura.BorderSizePixel = 0
cAura.Position = UDim2.new(0.414741844, 0, 0.417038441, 0)
cAura.Size = UDim2.new(0.181818187, 0, 0.0471380465, 0)
cAura.Font = Enum.Font.SourceSans
cAura.Text = "ArrestAura"
cAura.TextColor3 = Color3.fromRGB(0, 0, 0)
cAura.TextScaled = true
cAura.TextSize = 14.000
cAura.TextWrapped = true

aTools.Name = "aTools"
aTools.Parent = Main
aTools.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
aTools.BorderColor3 = Color3.fromRGB(0, 0, 0)
aTools.BorderSizePixel = 0
aTools.Position = UDim2.new(0.414741844, 0, 0.355585337, 0)
aTools.Size = UDim2.new(0.181818187, 0, 0.0471380465, 0)
aTools.Font = Enum.Font.SourceSans
aTools.Text = "AntiTools"
aTools.TextColor3 = Color3.fromRGB(0, 0, 0)
aTools.TextScaled = true
aTools.TextSize = 14.000
aTools.TextWrapped = true

aStun.Name = "aStun"
aStun.Parent = Main
aStun.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
aStun.BorderColor3 = Color3.fromRGB(0, 0, 0)
aStun.BorderSizePixel = 0
aStun.Position = UDim2.new(0.414741844, 0, 0.294170082, 0)
aStun.Size = UDim2.new(0.181818187, 0, 0.0471380465, 0)
aStun.Font = Enum.Font.SourceSans
aStun.Text = "AntiStun"
aStun.TextColor3 = Color3.fromRGB(0, 0, 0)
aStun.TextScaled = true
aStun.TextSize = 14.000
aStun.TextWrapped = true

Kothers.Name = "Kothers"
Kothers.Parent = Main
Kothers.BackgroundColor3 = Color3.fromRGB(170, 170, 170)
Kothers.BorderColor3 = Color3.fromRGB(0, 0, 0)
Kothers.BorderSizePixel = 0
Kothers.Position = UDim2.new(0.0262732226, 0, 0.725182116, 0)
Kothers.Size = UDim2.new(0.158102766, 0, 0.0471380465, 0)
Kothers.Font = Enum.Font.SourceSans
Kothers.Text = "Kill others"
Kothers.TextColor3 = Color3.fromRGB(0, 0, 0)
Kothers.TextScaled = true
Kothers.TextSize = 14.000
Kothers.TextWrapped = true

Kguards.Name = "Kguards"
Kguards.Parent = Main
Kguards.BackgroundColor3 = Color3.fromRGB(53, 184, 255)
Kguards.BorderColor3 = Color3.fromRGB(0, 0, 0)
Kguards.BorderSizePixel = 0
Kguards.Position = UDim2.new(0.197832972, 0, 0.725182116, 0)
Kguards.Size = UDim2.new(0.160079047, 0, 0.0471380465, 0)
Kguards.Font = Enum.Font.SourceSans
Kguards.Text = "Kill Cops"
Kguards.TextColor3 = Color3.fromRGB(0, 0, 0)
Kguards.TextScaled = true
Kguards.TextSize = 14.000
Kguards.TextWrapped = true

Kinmates.Name = "Kinmates"
Kinmates.Parent = Main
Kinmates.BackgroundColor3 = Color3.fromRGB(255, 147, 52)
Kinmates.BorderColor3 = Color3.fromRGB(0, 0, 0)
Kinmates.BorderSizePixel = 0
Kinmates.Position = UDim2.new(0.370464951, 0, 0.725182116, 0)
Kinmates.Size = UDim2.new(0.160079047, 0, 0.0471380465, 0)
Kinmates.Font = Enum.Font.SourceSans
Kinmates.Text = "Kill Inmates"
Kinmates.TextColor3 = Color3.fromRGB(0, 0, 0)
Kinmates.TextScaled = true
Kinmates.TextSize = 14.000
Kinmates.TextWrapped = true

Kcrims.Name = "Kcrims"
Kcrims.Parent = Main
Kcrims.BackgroundColor3 = Color3.fromRGB(255, 25, 25)
Kcrims.BorderColor3 = Color3.fromRGB(0, 0, 0)
Kcrims.BorderSizePixel = 0
Kcrims.Position = UDim2.new(0.542024493, 0, 0.725182116, 0)
Kcrims.Size = UDim2.new(0.164031625, 0, 0.0471380465, 0)
Kcrims.Font = Enum.Font.SourceSans
Kcrims.Text = "Kill Crims"
Kcrims.TextColor3 = Color3.fromRGB(0, 0, 0)
Kcrims.TextScaled = true
Kcrims.TextSize = 14.000
Kcrims.TextWrapped = true

KillBox.Name = "KillBox"
KillBox.Parent = Main
KillBox.BackgroundColor3 = Color3.fromRGB(226, 111, 255)
KillBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
KillBox.BorderSizePixel = 0
KillBox.Position = UDim2.new(0.023137873, 0, 0.477624744, 0)
KillBox.Size = UDim2.new(0.179841891, 0, 0.0808080807, 0)
KillBox.Font = Enum.Font.SourceSans
KillBox.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
KillBox.PlaceholderText = "PlayerName"
KillBox.Text = ""
KillBox.TextColor3 = Color3.fromRGB(0, 0, 0)
KillBox.TextScaled = true
KillBox.TextSize = 14.000
KillBox.TextWrapped = true

KillPlayer.Name = "KillPlayer"
KillPlayer.Parent = Main
KillPlayer.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
KillPlayer.BorderColor3 = Color3.fromRGB(0, 0, 0)
KillPlayer.BorderSizePixel = 0
KillPlayer.Position = UDim2.new(0.023137873, 0, 0.568439126, 0)
KillPlayer.Size = UDim2.new(0.179841891, 0, 0.0606060624, 0)
KillPlayer.Font = Enum.Font.SourceSans
KillPlayer.Text = "Kill!"
KillPlayer.TextColor3 = Color3.fromRGB(0, 0, 0)
KillPlayer.TextScaled = true
KillPlayer.TextSize = 14.000
KillPlayer.TextWrapped = true

HurtPlayer.Name = "HurtPlayer"
HurtPlayer.Parent = Main
HurtPlayer.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
HurtPlayer.BorderColor3 = Color3.fromRGB(0, 0, 0)
HurtPlayer.BorderSizePixel = 0
HurtPlayer.Position = UDim2.new(0.218899086, 0, 0.567894995, 0)
HurtPlayer.Size = UDim2.new(0.183794469, 0, 0.0606060624, 0)
HurtPlayer.Font = Enum.Font.SourceSans
HurtPlayer.Text = "Hurt!"
HurtPlayer.TextColor3 = Color3.fromRGB(0, 0, 0)
HurtPlayer.TextScaled = true
HurtPlayer.TextSize = 14.000
HurtPlayer.TextWrapped = true

HurtBox.Name = "HurtBox"
HurtBox.Parent = Main
HurtBox.BackgroundColor3 = Color3.fromRGB(226, 111, 255)
HurtBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
HurtBox.BorderSizePixel = 0
HurtBox.Position = UDim2.new(0.218899086, 0, 0.477624744, 0)
HurtBox.Size = UDim2.new(0.183794469, 0, 0.0808080807, 0)
HurtBox.Font = Enum.Font.SourceSans
HurtBox.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
HurtBox.PlaceholderText = "PlayerName"
HurtBox.Text = ""
HurtBox.TextColor3 = Color3.fromRGB(0, 0, 0)
HurtBox.TextScaled = true
HurtBox.TextSize = 14.000
HurtBox.TextWrapped = true

Shieldonspawn.Name = "Shieldonspawn"
Shieldonspawn.Parent = Main
Shieldonspawn.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
Shieldonspawn.BorderColor3 = Color3.fromRGB(0, 0, 0)
Shieldonspawn.BorderSizePixel = 0
Shieldonspawn.Position = UDim2.new(0.812383354, 0, 0.440271854, 0)
Shieldonspawn.Size = UDim2.new(0.173913047, 0, 0.0538720526, 0)
Shieldonspawn.Font = Enum.Font.SourceSans
Shieldonspawn.Text = "Shield"
Shieldonspawn.TextColor3 = Color3.fromRGB(0, 0, 0)
Shieldonspawn.TextScaled = true
Shieldonspawn.TextSize = 14.000
Shieldonspawn.TextWrapped = true

TKill.Name = "TKill"
TKill.Parent = Main
TKill.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
TKill.BorderColor3 = Color3.fromRGB(0, 0, 0)
TKill.BorderSizePixel = 0
TKill.Position = UDim2.new(0.0242722705, 0, 0.354757607, 0)
TKill.Size = UDim2.new(0.181818187, 0, 0.0471380465, 0)
TKill.Font = Enum.Font.SourceSans
TKill.Text = "TouchKill"
TKill.TextColor3 = Color3.fromRGB(0, 0, 0)
TKill.TextScaled = true
TKill.TextSize = 14.000
TKill.TextWrapped = true

Hothers.Name = "Hothers"
Hothers.Parent = Main
Hothers.BackgroundColor3 = Color3.fromRGB(170, 170, 170)
Hothers.BorderColor3 = Color3.fromRGB(0, 0, 0)
Hothers.BorderSizePixel = 0
Hothers.Position = UDim2.new(0.0262732226, 0, 0.785068631, 0)
Hothers.Size = UDim2.new(0.158102766, 0, 0.0471380465, 0)
Hothers.Font = Enum.Font.SourceSans
Hothers.Text = "Hurt others"
Hothers.TextColor3 = Color3.fromRGB(0, 0, 0)
Hothers.TextScaled = true
Hothers.TextSize = 14.000
Hothers.TextWrapped = true

Hguards.Name = "Hguards"
Hguards.Parent = Main
Hguards.BackgroundColor3 = Color3.fromRGB(53, 184, 255)
Hguards.BorderColor3 = Color3.fromRGB(0, 0, 0)
Hguards.BorderSizePixel = 0
Hguards.Position = UDim2.new(0.197832972, 0, 0.785068631, 0)
Hguards.Size = UDim2.new(0.160079047, 0, 0.0471380465, 0)
Hguards.Font = Enum.Font.SourceSans
Hguards.Text = "Hurt Cops"
Hguards.TextColor3 = Color3.fromRGB(0, 0, 0)
Hguards.TextScaled = true
Hguards.TextSize = 14.000
Hguards.TextWrapped = true

Hinmates.Name = "Hinmates"
Hinmates.Parent = Main
Hinmates.BackgroundColor3 = Color3.fromRGB(255, 147, 52)
Hinmates.BorderColor3 = Color3.fromRGB(0, 0, 0)
Hinmates.BorderSizePixel = 0
Hinmates.Position = UDim2.new(0.370464951, 0, 0.785068631, 0)
Hinmates.Size = UDim2.new(0.160079047, 0, 0.0471380465, 0)
Hinmates.Font = Enum.Font.SourceSans
Hinmates.Text = "Hurt Inmates"
Hinmates.TextColor3 = Color3.fromRGB(0, 0, 0)
Hinmates.TextScaled = true
Hinmates.TextSize = 14.000
Hinmates.TextWrapped = true

Hcrims.Name = "Hcrims"
Hcrims.Parent = Main
Hcrims.BackgroundColor3 = Color3.fromRGB(255, 25, 25)
Hcrims.BorderColor3 = Color3.fromRGB(0, 0, 0)
Hcrims.BorderSizePixel = 0
Hcrims.Position = UDim2.new(0.542024493, 0, 0.785068631, 0)
Hcrims.Size = UDim2.new(0.164031625, 0, 0.0471380465, 0)
Hcrims.Font = Enum.Font.SourceSans
Hcrims.Text = "Hurt Crims"
Hcrims.TextColor3 = Color3.fromRGB(0, 0, 0)
Hcrims.TextScaled = true
Hcrims.TextSize = 14.000
Hcrims.TextWrapped = true

rPunch.Name = "rPunch"
rPunch.Parent = Main
rPunch.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
rPunch.BorderColor3 = Color3.fromRGB(0, 0, 0)
rPunch.BorderSizePixel = 0
rPunch.Position = UDim2.new(0.218898907, 0, 0.296776474, 0)
rPunch.Size = UDim2.new(0.181818187, 0, 0.0471380465, 0)
rPunch.Font = Enum.Font.SourceSans
rPunch.Text = "RapidPunch"
rPunch.TextColor3 = Color3.fromRGB(0, 0, 0)
rPunch.TextScaled = true
rPunch.TextSize = 14.000
rPunch.TextWrapped = true

FTKill.Name = "FTKill"
FTKill.Parent = Main
FTKill.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
FTKill.BorderColor3 = Color3.fromRGB(0, 0, 0)
FTKill.BorderSizePixel = 0
FTKill.Position = UDim2.new(0.218898907, 0, 0.357877672, 0)
FTKill.Size = UDim2.new(0.181818187, 0, 0.0471380465, 0)
FTKill.Font = Enum.Font.SourceSans
FTKill.Text = "TeamTouchKill"
FTKill.TextColor3 = Color3.fromRGB(0, 0, 0)
FTKill.TextScaled = true
FTKill.TextSize = 14.000
FTKill.TextWrapped = true

Btool.Name = "Btool"
Btool.Parent = Main
Btool.BackgroundColor3 = Color3.fromRGB(55, 98, 255)
Btool.BorderColor3 = Color3.fromRGB(0, 0, 0)
Btool.BorderSizePixel = 0
Btool.Position = UDim2.new(0.613420427, 0, 0.157707706, 0)
Btool.Size = UDim2.new(0.181818187, 0, 0.0538720526, 0)
Btool.Font = Enum.Font.SourceSans
Btool.Text = "Btools"
Btool.TextColor3 = Color3.fromRGB(0, 0, 0)
Btool.TextScaled = true
Btool.TextSize = 14.000
Btool.TextWrapped = true

Doors.Name = "Doors"
Doors.Parent = Main
Doors.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
Doors.BorderColor3 = Color3.fromRGB(0, 0, 0)
Doors.BorderSizePixel = 0
Doors.Position = UDim2.new(0.812383354, 0, 0.157636553, 0)
Doors.Size = UDim2.new(0.171936765, 0, 0.0538720526, 0)
Doors.Font = Enum.Font.SourceSans
Doors.Text = "NoDoors"
Doors.TextColor3 = Color3.fromRGB(0, 0, 0)
Doors.TextScaled = true
Doors.TextSize = 14.000
Doors.TextWrapped = true

Walls.Name = "Walls"
Walls.Parent = Main
Walls.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
Walls.BorderColor3 = Color3.fromRGB(0, 0, 0)
Walls.BorderSizePixel = 0
Walls.Position = UDim2.new(0.812383354, 0, 0.235929444, 0)
Walls.Size = UDim2.new(0.171936765, 0, 0.0538720526, 0)
Walls.Font = Enum.Font.SourceSans
Walls.Text = "NoWalls"
Walls.TextColor3 = Color3.fromRGB(0, 0, 0)
Walls.TextScaled = true
Walls.TextSize = 14.000
Walls.TextWrapped = true

Shotgunonspawn.Name = "Shotgunonspawn"
Shotgunonspawn.Parent = Main
Shotgunonspawn.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
Shotgunonspawn.BorderColor3 = Color3.fromRGB(0, 0, 0)
Shotgunonspawn.BorderSizePixel = 0
Shotgunonspawn.Position = UDim2.new(0.613420427, 0, 0.371749729, 0)
Shotgunonspawn.Size = UDim2.new(0.181818187, 0, 0.0538720526, 0)
Shotgunonspawn.Font = Enum.Font.SourceSans
Shotgunonspawn.Text = "Shotgun"
Shotgunonspawn.TextColor3 = Color3.fromRGB(0, 0, 0)
Shotgunonspawn.TextScaled = true
Shotgunonspawn.TextSize = 14.000
Shotgunonspawn.TextWrapped = true

Antivoid.Name = "Antivoid"
Antivoid.Parent = Main
Antivoid.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
Antivoid.BorderColor3 = Color3.fromRGB(0, 0, 0)
Antivoid.BorderSizePixel = 0
Antivoid.Position = UDim2.new(0.812383354, 0, 0.305303752, 0)
Antivoid.Size = UDim2.new(0.171936765, 0, 0.0538720526, 0)
Antivoid.Font = Enum.Font.SourceSans
Antivoid.Text = "Antivoid"
Antivoid.TextColor3 = Color3.fromRGB(0, 0, 0)
Antivoid.TextScaled = true
Antivoid.TextSize = 14.000
Antivoid.TextWrapped = true

Hide.Name = "Hide"
Hide.Parent = Main
Hide.BackgroundColor3 = Color3.fromRGB(255, 119, 119)
Hide.BorderColor3 = Color3.fromRGB(0, 0, 0)
Hide.BorderSizePixel = 0
Hide.Position = UDim2.new(0.929688692, 0, 1.55174121e-07, 0)
Hide.Size = UDim2.new(0.0770751014, 0, 0.13131313, 0)
Hide.Font = Enum.Font.SourceSansBold
Hide.Text = "X"
Hide.TextColor3 = Color3.fromRGB(0, 0, 0)
Hide.TextScaled = true
Hide.TextSize = 14.000
Hide.TextWrapped = true

Nclip.Name = "Nclip"
Nclip.Parent = Main
Nclip.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
Nclip.BorderColor3 = Color3.fromRGB(0, 0, 0)
Nclip.BorderSizePixel = 0
Nclip.Position = UDim2.new(0.613420188, 0, 0.234965056, 0)
Nclip.Size = UDim2.new(0.179841891, 0, 0.0538720526, 0)
Nclip.Font = Enum.Font.SourceSans
Nclip.Text = "Noclip"
Nclip.TextColor3 = Color3.fromRGB(0, 0, 0)
Nclip.TextScaled = true
Nclip.TextSize = 14.000
Nclip.TextWrapped = true

WhatDa.Name = "WhatDa"
WhatDa.Parent = Main
WhatDa.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
WhatDa.BorderColor3 = Color3.fromRGB(0, 0, 0)
WhatDa.BorderSizePixel = 0
WhatDa.Position = UDim2.new(0.613420188, 0, 0.306973428, 0)
WhatDa.Size = UDim2.new(0.179841891, 0, 0.0538720526, 0)
WhatDa.Font = Enum.Font.SourceSans
WhatDa.Text = "Broken Back"
WhatDa.TextColor3 = Color3.fromRGB(0, 0, 0)
WhatDa.TextScaled = true
WhatDa.TextSize = 14.000
WhatDa.TextWrapped = true

Wlistfolder.Name = "Wlistfolder"
Wlistfolder.Parent = Main
Wlistfolder.BackgroundColor3 = Color3.fromRGB(214, 46, 214)
Wlistfolder.BorderColor3 = Color3.fromRGB(0, 0, 0)
Wlistfolder.BorderSizePixel = 0
Wlistfolder.Position = UDim2.new(0.72510922, 0, 0.779545426, 0)
Wlistfolder.Size = UDim2.new(0.258893281, 0, 0.0538720526, 0)
Wlistfolder.Font = Enum.Font.SourceSans
Wlistfolder.Text = "Whitelists"
Wlistfolder.TextColor3 = Color3.fromRGB(0, 0, 0)
Wlistfolder.TextScaled = true
Wlistfolder.TextSize = 14.000
Wlistfolder.TextWrapped = true

Whitelistbox.Name = "Whitelistbox"
Whitelistbox.Parent = Main
Whitelistbox.BackgroundColor3 = Color3.fromRGB(226, 111, 255)
Whitelistbox.BorderColor3 = Color3.fromRGB(0, 0, 0)
Whitelistbox.BorderSizePixel = 0
Whitelistbox.Position = UDim2.new(0.72510922, 0, 0.657353282, 0)
Whitelistbox.Size = UDim2.new(0.258893281, 0, 0.0471380465, 0)
Whitelistbox.Font = Enum.Font.SourceSans
Whitelistbox.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
Whitelistbox.PlaceholderText = "PlayerName"
Whitelistbox.Text = ""
Whitelistbox.TextColor3 = Color3.fromRGB(0, 0, 0)
Whitelistbox.TextScaled = true
Whitelistbox.TextSize = 14.000
Whitelistbox.TextWrapped = true

Addwhitelist.Name = "Addwhitelist"
Addwhitelist.Parent = Main
Addwhitelist.BackgroundColor3 = Color3.fromRGB(255, 0, 132)
Addwhitelist.BorderColor3 = Color3.fromRGB(0, 0, 0)
Addwhitelist.BorderSizePixel = 0
Addwhitelist.Position = UDim2.new(0.724601626, 0, 0.711728394, 0)
Addwhitelist.Size = UDim2.new(0.262845844, 0, 0.0572390556, 0)
Addwhitelist.Font = Enum.Font.SourceSans
Addwhitelist.Text = "Whitelist player!"
Addwhitelist.TextColor3 = Color3.fromRGB(0, 0, 0)
Addwhitelist.TextScaled = true
Addwhitelist.TextSize = 14.000
Addwhitelist.TextWrapped = true

SilentGuns.Name = "SilentGuns"
SilentGuns.Parent = Main
SilentGuns.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
SilentGuns.BorderColor3 = Color3.fromRGB(0, 0, 0)
SilentGuns.BorderSizePixel = 0
SilentGuns.Position = UDim2.new(0.675174773, 0, 0.848214924, 0)
SilentGuns.Size = UDim2.new(0.148221344, 0, 0.0538720526, 0)
SilentGuns.Font = Enum.Font.SourceSans
SilentGuns.Text = "SilentGuns"
SilentGuns.TextColor3 = Color3.fromRGB(0, 0, 0)
SilentGuns.TextScaled = true
SilentGuns.TextSize = 14.000
SilentGuns.TextWrapped = true

ArrestBox.Name = "ArrestBox"
ArrestBox.Parent = Main
ArrestBox.BackgroundColor3 = Color3.fromRGB(226, 111, 255)
ArrestBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
ArrestBox.BorderSizePixel = 0
ArrestBox.Position = UDim2.new(0.413725108, 0, 0.477624744, 0)
ArrestBox.Size = UDim2.new(0.179841891, 0, 0.0808080807, 0)
ArrestBox.Font = Enum.Font.SourceSans
ArrestBox.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
ArrestBox.PlaceholderText = "PlayerName"
ArrestBox.Text = ""
ArrestBox.TextColor3 = Color3.fromRGB(0, 0, 0)
ArrestBox.TextScaled = true
ArrestBox.TextSize = 14.000
ArrestBox.TextWrapped = true

ArrestPlayer.Name = "ArrestPlayer"
ArrestPlayer.Parent = Main
ArrestPlayer.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
ArrestPlayer.BorderColor3 = Color3.fromRGB(0, 0, 0)
ArrestPlayer.BorderSizePixel = 0
ArrestPlayer.Position = UDim2.new(0.413725108, 0, 0.567894995, 0)
ArrestPlayer.Size = UDim2.new(0.179841891, 0, 0.0606060624, 0)
ArrestPlayer.Font = Enum.Font.SourceSans
ArrestPlayer.Text = "Arrest!"
ArrestPlayer.TextColor3 = Color3.fromRGB(0, 0, 0)
ArrestPlayer.TextScaled = true
ArrestPlayer.TextSize = 14.000
ArrestPlayer.TextWrapped = true

M9onspawn.Name = "M9onspawn"
M9onspawn.Parent = Main
M9onspawn.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
M9onspawn.BorderColor3 = Color3.fromRGB(0, 0, 0)
M9onspawn.BorderSizePixel = 0
M9onspawn.Position = UDim2.new(0.613420427, 0, 0.438572228, 0)
M9onspawn.Size = UDim2.new(0.181818187, 0, 0.0538720526, 0)
M9onspawn.Font = Enum.Font.SourceSans
M9onspawn.Text = "M9"
M9onspawn.TextColor3 = Color3.fromRGB(0, 0, 0)
M9onspawn.TextScaled = true
M9onspawn.TextSize = 14.000
M9onspawn.TextWrapped = true

AKonspawn.Name = "AKonspawn"
AKonspawn.Parent = Main
AKonspawn.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
AKonspawn.BorderColor3 = Color3.fromRGB(0, 0, 0)
AKonspawn.BorderSizePixel = 0
AKonspawn.Position = UDim2.new(0.812383354, 0, 0.376486778, 0)
AKonspawn.Size = UDim2.new(0.173913047, 0, 0.0538720526, 0)
AKonspawn.Font = Enum.Font.SourceSans
AKonspawn.Text = "AK"
AKonspawn.TextColor3 = Color3.fromRGB(0, 0, 0)
AKonspawn.TextScaled = true
AKonspawn.TextSize = 14.000
AKonspawn.TextWrapped = true

Autokey.Name = "Autokey"
Autokey.Parent = Main
Autokey.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
Autokey.BorderColor3 = Color3.fromRGB(0, 0, 0)
Autokey.BorderSizePixel = 0
Autokey.Position = UDim2.new(0.613420427, 0, 0.508431911, 0)
Autokey.Size = UDim2.new(0.181818187, 0, 0.0505050495, 0)
Autokey.Font = Enum.Font.SourceSans
Autokey.Text = "Auto key"
Autokey.TextColor3 = Color3.fromRGB(0, 0, 0)
Autokey.TextScaled = true
Autokey.TextSize = 14.000
Autokey.TextWrapped = true

Getkey.Name = "Getkey"
Getkey.Parent = Main
Getkey.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
Getkey.BorderColor3 = Color3.fromRGB(0, 0, 0)
Getkey.BorderSizePixel = 0
Getkey.Position = UDim2.new(0.613420427, 0, 0.578291833, 0)
Getkey.Size = UDim2.new(0.181818187, 0, 0.0538720526, 0)
Getkey.Font = Enum.Font.SourceSans
Getkey.Text = "Get key"
Getkey.TextColor3 = Color3.fromRGB(0, 0, 0)
Getkey.TextScaled = true
Getkey.TextSize = 14.000
Getkey.TextWrapped = true

Antishield.Name = "Antishield"
Antishield.Parent = Main
Antishield.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
Antishield.BorderColor3 = Color3.fromRGB(0, 0, 0)
Antishield.BorderSizePixel = 0
Antishield.Position = UDim2.new(0.812383354, 0, 0.510131657, 0)
Antishield.Size = UDim2.new(0.173913047, 0, 0.0505050495, 0)
Antishield.Font = Enum.Font.SourceSans
Antishield.Text = "Antishield"
Antishield.TextColor3 = Color3.fromRGB(0, 0, 0)
Antishield.TextScaled = true
Antishield.TextSize = 14.000
Antishield.TextWrapped = true

Getmelee.Name = "Getmelee"
Getmelee.Parent = Main
Getmelee.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
Getmelee.BorderColor3 = Color3.fromRGB(0, 0, 0)
Getmelee.BorderSizePixel = 0
Getmelee.Position = UDim2.new(0.810247958, 0, 0.57999146, 0)
Getmelee.Size = UDim2.new(0.173913047, 0, 0.0538720526, 0)
Getmelee.Font = Enum.Font.SourceSans
Getmelee.Text = "Melees"
Getmelee.TextColor3 = Color3.fromRGB(0, 0, 0)
Getmelee.TextScaled = true
Getmelee.TextSize = 14.000
Getmelee.TextWrapped = true

BringCarLongest.Name = "BringCarLongest"
BringCarLongest.Parent = Main
BringCarLongest.BackgroundColor3 = Color3.fromRGB(231, 24, 148)
BringCarLongest.BorderColor3 = Color3.fromRGB(0, 0, 0)
BringCarLongest.BorderSizePixel = 0
BringCarLongest.Position = UDim2.new(0.517306745, 0, 0.848214924, 0)
BringCarLongest.Size = UDim2.new(0.146245062, 0, 0.0538720526, 0)
BringCarLongest.Font = Enum.Font.SourceSans
BringCarLongest.Text = "BringCar [Far]"
BringCarLongest.TextColor3 = Color3.fromRGB(0, 0, 0)
BringCarLongest.TextScaled = true
BringCarLongest.TextSize = 14.000
BringCarLongest.TextWrapped = true

BringCarShortest.Name = "BringCarShortest"
BringCarShortest.Parent = Main
BringCarShortest.BackgroundColor3 = Color3.fromRGB(231, 24, 148)
BringCarShortest.BorderColor3 = Color3.fromRGB(0, 0, 0)
BringCarShortest.BorderSizePixel = 0
BringCarShortest.Position = UDim2.new(0.359208286, 0, 0.848214924, 0)
BringCarShortest.Size = UDim2.new(0.144268781, 0, 0.0538720526, 0)
BringCarShortest.Font = Enum.Font.SourceSans
BringCarShortest.Text = "BringCar [Near]"
BringCarShortest.TextColor3 = Color3.fromRGB(0, 0, 0)
BringCarShortest.TextScaled = true
BringCarShortest.TextSize = 14.000
BringCarShortest.TextWrapped = true

Teleports.Name = "Teleports"
Teleports.Parent = Main
Teleports.BackgroundColor3 = Color3.fromRGB(255, 248, 153)
Teleports.BorderColor3 = Color3.fromRGB(0, 0, 0)
Teleports.BorderSizePixel = 0
Teleports.Position = UDim2.new(0.0284086689, 0, 0.848214924, 0)
Teleports.Size = UDim2.new(0.154150203, 0, 0.0538720526, 0)
Teleports.Font = Enum.Font.SourceSans
Teleports.Text = "Teleports"
Teleports.TextColor3 = Color3.fromRGB(0, 0, 0)
Teleports.TextScaled = true
Teleports.TextSize = 14.000
Teleports.TextWrapped = true

Invis.Name = "Invis"
Invis.Parent = Main
Invis.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
Invis.BorderColor3 = Color3.fromRGB(0, 0, 0)
Invis.BorderSizePixel = 0
Invis.Position = UDim2.new(0.836877644, 0, 0.848214924, 0)
Invis.Size = UDim2.new(0.148221344, 0, 0.0538720526, 0)
Invis.Font = Enum.Font.SourceSans
Invis.Text = "Invisible"
Invis.TextColor3 = Color3.fromRGB(0, 0, 0)
Invis.TextScaled = true
Invis.TextSize = 14.000
Invis.TextWrapped = true

SpawnCarr.Name = "SpawnCarr"
SpawnCarr.Parent = Main
SpawnCarr.BackgroundColor3 = Color3.fromRGB(181, 31, 231)
SpawnCarr.BorderColor3 = Color3.fromRGB(0, 0, 0)
SpawnCarr.BorderSizePixel = 0
SpawnCarr.Position = UDim2.new(0.197832853, 0, 0.848214924, 0)
SpawnCarr.Size = UDim2.new(0.144268781, 0, 0.0538720526, 0)
SpawnCarr.Font = Enum.Font.SourceSans
SpawnCarr.Text = "Spawncar"
SpawnCarr.TextColor3 = Color3.fromRGB(0, 0, 0)
SpawnCarr.TextScaled = true
SpawnCarr.TextSize = 14.000
SpawnCarr.TextWrapped = true

Afterfire.Name = "Afterfire"
Afterfire.Parent = Main
Afterfire.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
Afterfire.BorderColor3 = Color3.fromRGB(0, 0, 0)
Afterfire.BorderSizePixel = 0
Afterfire.Position = UDim2.new(0.76664257, 0, 0.922288895, 0)
Afterfire.Size = UDim2.new(0.215415016, 0, 0.0538720526, 0)
Afterfire.Font = Enum.Font.SourceSans
Afterfire.Text = "UsegunsWhiledead"
Afterfire.TextColor3 = Color3.fromRGB(0, 0, 0)
Afterfire.TextScaled = true
Afterfire.TextSize = 14.000
Afterfire.TextWrapped = true

AntiMelee.Name = "AntiMelee"
AntiMelee.Parent = Main
AntiMelee.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
AntiMelee.BorderColor3 = Color3.fromRGB(0, 0, 0)
AntiMelee.BorderSizePixel = 0
AntiMelee.Position = UDim2.new(0.283022434, 0, 0.922288895, 0)
AntiMelee.Size = UDim2.new(0.223320156, 0, 0.0538720526, 0)
AntiMelee.Font = Enum.Font.SourceSans
AntiMelee.Text = "AntiPunch"
AntiMelee.TextColor3 = Color3.fromRGB(0, 0, 0)
AntiMelee.TextScaled = true
AntiMelee.TextSize = 14.000
AntiMelee.TextWrapped = true

HitboxExp.Name = "HitboxExp"
HitboxExp.Parent = Main
HitboxExp.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
HitboxExp.BorderColor3 = Color3.fromRGB(0, 0, 0)
HitboxExp.BorderSizePixel = 0
HitboxExp.Position = UDim2.new(0.0291687734, 0, 0.922288895, 0)
HitboxExp.Size = UDim2.new(0.239130437, 0, 0.0538720526, 0)
HitboxExp.Font = Enum.Font.SourceSans
HitboxExp.Text = "Hitbox Expander"
HitboxExp.TextColor3 = Color3.fromRGB(0, 0, 0)
HitboxExp.TextScaled = true
HitboxExp.TextSize = 14.000
HitboxExp.TextWrapped = true

AntiShoot.Name = "AntiShoot"
AntiShoot.Parent = Main
AntiShoot.BackgroundColor3 = Color3.fromRGB(255, 74, 74)
AntiShoot.BorderColor3 = Color3.fromRGB(0, 0, 0)
AntiShoot.BorderSizePixel = 0
AntiShoot.Position = UDim2.new(0.524670124, 0, 0.922288895, 0)
AntiShoot.Size = UDim2.new(0.223320156, 0, 0.0538720526, 0)
AntiShoot.Font = Enum.Font.SourceSans
AntiShoot.Text = "AntiShoot"
AntiShoot.TextColor3 = Color3.fromRGB(0, 0, 0)
AntiShoot.TextScaled = true
AntiShoot.TextSize = 14.000
AntiShoot.TextWrapped = true

Show.Name = "Show"
Show.Parent = PrisonG
Show.BackgroundColor3 = Color3.fromRGB(108, 255, 130)
Show.BorderColor3 = Color3.fromRGB(0, 0, 0)
Show.BorderSizePixel = 0
Show.Position = UDim2.new(0, 0, 0.924083769, 0)
Show.Size = UDim2.new(0, 29, 0, 29)
Show.Visible = false
Show.Font = Enum.Font.SourceSans
Show.Text = "O"
Show.TextColor3 = Color3.fromRGB(0, 0, 0)
Show.TextScaled = true
Show.TextSize = 14.000
Show.TextWrapped = true

Hint.Name = "Hint"
Hint.Parent = PrisonG
Hint.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Hint.BackgroundTransparency = 0.600
Hint.BorderColor3 = Color3.fromRGB(0, 0, 0)
Hint.BorderSizePixel = 0
Hint.Position = UDim2.new(0.438709676, 0, 0.411465704, 0)
Hint.Size = UDim2.new(0, 156, 0, 32)
Hint.Visible = false
Hint.Font = Enum.Font.SourceSansBold
Hint.Text = ""
Hint.TextColor3 = Color3.fromRGB(255, 255, 255)
Hint.TextScaled = true
Hint.TextSize = 14.000
Hint.TextWrapped = true

Whitelists.Name = "Whitelists"
Whitelists.Parent = PrisonG
Whitelists.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Whitelists.BorderColor3 = Color3.fromRGB(0, 0, 0)
Whitelists.BorderSizePixel = 0
Whitelists.Position = UDim2.new(0.418433189, 0, 0.0446428582, 0)
Whitelists.Size = UDim2.new(0, 297, 0, 306)
Whitelists.Visible = false

List.Name = "List"
List.Parent = Whitelists
List.Active = true
List.BackgroundColor3 = Color3.fromRGB(57, 255, 248)
List.BorderColor3 = Color3.fromRGB(0, 0, 0)
List.BorderSizePixel = 0
List.Position = UDim2.new(0, 0, 0.120641671, 0)
List.Size = UDim2.new(0, 297, 0, 269)
List.CanvasSize = UDim2.new(0, 0, 4, 0)

UIListLayout.Parent = List
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

WhitelistTemplate.Name = "WhitelistTemplate"
WhitelistTemplate.Parent = List
WhitelistTemplate.BackgroundColor3 = Color3.fromRGB(255, 21, 134)
WhitelistTemplate.BorderColor3 = Color3.fromRGB(0, 0, 0)
WhitelistTemplate.BorderSizePixel = 0
WhitelistTemplate.Size = UDim2.new(1, 0, 0.0350000001, 0)
WhitelistTemplate.Visible = false
WhitelistTemplate.Font = Enum.Font.SourceSans
WhitelistTemplate.Text = ""
WhitelistTemplate.TextColor3 = Color3.fromRGB(0, 0, 0)
WhitelistTemplate.TextScaled = true
WhitelistTemplate.TextSize = 14.000
WhitelistTemplate.TextWrapped = true

TextLabel_2.Parent = Whitelists
TextLabel_2.BackgroundColor3 = Color3.fromRGB(2, 103, 255)
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Size = UDim2.new(0, 297, 0, 36)
TextLabel_2.Font = Enum.Font.SourceSans
TextLabel_2.Text = "Whitelists"
TextLabel_2.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 14.000
TextLabel_2.TextWrapped = true

TeleportsFrame.Name = "TeleportsFrame"
TeleportsFrame.Parent = PrisonG
TeleportsFrame.BackgroundColor3 = Color3.fromRGB(18, 94, 181)
TeleportsFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
TeleportsFrame.BorderSizePixel = 0
TeleportsFrame.Position = UDim2.new(0.374433368, 0, 0.0620155036, 0)
TeleportsFrame.Size = UDim2.new(0, 290, 0, 327)
TeleportsFrame.Visible = false

TpTitle.Name = "TpTitle"
TpTitle.Parent = TeleportsFrame
TpTitle.BackgroundColor3 = Color3.fromRGB(49, 120, 191)
TpTitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
TpTitle.BorderSizePixel = 0
TpTitle.Size = UDim2.new(0, 290, 0, 35)
TpTitle.Font = Enum.Font.SourceSans
TpTitle.Text = "Teleporter (works with cars too!)"
TpTitle.TextColor3 = Color3.fromRGB(0, 0, 0)
TpTitle.TextScaled = true
TpTitle.TextSize = 14.000
TpTitle.TextWrapped = true

TeleportsContainer.Name = "TeleportsContainer"
TeleportsContainer.Parent = TeleportsFrame
TeleportsContainer.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TeleportsContainer.BackgroundTransparency = 1.000
TeleportsContainer.BorderColor3 = Color3.fromRGB(0, 0, 0)
TeleportsContainer.BorderSizePixel = 0
TeleportsContainer.Position = UDim2.new(0, 0, 0.104000002, 0)
TeleportsContainer.Size = UDim2.new(1, 0, 0, 242)

UIGridLayout.Parent = TeleportsContainer
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellPadding = UDim2.new(0.0130000003, 0, 0.0109999999, 0)
UIGridLayout.CellSize = UDim2.new(0.239999995, 0, 0.0900000036, 0)

TeleportBTNTemplate.Name = "TeleportBTNTemplate"
TeleportBTNTemplate.Parent = TeleportsContainer
TeleportBTNTemplate.BackgroundColor3 = Color3.fromRGB(69, 173, 38)
TeleportBTNTemplate.BorderColor3 = Color3.fromRGB(0, 0, 0)
TeleportBTNTemplate.BorderSizePixel = 0
TeleportBTNTemplate.Size = UDim2.new(0, 200, 0, 50)
TeleportBTNTemplate.Visible = false
TeleportBTNTemplate.Font = Enum.Font.SourceSans
TeleportBTNTemplate.Text = ""
TeleportBTNTemplate.TextColor3 = Color3.fromRGB(0, 0, 0)
TeleportBTNTemplate.TextScaled = true
TeleportBTNTemplate.TextSize = 14.000
TeleportBTNTemplate.TextWrapped = true

TpBox.Name = "TpBox"
TpBox.Parent = TeleportsFrame
TpBox.BackgroundColor3 = Color3.fromRGB(220, 94, 255)
TpBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
TpBox.BorderSizePixel = 0
TpBox.Position = UDim2.new(0.0143693592, 0, 0.859547675, 0)
TpBox.Size = UDim2.new(0, 142, 0, 17)
TpBox.Font = Enum.Font.Cartoon
TpBox.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
TpBox.PlaceholderText = "PlayerName"
TpBox.Text = ""
TpBox.TextColor3 = Color3.fromRGB(0, 0, 0)
TpBox.TextScaled = true
TpBox.TextSize = 14.000
TpBox.TextWrapped = true

TpToPlayer.Name = "TpToPlayer"
TpToPlayer.Parent = TeleportsFrame
TpToPlayer.BackgroundColor3 = Color3.fromRGB(220, 94, 255)
TpToPlayer.BorderColor3 = Color3.fromRGB(0, 0, 0)
TpToPlayer.BorderSizePixel = 0
TpToPlayer.Position = UDim2.new(0.53103447, 0, 0.859327137, 0)
TpToPlayer.Size = UDim2.new(0, 132, 0, 17)
TpToPlayer.Font = Enum.Font.Cartoon
TpToPlayer.Text = "Goto!"
TpToPlayer.TextColor3 = Color3.fromRGB(0, 0, 0)
TpToPlayer.TextScaled = true
TpToPlayer.TextSize = 14.000
TpToPlayer.TextWrapped = true

BringPlayer.Name = "BringPlayer"
BringPlayer.Parent = TeleportsFrame
BringPlayer.BackgroundColor3 = Color3.fromRGB(220, 94, 255)
BringPlayer.BorderColor3 = Color3.fromRGB(0, 0, 0)
BringPlayer.BorderSizePixel = 0
BringPlayer.Position = UDim2.new(0.53103447, 0, 0.929663539, 0)
BringPlayer.Size = UDim2.new(0, 132, 0, 17)
BringPlayer.Font = Enum.Font.Cartoon
BringPlayer.Text = "Bring!"
BringPlayer.TextColor3 = Color3.fromRGB(0, 0, 0)
BringPlayer.TextScaled = true
BringPlayer.TextSize = 14.000
BringPlayer.TextWrapped = true

BringBox.Name = "BringBox"
BringBox.Parent = TeleportsFrame
BringBox.BackgroundColor3 = Color3.fromRGB(220, 94, 255)
BringBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
BringBox.BorderSizePixel = 0
BringBox.Position = UDim2.new(0.0143693592, 0, 0.929884017, 0)
BringBox.Size = UDim2.new(0, 142, 0, 17)
BringBox.Font = Enum.Font.Cartoon
BringBox.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
BringBox.PlaceholderText = "PlayerName"
BringBox.Text = ""
BringBox.TextColor3 = Color3.fromRGB(0, 0, 0)
BringBox.TextScaled = true
BringBox.TextSize = 14.000
BringBox.TextWrapped = true

cmdbar.Name = "cmdbar"
cmdbar.Parent = PrisonG
cmdbar.BackgroundColor3 = Color3.fromRGB(255, 158, 47)
cmdbar.BorderColor3 = Color3.fromRGB(0, 0, 0)
cmdbar.BorderSizePixel = 0
cmdbar.Position = UDim2.new(0.256164372, 0, 0.659517407, 0)
cmdbar.Size = UDim2.new(0.12328767, 0, 0.107238606, 0)

cmdboxmain.Name = "cmdboxmain"
cmdboxmain.Parent = cmdbar
cmdboxmain.BackgroundColor3 = Color3.fromRGB(137, 255, 131)
cmdboxmain.BorderColor3 = Color3.fromRGB(0, 0, 0)
cmdboxmain.BorderSizePixel = 0
cmdboxmain.Position = UDim2.new(0, 0, 0.409636676, 0)
cmdboxmain.Size = UDim2.new(1, 0, 0.580747962, 0)
cmdboxmain.Font = Enum.Font.SourceSans
cmdboxmain.PlaceholderColor3 = Color3.fromRGB(0, 0, 0)
cmdboxmain.PlaceholderText = "type ;cmds for commands"
cmdboxmain.Text = ""
cmdboxmain.TextColor3 = Color3.fromRGB(0, 0, 0)
cmdboxmain.TextScaled = true
cmdboxmain.TextSize = 14.000
cmdboxmain.TextWrapped = true

TextLabel_3.Parent = cmdbar
TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 236, 94)
TextLabel_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_3.BorderSizePixel = 0
TextLabel_3.Size = UDim2.new(1, 0, 0.400000006, 0)
TextLabel_3.Font = Enum.Font.SourceSans
TextLabel_3.Text = "Cmdbar"
TextLabel_3.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_3.TextScaled = true
TextLabel_3.TextSize = 14.000
TextLabel_3.TextWrapped = true

Show.Visible=_F







local HoverSound=Sv.Ins("Sound",PrisonG)
local ClickSound=Sv.Ins("Sound",PrisonG)
HoverSound.SoundId="rbxassetid://4601634822"
HoverSound.Volume=0.65
HoverSound.Name="Hover"

ClickSound.SoundId="rbxassetid://8388724806"
ClickSound.Volume=0.3
ClickSound.Name="Click"

local EnabledColour=_A.R(0.156863, 1, 0.113725)
local DisabledColour=_A.R(1, 0.290196, 0.290196)

local ColourData = {
	red = {
		["Frame"] = Color3.fromRGB(198, 16, 16),
		["TextLabel"] = Color3.fromRGB(207, 90, 90),
		["Toggles"]=function()
			EnabledColour=_A.R(1, 0.384314, 0.384314)
			DisabledColour=_A.R(1, 0.572549, 0.572549)
		end,
	};
	orange = {
		["Frame"] = Color3.fromRGB(226, 132, 18),
		["TextLabel"] = Color3.fromRGB(207, 104, 19),
		["Toggles"]=function()
			EnabledColour=_A.R(1, 0.521569, 0.2)
			DisabledColour=_A.R(1, 0.662745, 0.388235)
		end,
	};
	yellow = {
		["Frame"] = Color3.fromRGB(226, 226, 14),
		["TextLabel"] = Color3.fromRGB(207, 193, 41),
		["Toggles"]=function()
			EnabledColour=_A.R(0.988235, 1, 0.243137)
			DisabledColour=_A.R(0.992157, 1, 0.631373)
		end,
	};
	green = {
		["Frame"] = Color3.fromRGB(48, 180, 4),
		["TextLabel"] = Color3.fromRGB(19, 165, 24),
		["Toggles"]=function()
			EnabledColour=_A.R(0.517647, 1, 0.490196)
			DisabledColour=_A.R(0.239216, 0.784314, 0.231373)
		end,
	};
	blue = {
		["Frame"] = Color3.fromRGB(0, 128, 226),
		["TextLabel"] = Color3.fromRGB(31, 92, 236),
		["Toggles"]=function()
			EnabledColour=_A.R(0.027451, 0.611765, 1)
			DisabledColour=_A.R(0.298039, 0.717647, 1)
		end,
	};
	purple = {
		["Frame"] = Color3.fromRGB(106, 0, 255),
		["TextLabel"] = Color3.fromRGB(169, 36, 236),
		["Toggles"]=function()
			EnabledColour=_A.R(0.435294, 0.172549, 1)
			DisabledColour=_A.R(0.556863, 0.298039, 1)
		end,
	};
	pink = {
		["Frame"] = Color3.fromRGB(226, 0, 207),
		["TextLabel"] = Color3.fromRGB(236, 52, 221),
		["Toggles"]=function()
			EnabledColour=_A.R(0.960784, 0.65098, 1)
			DisabledColour=_A.R(0.713725, 0.384314, 1)
		end,
	};
}

pcall(function()
	if _G.UISettings ~= nil then
		if typeof(_G.UISettings) == "table" then
			for i,value in pairs(_G.UISettings) do
				if i == "Colour" then
					for i,v in pairs(ColourData) do
						if string.lower(value) == i then
							for class,ColourValue in pairs(v) do
								for i,object in pairs(PrisonG:GetDescendants()) do
									if typeof(object)=="function" then
										object()
									else
										if object.ClassName == class then
											object.BackgroundColor3 = ColourValue
										end
									end
								end
								if _G.UISettings.builtInExecutor==true then
									if Executor ~= nil then
										for i,object in pairs(Executor:GetDescendants()) do
											if object.ClassName == class then
												object.BackgroundColor3 = ColourValue
											end
										end
									end
								end
							end
							break
						end
					end
				elseif i == "ClickSound" then
					ClickSound.SoundId = value
				elseif i == "HoverSound" then
					HoverSound.SoundId = value
				end
			end
		end
	end
end)

for i,v in Sv.P(PrisonG:GetDescendants())do
	if v[_B.C]==_B.A then
		v.MouseEnter:Connect(function()HoverSound:Play()end)
		v[_A.K]:Connect(function()ClickSound:Play()end)
	end
end



local textchatservice=svc("TextChatService")
local ReplicatedStorage=svc("ReplicatedStorage")
local MeleeEvent=ReplicatedStorage:FindFirstChild("meleeEvent")
local SoundEvent=ReplicatedStorage:FindFirstChild("SoundEvent1") or ReplicatedStorage:FindFirstChild("SoundEvent")

SoundEvent:Clone().Parent=ReplicatedStorage
SoundEvent.Name="SoundEvent1"

if SoundEventConnection_4039850934 ~= nil then
	if typeof(SoundEventConnection_4039850934)=="RBXScriptConnection"then
		SoundEventConnection_4039850934:Disconnect()
	end
end

SoundEventConnection_4039850934 = SoundEvent.OnClientEvent:Connect(function(Sound)
	if Sound.Parent ~= nil then
		if Sound.Parent:GetAttribute(Sound.Name)==nil then
			Sound.Parent:SetAttribute(Sound.Name,"")
			local A = Sound:Clone()
			A.Parent=Sound.Parent
			A:Play()
			game:GetService("Debris"):AddItem(A,A.TimeLength)
			A=nil
			WAIT(0.05)
			Sound.Parent:SetAttribute(Sound.Name,nil)



		end
	end
end)

local AddedWhitelists={}
local PreferredAdminsPrefix={}
local ChattedConnections={}
local Defaultprefix=";"

local LocalisedFunctions={}

local RealHRP=nil
local FakeHRP=nil

local Mouse=Sv.LPlr:GetMouse()

local UserOwnsRiotGamepass=game:GetService("MarketplaceService"):UserOwnsGamePassAsync(Sv.LPlr.UserId,643697197)

if not UserOwnsRiotGamepass then UserOwnsRiotGamepass=game:GetService("MarketplaceService"):UserOwnsGamePassAsync(Sv.LPlr.UserId,96651)end


local Doors1=workspace:FindFirstChild("Doors")
local Prison_ITEMS=workspace:FindFirstChild("Prison_ITEMS")

local Riot_Shield, AK47, M4A1, Remington, M9 =workspace.Prison_ITEMS.giver["Riot Shield"],Prison_ITEMS.giver:FindFirstChild("AK-47"),Prison_ITEMS.giver:FindFirstChild("M4A1"),Prison_ITEMS.giver:FindFirstChild("Remington 870"),Prison_ITEMS.giver:FindFirstChild("M9")

local Crude_Knife, Hammer = workspace.Prison_ITEMS.single:FindFirstChild("Crude Knife"),workspace.Prison_ITEMS.single:FindFirstChild("Hammer")

local Remote = workspace:FindFirstChild("Remote")
local ItemHandler=Remote:FindFirstChild("ItemHandler")
local TeamEvent=Remote:FindFirstChild("TeamEvent")
local arrest = Remote:FindFirstChild("arrest")
local equipShield = Remote:FindFirstChild("equipShield")

Remote:GetPropertyChangedSignal("Name"):Connect(function()
	TeamEvent.Name="Remote"
end)
TeamEvent:GetPropertyChangedSignal("Name"):Connect(function()
	TeamEvent.Name="TeamEvent"
end)

local ScriptSettings = {}
ScriptSettings.ExplosionSize=10
ScriptSettings.DeathExplosionSize=15
ScriptSettings.InfectAuraSize=15
ScriptSettings.FriendlyFire=0


function ChangeAtt(AttributeName,NewValue)
	if ScriptSettings[AttributeName] then
		if tonumber(NewValue) ~= nil then
			ScriptSettings[AttributeName]=tonumber(NewValue)
			warn("SET",AttributeName,"TO:",tostring(NewValue).."!")
		end
	end
end


local States={}

States.SuperPunch =_F
States.AutoRE =_F
States.FastPunch =_F
States.KillAura =_F
States.FastSpawn =_F
States.RapidFire =_F
States.TeamAura =_F
States.CuffAura =_F
States.SmartCuffs =_F
States.AntiStun =_F
States.AntiBackpack =_F
States.TeamTouchKill =_F
States.TouchKill =_F
States.RapidPunch =_F
States.NoWalls =_F
States.NoDoors =_F
States.Noclip =_F
States.AntiVoid =_F
States.AlwaysAK =_F
States.AlwaysM9 =_F
States.AlwaysShotgun =_F
States.AlwaysShield =_F
States.AlwaysKeycard =_F
States.Alawysmelees =_F
States.IsAntishield =_F
States.Invis =_F
States.SilentGuns =_F
States.UseGunsWhileDead =_F
States.HitboxExpander =_F
States.AntiMelee =_F
States.AntiShoot =_F

Hide[_A.K]:Connect(function()Main.Visible=_F Show.Visible=_T end)
Show[_A.K]:Connect(function()Main.Visible=_T Show.Visible=_F end)
Wlistfolder[_A.K]:Connect(function()Whitelists.Visible=not Whitelists.Visible end)
Teleports[_A.K]:Connect(function()TeleportsFrame.Visible=not TeleportsFrame.Visible end)

Guard[_A.K]:Connect(function()local CF=Sv.LPlr[_A.P].PrimaryPart.CFrame TeamEvent:FireServer("Bright blue")if States.AutoRE==_T then RE(CF)end CF=_N end)
Inmate[_A.K]:Connect(function()local CF=Sv.LPlr[_A.P].PrimaryPart.CFrame TeamEvent:FireServer("Bright orange")if States.AutoRE==_T then RE(CF)end CF=_N end)
Neutral[_A.K]:Connect(function()local AA = Sv.LPlr[_A.P]:FindFirstChild("HumanoidRootPart") local CF=Sv.LPlr[_A.P].PrimaryPart.CFrame TeamEvent:FireServer("Medium stone grey")if States.AutoRE==_T then RE(CF)end CF=_N for i=0,5 do WAIT(0.05)Sv.LPlr.PlayerGui.Home.intro.Visible=_F;Sv.LPlr.PlayerGui.Home.hud.Visible=_T;
		workspace.CurrentCamera.CameraType=Enum.CameraType.Custom
		workspace.CurrentCamera.CameraSubject=Sv.LPlr.Character:FindFirstChildOfClass("Humanoid")
	end 
	repeat  WAIT(0)if not AA:IsDescendantOf(workspace) then break end until not AA:IsDescendantOf(workspace)
	WAIT(0.1)
	AA=Sv.LPlr.Character:FindFirstChild("Torso")
	local REALHRP = Sv.LPlr.Character:FindFirstChild("HumanoidRootPart")
	REALHRP:Clone().Parent=REALHRP.Parent
	REALHRP:Destroy()
	repeat  WAIT(0)
	until AA:IsGrounded() or not AA:IsDescendantOf(workspace)
	AA.Anchored=false
	Sv.LPlr.Character.HumanoidRootPart.CFrame=CFrame.new(942, 100, 2376)
	AA=nil
	REALHRP=nil
	game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.All,true)
end)
Crim[_A.K]:Connect(function()
	local PrimaryPart=Sv.LPlr[_A.P].PrimaryPart
	if PrimaryPart~=_N then
		if PrimaryPart:GetAttribute("AA")==_N then
			Sv.New(function()
				PrimaryPart:SetAttribute("AA",1)
				svc("RunService").Heartbeat:Wait()
				svc("RunService").Heartbeat:Wait()
				PrimaryPart:SetAttribute("AA",nil)
			end)
		end
		local CrimSpawn=workspace["Criminals Spawn"].SpawnLocation
		local LastPos=CrimSpawn.CFrame
		CrimSpawn.Transparency=1
		CrimSpawn.CanCollide=_F
		CrimSpawn.CFrame=PrimaryPart.CFrame
		svc("RunService").Heartbeat:Wait()
		CrimSpawn.CFrame=LastPos
		CrimSpawn.Transparency=0
	end
end)

local WallsDat={}
if game.PlaceId==155615604 then
	WallsDat={
		workspace.Prison_Halls.walls,
		workspace.Prison_Halls.roof,
		workspace.Prison_Halls.outlines,
		workspace.Prison_Halls.lights,
		workspace.Prison_Halls.accent,
		workspace.Prison_Halls.glass,
		workspace.Prison_Cellblock:FindFirstChild("b_front"),
		workspace.Prison_Cellblock:FindFirstChild("doors"),
		workspace.Prison_Cellblock:FindFirstChild("c_tables"),
		workspace.Prison_Cellblock:FindFirstChild("a_front"),
		workspace.Prison_Cellblock:FindFirstChild("b_outerwall"),
		workspace.Prison_Cellblock:FindFirstChild("c_wall"),
		workspace.Prison_Cellblock:FindFirstChild("b_wall"),
		workspace.Prison_Cellblock:FindFirstChild("c_hallwall"),
		workspace.Prison_Cellblock:FindFirstChild("a_outerwall"),
		workspace.Prison_Cellblock:FindFirstChild("b_ramp"),
		workspace.Prison_Cellblock:FindFirstChild("a_ramp"),
		workspace.Prison_Cellblock:FindFirstChild("a_walls"),
		workspace.Prison_Cellblock:FindFirstChild("Cells_B"),
		workspace.Prison_Cellblock:FindFirstChild("Cells_A"),
		workspace.Prison_Cellblock:FindFirstChild("c_corner"),
		workspace.Prison_Cellblock:FindFirstChild("Wedge"),
		workspace.Prison_Cellblock:FindFirstChild("a_ceiling"),
		workspace.Prison_Cellblock:FindFirstChild("b_ceiling"),
		workspace.City_buildings,
		workspace.Prison_OuterWall,
		workspace.Prison_Fences,
		workspace.Prison_Guard_Outpost,
		workspace.Prison_Cafeteria.building,
		workspace.Prison_Cafeteria.glass,
		workspace.Prison_Cafeteria.oven,
		workspace.Prison_Cafeteria.shelves,
		workspace.Prison_Cafeteria.vents,
		workspace.Prison_Cafeteria.accents,
		workspace.Prison_Cafeteria["vending machine"],
		workspace.Prison_Cafeteria.Prison_table1,
		workspace.Prison_Cafeteria.counter,
		workspace.Prison_Cafeteria.boxes,
		workspace.Prison_Cafeteria["trash bins"]
	}
end

local uis = svc("UserInputService")

LocalisedFunctions.ScanForBacon = function(PlayerModel)
	if PlayerModel:FindFirstChild("Pal Hair") then
		return true
	elseif PlayerModel:FindFirstChild("Kate Hair") then
		return true
	elseif PlayerModel:FindFirstChild("Swag BaconAccessory") then
		return true
	elseif PlayerModel:FindFirstChild("eMO bACON hAIR") then
		return true
	elseif PlayerModel:FindFirstChild("Accessory (Meshes/PalHair_FallingGuestAccessory)") then
		return true
	elseif PlayerModel:FindFirstChild("Accessory (Kate)") then
		return true
	elseif PlayerModel:FindFirstChild("Hair") then
		local A = PlayerModel:FindFirstChild("Hair")
		if A ~= nil then
			local Handle = A:FindFirstChild("Handle")
			if Handle ~= nil then
				if Handle.ClassName=="MeshPart" then
					if Handle.MeshId=="rbxassetid://14640162487" then
						return true
					end
				end
			end
			Handle=nil
		end
		A=nil
	end
	return false
end

LocalisedFunctions.DragifyFrame = function(Frame)
	local dragging
	local dragInput
	local dragStart
	local startPos

	local function update(input)
		local delta = input.Position - dragStart
		Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		delta=nil
	end

	Frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = Frame.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	Frame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)

	uis.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
end

for i,v in pairs(PrisonG:GetDescendants()) do
	if v.ClassName=="Frame"then
		LocalisedFunctions.DragifyFrame(v)
	end
end

local function notify(msg,Colorr)
	if textchatservice.ChatVersion==Enum.ChatVersion.TextChatService then
		if textchatservice:FindFirstChild("TextChannels")==_N then repeat  WAIT(0)until textchatservice:FindFirstChild("TextChannels")~=_N end
		if textchatservice.TextChannels:FindFirstChild("RBXSystem")==_N then repeat  WAIT(0)until textchatservice.TextChannels:FindFirstChild("RBXSystem")~=_N end 
		if textchatservice.ChatVersion==Enum.ChatVersion.TextChatService then textchatservice.TextChannels.RBXSystem:DisplaySystemMessage([[<font color="]].."rgb("..tostring(Colorr.R*255)..","..tostring(Colorr.G*255)..","..tostring(Colorr.B*255)..[[)">]]..msg.."</font>")return end
	end
	svc("StarterGui"):SetCore("ChatMakeSystemMessage", 
	{ Text=tostring(msg), 
		Color=Colorr, 
		Font=_A.W.Arial, 
		FontSize=_A.V.Size96 
	} 
	)
end

local function ReformatString(String,Entire)
	if Entire then
		String=String:gsub("_","A")
		String=String:gsub("%p","") -- Removes all punctuation characters.
		String=String:gsub("£","")
		String=String:gsub("A","_")
		return String
	else
		local TEXT = String:sub(2,#String)
		TEXT=TEXT:gsub("_","A")
		TEXT=TEXT:gsub("%p","") -- Removes all punctuation characters.
		TEXT=TEXT:gsub("£","")
		TEXT=TEXT:gsub("A","_")
		return String:sub(0,1)..TEXT
	end
end

local function GetPlayer(String, OverrideLocalPlayer)-- Credit to Timeless/xFunnieuss
	local LP = Sv.LPlr
	if OverrideLocalPlayer~=_N then LP=OverrideLocalPlayer end
	if String==_N then return nil end
	if typeof(String)~="string"then return nil end

	String=String:lower()
	String=ReformatString(String,true)

	local Found={}
	local strl=String:lower()
	if strl=="all"or strl=="everyone"or strl=="everybody"then
		for i,v in Sv.P(Sv.Plrs:GetChildren())do
			_A.O(Found,v)
		end
	elseif strl=="others"then
		for i,v in Sv.P(Sv.Plrs:GetChildren())do
			if v.Name~=LP.Name then
				_A.O(Found,v)
			end
		end  
	elseif strl=="me"or strl=="myself"or strl=="self"then
		for i,v in Sv.P(Sv.Plrs:GetChildren())do
			if v.Name==LP.Name then
				_A.O(Found,v)
			end
		end 
	elseif strl=="us"or strl=="ourself"or strl=="ourselves"or strl=="team"then
		for i,v in Sv.P(Sv.Plrs:GetChildren())do
			if v.TeamColor.Name==LP.TeamColor.Name then
				_A.O(Found,v)
			end
		end 

	elseif strl=="riots"or strl=="swats"then
		for i,v in Sv.P(Sv.Plrs:GetChildren())do
			if v.Character ~= nil then
				if v.Character:FindFirstChild("vest") ~= nil then
					_A.O(Found,v)
				end
			end
		end
	elseif strl=="bacons"or strl=="baconhairs"then
		for i,v in Sv.P(Sv.Plrs:GetChildren())do
			if v.Character ~= nil then
				local Verify = LocalisedFunctions.ScanForBacon(v.Character)
				if Verify == true then
					_A.O(Found,v)
				end
				Verify=_N
			end
		end
	elseif strl=="nonbacons"or strl=="nonbaconhairs"then
		for i,v in Sv.P(Sv.Plrs:GetChildren())do
			if v.Character ~= nil then
				local Verify = LocalisedFunctions.ScanForBacon(v.Character)
				if Verify == false then
					_A.O(Found,v)
				end
				Verify=_N
			end
		end
	elseif strl=="hostiles"then
		local Format = {}
		for i,v in pairs(Sv.Plrs:GetChildren()) do
			if v.TeamColor.Name ~= "Bright blue" then
				_A.O(Format,v)
			end
		end
		for i,v in pairs(LocalisedFunctions.returnhostileplayers(Format)) do
			_A.O(Found,v)
		end
		Format=_N
	elseif strl=="nonhostiles"then
		local Format = {}
		for i,v in pairs(Sv.Plrs:GetPlayers()) do
			if v.TeamColor.Name ~= "Bright blue" then
				_A.O(Format,v)
			end
		end
		Format = LocalisedFunctions.returnhostileplayers(Format)
		for i,v in pairs(Sv.Plrs:GetPlayers()) do
			if table.find(Format,v) == nil then
				_A.O(Found,v)
			end
		end
		Format=_N
	elseif strl=="team"or strl=="teammates"then
		for i,v in Sv.P(Sv.Plrs:GetChildren())do
			if v.TeamColor.Name==LP.TeamColor.Name then
				_A.O(Found,v)
			end
		end 
	elseif strl=="guards"or strl=="police"then
		for i,v in Sv.P(Sv.Plrs:GetChildren())do
			if v.TeamColor.Name=="Bright blue" then
				_A.O(Found,v)
			end
		end 
	elseif strl=="inmates"or strl=="prisoners"then
		for i,v in Sv.P(Sv.Plrs:GetChildren())do
			if v.TeamColor.Name=="Bright orange" then
				_A.O(Found,v)
			end
		end 
	elseif strl=="criminals"or strl=="crims"then
		for i,v in Sv.P(Sv.Plrs:GetChildren())do
			if v.TeamColor.Name=="Really red" then
				_A.O(Found,v)
			end
		end 
	elseif strl=="admins"or strl=="whitelisted"then
		for i,v in Sv.P(Sv.Plrs:GetChildren())do
			if table.find(AddedWhitelists,v.UserId)~= nil then
				_A.O(Found,v)
			end
		end 
	elseif strl=="you"or strl=="nearest"or strl=="closest"then
		local ClosestPlr,Dist=nil,math.huge
		for i,v in Sv.P(Sv.Plrs:GetChildren())do
			if v.Name ~= LP.Name then
				local Char,Torso=v.Character,nil
				if Char ~= nil then
					Torso=Char:FindFirstChild("Torso")
					if Torso ~= nil then
						if (LP.Character.Torso.Position-Torso.Position).Magnitude < Dist then
							ClosestPlr,Dist=v,(LP.Character.Torso.Position-Torso.Position).Magnitude
						end
					end
				end
				Char,Torso=nil,nil
			end
		end 
		Dist=nil
		if ClosestPlr~= nil then _A.O(Found,ClosestPlr)end ClosestPlr=nil

	elseif strl=="furthest"or strl=="farthest"then
		local FurthestPlr,Dist=nil,0
		for i,v in Sv.P(Sv.Plrs:GetChildren())do
			if v.Name ~= LP.Name then
				local Char,Torso=v.Character,nil
				if Char ~= nil then
					Torso=Char:FindFirstChild("Torso")
					if Torso ~= nil then
						if (LP.Character.Torso.Position-Torso.Position).Magnitude > Dist then
							FurthestPlr,Dist=v,(LP.Character.Torso.Position-Torso.Position).Magnitude
						end
					end
				end
				Char,Torso=nil,nil
			end
		end 
		Dist=nil
		if FurthestPlr~= nil then _A.O(Found,FurthestPlr)end FurthestPlr=nil

	elseif strl=="nonadmins"or strl=="nonwhitelisted"then
		for i,v in Sv.P(Sv.Plrs:GetChildren())do
			if table.find(AddedWhitelists,v.UserId)== nil then
				_A.O(Found,v)
			end
		end 
	else
		for i,v in Sv.P(Sv.Plrs:GetChildren())do
			if v.Name:lower():sub(1, #String)==String:lower()then
				_A.O(Found,v)
			elseif v.DisplayName~=_N then
				if v.DisplayName:lower():sub(1, #String)==String:lower()then
					_A.O(Found,v)
				end
			end
		end  
	end
	LP=nil
	strl=nil
	return Found  
end

function RE(OldPos)
	local A=Sv.LPlr[_A.P]
	local IsCriminal=false
	local Primary = Sv.LPlr[_A.P]:FindFirstChild("HumanoidRootPart")or Sv.LPlr[_A.P].PrimaryPart
	if A==_N then repeat  WAIT(0)A=Sv.LPlr[_A.P] if A~=_N then break end until A~=_N end
	local LastPos=(OldPos or Primary.CFrame)
	Primary=nil
	if Sv.LPlr.Team.Name=="Guards" or Sv.LPlr.Team.Name=="Inmates"or Sv.LPlr.Team.Name=="Neutral"then
		if OldPos==_N then
			TeamEvent:FireServer(Sv.LPlr.TeamColor.Name)
		end
	elseif Sv.LPlr.Team.Name=="Criminals" then
		IsCriminal=true
		if OldPos==_N then
			TeamEvent:FireServer("Bright orange")
		end
	end
	repeat svc("RunService").Stepped:Wait()until not A:IsDescendantOf(workspace)repeat svc("RunService").Stepped:Wait()until Sv.LPlr[_A.P]~=_N
	local AA=Sv.LPlr[_A.P]
	repeat svc("RunService").Stepped:Wait()until AA.PrimaryPart~=_N
	AA.PrimaryPart.CFrame=LastPos
	local hasbeenteleported=_F
	for i=0,11 do
		AA=Sv.LPlr[_A.P]
		svc("RunService").Heartbeat:Wait()
		if AA~=_N then
			local PRIM=AA:FindFirstChild("HumanoidRootPart") or AA.PrimaryPart
			if PRIM~=_N then
				if (PRIM.Position-LastPos.Position).Magnitude >=10 then
					hasbeenteleported=_T
					PRIM.CFrame=LastPos
				end
			end
			PRIM=_N
		end
	end
	wait()
	if not hasbeenteleported then
		repeat
			local Primary = Sv.LPlr[_A.P]:FindFirstChild("HumanoidRootPart")or Sv.LPlr[_A.P].PrimaryPart
			if (Primary.Position-LastPos.Position).Magnitude >=15 then
				Sv.LPlr[_A.P].PrimaryPart.CFrame=LastPos
			end
			Primary.Velocity=Vector3.new(0,0,0)
			Primary.AssemblyAngularVelocity=Vector3.new(0,0,0)
			WAIT(0.1)
			if (Primary.Position-LastPos.Position).Magnitude <=15 then
				break
			end
			Primary=nil
		until 0 >1
	end
	if IsCriminal then
		local Primary = Sv.LPlr[_A.P]:FindFirstChild("HumanoidRootPart")or Sv.LPlr[_A.P].PrimaryPart
		if Primary~=_N then
			local CrimSpawn=workspace["Criminals Spawn"].SpawnLocation
			if CrimSpawn:GetAttribute("AA")==_N then
				Sv.New(function()
					CrimSpawn:SetAttribute("AA",1)
					svc("RunService").Heartbeat:Wait()
					svc("RunService").Heartbeat:Wait()
					CrimSpawn:SetAttribute("AA",nil)
				end)
			else
				repeat  WAIT(0.01)
				until CrimSpawn:GetAttribute("AA")==_N
			end
			local LastPos=CrimSpawn.CFrame
			CrimSpawn.Transparency=1
			CrimSpawn.CanCollide=_F
			CrimSpawn.CFrame=Primary.CFrame
			svc("RunService").Heartbeat:Wait()
			svc("RunService").Heartbeat:Wait()
			CrimSpawn.CFrame=LastPos
			CrimSpawn.Transparency=0;CrimSpawn=nil;LastPos=nil
		end;Primary=nil
	end;IsCriminal=_N
end 

LocalisedFunctions.getshield = function(equip)
	local Backpack,char=_N,_N
	local RiotShieldTool=_N
	for _,v in Sv.P(Sv.Plrs:GetPlayers())do
		if v.Name~=Sv.LPlr.Name then
			Backpack,char =v:FindFirstChildWhichIsA("Backpack"),v[_A.P]
			if Backpack~=_N then
				RiotShieldTool=Backpack:FindFirstChild("Riot Shield")
				if RiotShieldTool~=_N then
					break
				end
			end
			if char~=_N then
				RiotShieldTool=char:FindFirstChild("Riot Shield")
				if RiotShieldTool~=_N then
					break
				end
			end
			Backpack,char=_N,nil
		end
	end
	if RiotShieldTool~=_N then
		local Character=Sv.LPlr[_A.P]
		if Character~=_N then
			local Torso=Character:FindFirstChild("Torso")
			if Torso~=_N then
				local ShieldFolder=Torso:FindFirstChild("ShieldFolder")
				if ShieldFolder~=_N then
					local Shield=ShieldFolder:FindFirstChild("shield")
					if Shield==_N then
						if equip==_T then
							equipShield:FireServer(RiotShieldTool)
						end
					else
						if equip==_T then
							if Shield.Transparency==1 then
								equipShield:FireServer(RiotShieldTool)
							end
						end
					end
				else
					equipShield:FireServer(RiotShieldTool)
				end
			end
		end
	end
end

LocalisedFunctions.returnhostileplayers = function(PlayerTBL)
	local Hostiles ={}
	local ishostile=_F
	local HBackpack=nil
	local HChar=nil
	for i,v in Sv.P(PlayerTBL)do
		if tonumber(v)~=_N then
			v=Sv.Plrs:GetPlayerByUserId(tonumber(v))
		end
		if v==_N then continue end
		ishostile=_F
		local Status=v:FindFirstChild("Status")
		if Status~=_N then
			local Hostile=Status:FindFirstChild("isHostile")
			if Hostile~=_N then
				if Hostile.Value==_T then
					_A.O(Hostiles,v)
					ishostile=_T
				end
			end
		end
		if not ishostile then
			HChar=v[_A.P]
			HBackpack=v:FindFirstChild("Backpack")
			if HBackpack~=_N then
				for a,b in Sv.P(HBackpack:GetChildren())do
					if b[_B.C]=="Tool"then
						if b.Name=="Crude Knife" or b.Name=="Hammer"then
							ishostile=_T
							_A.O(Hostiles,v)
							break
						end
						if b:FindFirstChildWhichIsA("ModuleScript")then
							ishostile=_T
							_A.O(Hostiles,v)
							break
						end
					end
				end
			end
			if not ishostile then
				if HChar~=_N then
					local TOOL=HChar:FindFirstChildOfClass("Tool")
					if TOOL~=_N then
						if TOOL.Name=="Crude Knife" or TOOL.Name=="Hammer"then
							ishostile=_T
							_A.O(Hostiles,v)
						end
						if TOOL:FindFirstChildWhichIsA("ModuleScript")then
							ishostile=_T
							_A.O(Hostiles,v)
						end
					end
				end
			end
		end
	end
	return Hostiles
end

LocalisedFunctions.SpawnCar = function()
	if IsStudio then return end
	local ROOT = Sv.LPlr[_A.P].HumanoidRootPart
	local Oldpos=ROOT.CFrame
	local Carr=nil
	local HB=nil
	local HS=nil
	local HWheels=nil
	for i,v in Sv.P(workspace.Prison_ITEMS.buttons:GetChildren())do
		if v.Name=="Car Spawner"then
			ROOT.CFrame=v["Car Spawner"].CFrame
			Oldpos=v["Car Spawner"].CFrame
			local spawned=false
			repeat  WAIT(0.15)
				task.spawn(function()
					for i,v in pairs(workspace:GetPartBoundsInRadius(ROOT.Position,35)) do
						if v.ClassName=="VehicleSeat" then
							if v.Occupant == nil then
								spawned=true
								break
							end
						end
					end
					if spawned then return end
					local Response=""
					Response =ItemHandler:InvokeServer(v["Car Spawner"])
					if tostring(Response):match("You have spawned a car")then spawned=true end Response=nil

				end)
			until spawned==true
			spawned=nil
			break
		end 
	end
	WAIT(0.1)
	local Dist=math.huge
	for i,v in Sv.P(workspace.CarContainer:GetChildren())do
		HB=v:FindFirstChild("Body")
		if HB==_N then
			local Attempts = 20
			repeat  WAIT(0.05)Attempts-=1
				HB=v:FindFirstChild("Body")
				if HB~=_N then break end
				if Attempts<=0 then break end
			until HB~=_N
			Attempts=nil
			WAIT(0.07)
		end
		if HB~= nil then
			HWheels=v:FindFirstChild("Wheels")
			if HB~=_N then
				HS=HB:FindFirstChildWhichIsA("VehicleSeat")
				if HS~=_N then
					if (Oldpos.Position - HS.Position).Magnitude < Dist then
						if HS.Occupant==_N then
							Dist=(Oldpos.Position - HS.Position).Magnitude
							Carr=v
						end
					end
				end
			end
		end
	end
	HB=nil
	HS=nil
	HWheels=nil
	Dist=_N
	ROOT=nil
	return Carr
end

LocalisedFunctions.TeleportPlayer = function(Cframe)
	local Char= Sv.LPlr[_A.P] 
	if Char~=_N then
		local Humanoid,HRP=Char:FindFirstChildOfClass("Humanoid"),Char:FindFirstChild("HumanoidRootPart")
		if Humanoid~=_N then
			if HRP~=_N then
				local Car=Humanoid.SeatPart
				if Car~=_N then
					if Car[_B.C]=="VehicleSeat"then
						Car.CFrame=Cframe
						HRP.CFrame=Cframe
						Car.Velocity=Vector3.new(0,0,0)
						Car.AssemblyAngularVelocity=Vector3.new(0,0,0)
						for i,v in pairs(Car.Parent.Parent:GetDescendants()) do
							if v:IsA("BasePart") then
								if v.ClassName=="Model" then
								else
									v.Velocity=Vector3.new(0,0,0)
									v.AssemblyAngularVelocity=Vector3.new(0,0,0)
									v.CFrame=Cframe
								end
							end
						end
					else HRP.CFrame=Cframe HRP.Velocity=Vector3.new(0,0,0)HRP.AssemblyAngularVelocity=Vector3.new(0,0,0)
					end
				else Humanoid:ChangeState("Jumping") HRP.CFrame=Cframe HRP.Velocity=Vector3.new(0,0,0)HRP.AssemblyAngularVelocity=Vector3.new(0,0,0)
				end
				Car=_N
			end
		end
		Char,Humanoid,HRP=_N,nil,nil
	end
end

local function DoAutokillSeatedPlayers()
	local Head = Sv.LPlr.Character:FindFirstChild("Head") or Sv.LPlr.Character:FindFirstChild("Torso")
	if Head ~= nil then
		for i,v in pairs(workspace:GetPartBoundsInRadius(Head.Position,8.5)) do
			if v.Anchored==false then
				local Plrr = Sv.Plrs:GetPlayerFromCharacter(v.Parent)
				if Plrr ~= nil then
					if Plrr == Sv.LPlr then else
						local Char =Plrr.Character
						if Char ~= nil then
							local Humanoid =Char.Humanoid
							if Humanoid ~= nil then
								if Humanoid.SeatPart ~= nil then
									if Humanoid.Health>0 then
										for i=0,16 do MeleeEvent:FireServer(Plrr)end 
									end
								end
							end
							Humanoid=nil
						end
						Char=nil
					end
				end
				Plrr=nil
			end
		end
	end
	Head=nil
end

LocalisedFunctions.BringPlayerFunc = function(PlayerTBL,SpawnPoint,AutokillSeatedPlayers)
	if Sv.LPlr[_A.P]==_N then return end
	local HumanoidRootPart=Sv.LPlr.Character:FindFirstChild("HumanoidRootPart")or Sv.LPlr.Character:FindFirstChild("Torso")
	local OldPos=HumanoidRootPart.CFrame
	local LHumanoid=Sv.LPlr[_A.P]:FindFirstChildOfClass("Humanoid")
	if LHumanoid==_N then return end
	local Car=nil
	if LHumanoid.SeatPart==_N then repeat  WAIT(0) Car=LocalisedFunctions.SpawnCar()if Car~=_N then break end until Car~=_N 

		local HB=nil
		local HS=nil
		local HWheels=nil
		HB=Car:FindFirstChild("Body")
		HWheels=Car:FindFirstChild("Wheels")
		HS=HB:FindFirstChildWhichIsA("VehicleSeat")
		if HS.Occupant==_N then
			repeat  WAIT(0)
				if not HS:IsDescendantOf(workspace)then return end
				HumanoidRootPart.CFrame=HS.CFrame
				HS:Sit(LHumanoid)
				if not LHumanoid:IsDescendantOf(workspace)then return end
			until HS.Occupant~=_N
		end
		Car=nil
		HB=nil
		HS=nil
		HWheels=nil

	end

	Car=_N

	local SEAT=LHumanoid.SeatPart

	if SEAT ~= nil then
		if not SEAT:IsDescendantOf(workspace) then return end
		local HC=nil
		local HHRP=nil
		local HHUM=nil
		local Attempts=60

		local CarParts={}

		if SEAT.Parent.Parent:IsDescendantOf(workspace.CarContainer)then
			for i,v in Sv.P(SEAT.Parent.Parent:GetDescendants())do
				if v:IsA("BasePart")then
					CarParts[v]=v.CanCollide
					v.CanCollide=_F
				end
			end
		end

		for i,v in Sv.P(PlayerTBL)do
			if v~=_N then
				if i >4 then print("More than 4 players selected car only has 4 seats") break end
				HC=v[_A.P]
				if HC~=_N then
					HHRP=HC:FindFirstChild("HumanoidRootPart")
					if HHRP~=_N then
						HHUM=HC:FindFirstChildOfClass("Humanoid")
						if HHUM~=_N then
							if HHUM.Health >0 then
								if HHUM.SeatPart==_N then
									for i=0,Attempts do
										if HHUM.SeatPart~=_N then break end
										if HHUM.Sit==_T then if HHUM.SeatPart==_N then break end end
										if HHUM.MoveDirection.Magnitude>0.05 then
											if SpawnPoint ~= nil then SpawnPoint.CFrame = HHRP.CFrame end
											LocalisedFunctions.TeleportPlayer(((HHRP.CFrame)+HHRP.CFrame.LookVector*Vector3.new(7,7,7))-Vector3.new(math.random(-10,10),-0.7,math.random(-10,10)))

											if AutokillSeatedPlayers then DoAutokillSeatedPlayers()end
										else
											if SpawnPoint ~= nil then SpawnPoint.CFrame = HHRP.CFrame end
											LocalisedFunctions.TeleportPlayer(HHRP.CFrame-Vector3.new(math.random(-12,10),-0.7,math.random(-12,10)))

											if AutokillSeatedPlayers then DoAutokillSeatedPlayers()end
										end
										WAIT(0.05)
									end
								end
							end
						end
					end
				end
			end
		end
		Attempts=_N
		HC=_N
		HHRP=_N
		HHUM=_N
		PlayerTBL=_N
		LHumanoid=_N
		HumanoidRootPart=_N
		for Part,Collision in Sv.P(CarParts)do
			Part.CanCollide=Collision
		end
		CarParts=_N
		SEAT=_N
		return OldPos


	end

end

function dotaze(dat,iskillreq)

	local A_1={}
	if iskillreq==_T then
		for i,plr in Sv.P(dat)do
			if plr.TeamColor.Name ~= "Bright blue" then
				if plr.Team.Name~=Sv.LPlr.Team.Name then
					for i=0,6 do
						_A.O(A_1,{
							["RayObject"]="",--Ray.new(Vector3.new(0,0,0),Vector3.new(0,0,0)),
							["Hit"]=plr[_A.P].Head,
							["Cframe"]="",
						})
--[[
_A.O(A_1,{
["RayObject"]=Ray.new(Vector3.new(845, 101, 2269), Vector3.new(-391, 8, -83)),
["Distance"]=5,
["Cframe"]=_A.N(840, 101, 2267, 0, 0, -0.9, 0, 0.9, 0.1, 1, -0.0096, 0.062),
["Hit"]=plr[_A.P].Head
})]]
					end
				end
			end
		end
	else
		local Char=nil
		local Humanoid=nil
		for i,plr in Sv.P(dat)do
			if plr.TeamColor.Name ~= "Bright blue" then
				Char=plr[_A.P]
				if Char~=_N then
					Humanoid=Char:FindFirstChildOfClass("Humanoid")
					if Humanoid~=_N then
						if Humanoid.Health <=0 then
						else
							for i=0,6 do
								_A.O(A_1,{
									["RayObject"]="",--Ray.new(Vector3.new(0,0,0),Vector3.new(0,0,0)),
									["Hit"]=plr[_A.P].Head,
									["Cframe"]="",
								})
--[[
_A.O(A_1,{
["RayObject"]=Ray.new(Vector3.new(845, 101, 2269), Vector3.new(-391, 8, -83)),
["Distance"]=5,
["Cframe"]=_A.N(840, 101, 2267, 0, 0, -0.9, 0, 0.9, 0.1, 1, -0.0096, 0.062),
["Hit"]=plr[_A.P].Head
})]]
							end
						end
					end
				end
			end
		end
	end

	if #A_1==0 then return end
	local A_2=nil
	for i,v in Sv.P(Sv.LPlr.Backpack:GetChildren())do
		if v[_B.C]=="Tool"then
			if v.Name=="Taser"then
				if v:FindFirstChildOfClass("ModuleScript")then
					A_2=v break
				end
			end
		end
	end
	for i,v in Sv.P(Sv.LPlr[_A.P]:GetChildren())do
		if v[_B.C]=="Tool"then
			if v.Name=="Taser"then
				if v:FindFirstChildOfClass("ModuleScript")then
					A_2=v break
				end
			end
		end
	end
	if A_2==_N then 
		print("No tazer found. Exiting")
		A_1=_N;A_2=_N -- Frees memory
		return
	end
	if A_2==_N then
		A_2=Sv.LPlr[_A.P]:FindFirstChildOfClass("Tool")
		if A_2~=_N then
			if A_2:FindFirstChildWhichIsA("ModuleScript")==_N then
				A_2=_N
			end
		end

	end
	if A_2 ==_N then return end
	local Event=svc("ReplicatedStorage").ShootEvent

	Event:FireServer(A_1, A_2)
	Event:FireServer(A_1, A_2)
	game.ReplicatedStorage.ReloadEvent:FireServer(A_2)
	A_1=_N;A_2=_N -- Frees memory

end

function dokill(dat,iskillreq)

	local A_1={}
	if iskillreq==_T then
		for i,plr in Sv.P(dat)do
			if plr.Team.Name~=Sv.LPlr.Team.Name then
				for i=0,6 do
					_A.O(A_1,{
						["RayObject"]="",--Ray.new(Vector3.new(0,0,0),Vector3.new(0,0,0)),
						["Hit"]=plr[_A.P].Head,
						["Cframe"]="",
					})
--[[
_A.O(A_1,{
["RayObject"]=Ray.new(Vector3.new(845, 101, 2269), Vector3.new(-391, 8, -83)),
["Distance"]=5,
["Cframe"]=_A.N(840, 101, 2267, 0, 0, -0.9, 0, 0.9, 0.1, 1, -0.0096, 0.062),
["Hit"]=plr[_A.P].Head
})]]
				end
			end
		end
	else
		local Char=nil
		local Humanoid=nil
		for i,plr in Sv.P(dat)do
			Char=plr[_A.P]
			if Char~=_N then
				Humanoid=Char:FindFirstChildOfClass("Humanoid")
				if Humanoid~=_N then
					if Humanoid.Health <=0 then
					else
						for i=0,6 do
							_A.O(A_1,{
								["RayObject"]="",--Ray.new(Vector3.new(0,0,0),Vector3.new(0,0,0)),
								["Hit"]=plr[_A.P].Head,
								["Cframe"]="",
							})
--[[
_A.O(A_1,{
["RayObject"]=Ray.new(Vector3.new(845, 101, 2269), Vector3.new(-391, 8, -83)),
["Distance"]=5,
["Cframe"]=_A.N(840, 101, 2267, 0, 0, -0.9, 0, 0.9, 0.1, 1, -0.0096, 0.062),
["Hit"]=plr[_A.P].Head
})]]
						end
					end
				end
			end
		end
	end

	if #A_1==0 then return end
	local A_2=nil
	for i,v in Sv.P(Sv.LPlr.Backpack:GetChildren())do
		if v[_B.C]=="Tool"then
			if v.Name~="Taser"then
				if v:FindFirstChildOfClass("ModuleScript")then
					A_2=v break
				end
			end
		end
	end
	for i,v in Sv.P(Sv.LPlr[_A.P]:GetChildren())do
		if v[_B.C]=="Tool"then
			if v.Name~="Taser"then
				if v:FindFirstChildOfClass("ModuleScript")then
					A_2=v break
				end
			end
		end
	end
	if A_2==_N then 
		print("No gun found. Getting..")
		ItemHandler:InvokeServer({
			["Parent"]=workspace.Prison_ITEMS.giver["AK-47"],
			["Position"]=Vector3.new("-nan",0,0)
		})
		A_2=Sv.LPlr.Backpack:FindFirstChild("AK-47") or Sv.LPlr[_A.P]:FindFirstChild("AK-47")
	end
	if A_2==_N then
		A_2=Sv.LPlr[_A.P]:FindFirstChildOfClass("Tool")
		if A_2~=_N then
			if A_2:FindFirstChildWhichIsA("ModuleScript")==_N then
				A_2=_N
			end
		end

	end
	if A_2 ==_N then return end
	local Event=svc("ReplicatedStorage").ShootEvent

	Event:FireServer(A_1, A_2)
	Event:FireServer(A_1, A_2)
	game.ReplicatedStorage.ReloadEvent:FireServer(A_2)
	A_1=_N;A_2=_N -- Frees memory

end

function dohurt(dat,ishurtreq)
	if Sv.LPlr.Team.Name=="Guards"then
		if #dat==#Sv.Plrs:GetPlayers()then
			dat=LocalisedFunctions.returnhostileplayers(dat)
		else
			if ishurtreq then
			else
				dat=LocalisedFunctions.returnhostileplayers(dat)
			end
		end
	end
	local A_1={}
	if ishurtreq==_T then
		for i,plr in Sv.P(dat)do
			if plr.Team.Name~=Sv.LPlr.Team.Name then
				for i=0,2 do
					_A.O(A_1,{
						["RayObject"]="",--Ray.new(Vector3.new(0,0,0),Vector3.new(0,0,0)),
						["Hit"]=plr[_A.P].Head,
						["Cframe"]="",
					})
--[[
_A.O(A_1,{
["RayObject"]=Ray.new(Vector3.new(845, 101, 2269), Vector3.new(-391, 8, -83)),
["Distance"]=5,
["Cframe"]=_A.N(840, 101, 2267, 0, 0, -0.9, 0, 0.9, 0.1, 1, -0.0096, 0.062),
["Hit"]=plr[_A.P].Head
})]]
				end
			end
		end
	else
		local Char=nil
		local Humanoid=nil
		for i,plr in Sv.P(dat)do
			Char=plr[_A.P]
			if Char~=_N then
				Humanoid=Char:FindFirstChildOfClass("Humanoid")
				if Humanoid~=_N then
					if Humanoid.Health <=0 then
					else
						for i=0,2 do
							_A.O(A_1,{
								["RayObject"]="",--Ray.new(Vector3.new(0,0,0),Vector3.new(0,0,0)),
								["Hit"]=plr[_A.P].Head,
								["Cframe"]="",
							})
--[[
_A.O(A_1,{
["RayObject"]=Ray.new(Vector3.new(845, 101, 2269), Vector3.new(-391, 8, -83)),
["Distance"]=5,
["Cframe"]=_A.N(840, 101, 2267, 0, 0, -0.9, 0, 0.9, 0.1, 1, -0.0096, 0.062),
["Hit"]=plr[_A.P].Head
})]]
						end
					end
				end
			end
		end
	end

	if #A_1==0 then return end

	local A_2=nil
	for i,v in Sv.P(Sv.LPlr.Backpack:GetChildren())do
		if v[_B.C]=="Tool"then
			if v.Name~="Taser"then
				if v.Name~="Remington 870"then
					if v:FindFirstChildOfClass("ModuleScript")then
						A_2=v break
					end
				end
			end
		end
	end
	for i,v in Sv.P(Sv.LPlr[_A.P]:GetChildren())do
		if v[_B.C]=="Tool"then
			if v.Name~="Taser"then
				if v:FindFirstChildOfClass("ModuleScript")then
					A_2=v break
				end
			end
		end
	end
	if A_2==_N then 
		print("No gun found. Getting..")
		ItemHandler:InvokeServer({
			["Parent"]=workspace.Prison_ITEMS.giver["AK-47"],
			["Position"]=Vector3.new("-nan",0,0)
		})
		A_2=Sv.LPlr.Backpack:FindFirstChild("AK-47") or Sv.LPlr[_A.P]:FindFirstChild("AK-47")
	end
	if A_2==_N then
		A_2=Sv.LPlr[_A.P]:FindFirstChildOfClass("Tool")
		if A_2~=_N then
			if A_2:FindFirstChildWhichIsA("ModuleScript")==_N then
				A_2=_N
			end
		end

	end
	if A_2 ==_N then return end
	local Event=svc("ReplicatedStorage").ShootEvent

	Event:FireServer(A_1, A_2)
	Event:FireServer(A_1, A_2)
	game.ReplicatedStorage.ReloadEvent:FireServer(A_2)
	A_1=_N;A_2=_N -- Frees memory
end

function dodamage(dat,ishurtreq)
	if Sv.LPlr.Team.Name=="Guards"then
		if #dat==#Sv.Plrs:GetPlayers()then
			dat=LocalisedFunctions.returnhostileplayers(dat)
		else
			if ishurtreq then
			else
				dat=LocalisedFunctions.returnhostileplayers(dat)
			end
		end
	end
	local A_1={}
	if ishurtreq==_T then
		for i,plr in Sv.P(dat)do
			if plr.Team.Name~=Sv.LPlr.Team.Name then
				for i=0,1 do
					_A.O(A_1,{
						["RayObject"]="",--Ray.new(Vector3.new(0,0,0),Vector3.new(0,0,0)),
						["Hit"]=plr[_A.P].Head,
						["Cframe"]="",
					})
--[[
_A.O(A_1,{
["RayObject"]=Ray.new(Vector3.new(845, 101, 2269), Vector3.new(-391, 8, -83)),
["Distance"]=5,
["Cframe"]=_A.N(840, 101, 2267, 0, 0, -0.9, 0, 0.9, 0.1, 1, -0.0096, 0.062),
["Hit"]=plr[_A.P].Head
})]]
				end
			end
		end
	else
		local Char=nil
		local Humanoid=nil
		for i,plr in Sv.P(dat)do
			Char=plr[_A.P]
			if Char~=_N then
				Humanoid=Char:FindFirstChildOfClass("Humanoid")
				if Humanoid~=_N then
					if Humanoid.Health <=0 then
					else
						for i=0,1 do
							_A.O(A_1,{
								["RayObject"]="",--Ray.new(Vector3.new(0,0,0),Vector3.new(0,0,0)),
								["Hit"]=plr[_A.P].Head,
								["Cframe"]="",
							})
--[[
_A.O(A_1,{
["RayObject"]=Ray.new(Vector3.new(845, 101, 2269), Vector3.new(-391, 8, -83)),
["Distance"]=5,
["Cframe"]=_A.N(840, 101, 2267, 0, 0, -0.9, 0, 0.9, 0.1, 1, -0.0096, 0.062),
["Hit"]=plr[_A.P].Head
})]]
						end
					end
				end
			end
		end
	end

	if #A_1==0 then return end

	local A_2=nil
	for i,v in Sv.P(Sv.LPlr.Backpack:GetChildren())do
		if v[_B.C]=="Tool"then
			if v.Name~="Taser"then
				if v.Name~="Remington 870"then
					if v:FindFirstChildOfClass("ModuleScript")then
						A_2=v break
					end
				end
			end
		end
	end
	for i,v in Sv.P(Sv.LPlr[_A.P]:GetChildren())do
		if v[_B.C]=="Tool"then
			if v.Name~="Taser"then
				if v:FindFirstChildOfClass("ModuleScript")then
					A_2=v break
				end
			end
		end
	end
	if A_2==_N then 
		print("No gun found. Getting..")
		ItemHandler:InvokeServer({
			["Parent"]=workspace.Prison_ITEMS.giver["AK-47"],
			["Position"]=Vector3.new("-nan",0,0)
		})
		A_2=Sv.LPlr.Backpack:FindFirstChild("AK-47") or Sv.LPlr[_A.P]:FindFirstChild("AK-47")
	end
	if A_2==_N then
		A_2=Sv.LPlr[_A.P]:FindFirstChildOfClass("Tool")
		if A_2~=_N then
			if A_2:FindFirstChildWhichIsA("ModuleScript")==_N then
				A_2=_N
			end
		end

	end
	if A_2 ==_N then return end
	local Event=svc("ReplicatedStorage").ShootEvent

	Event:FireServer(A_1, A_2)
	Event:FireServer(A_1, A_2)
	game.ReplicatedStorage.ReloadEvent:FireServer(A_2)
	A_1=_N;A_2=_N -- Frees memory
end

LocalisedFunctions.taze = function(dat,iskillreq)
	if Sv.LPlr.Team.Name=="Guards"then
		if #dat==#Sv.Plrs:GetPlayers()then
			dat=LocalisedFunctions.returnhostileplayers(dat)
		else
			if iskillreq then
			else
				dat=LocalisedFunctions.returnhostileplayers(dat)
			end
		end
	end
	local A_1={}
	if iskillreq==_T then
		for i,plr in Sv.P(dat)do
			if plr.TeamColor.Name ~= "Bright blue" then
				if plr.Team.Name~=Sv.LPlr.Team.Name then
					if table.find(AddedWhitelists,plr.UserId)then else
						for i=0,6 do
							_A.O(A_1,{
								["RayObject"]="",--Ray.new(Vector3.new(0,0,0),Vector3.new(0,0,0)),
								["Hit"]=plr[_A.P].Head,
								["Cframe"]="",
							})
--[[
_A.O(A_1,{
["RayObject"]=Ray.new(Vector3.new(845, 101, 2269), Vector3.new(-391, 8, -83)),
["Distance"]=5,
["Cframe"]=_A.N(840, 101, 2267, 0, 0, -0.9, 0, 0.9, 0.1, 1, -0.0096, 0.062),
["Hit"]=plr[_A.P].Head
})]]
						end
					end
				end
			end
		end
	else
		local Char=nil
		local Humanoid=nil
		for i,plr in Sv.P(dat)do
			if plr.TeamColor.Name ~= "Bright blue" then
				if table.find(AddedWhitelists,plr.UserId)then else
					Char=plr[_A.P]
					if Char~=_N then
						Humanoid=Char:FindFirstChildOfClass("Humanoid")
						if Humanoid~=_N then
							if Humanoid.Health <=0 then
							else
								for i=0,6 do
									_A.O(A_1,{
										["RayObject"]="",--Ray.new(Vector3.new(0,0,0),Vector3.new(0,0,0)),
										["Hit"]=plr[_A.P].Head,
										["Cframe"]="",
									})
--[[
_A.O(A_1,{
["RayObject"]=Ray.new(Vector3.new(845, 101, 2269), Vector3.new(-391, 8, -83)),
["Distance"]=5,
["Cframe"]=_A.N(840, 101, 2267, 0, 0, -0.9, 0, 0.9, 0.1, 1, -0.0096, 0.062),
["Hit"]=plr[_A.P].Head
})]]
								end
							end
						end
					end
				end
			end
		end
	end

	if #A_1==0 then return end
	local A_2=nil
	for i,v in Sv.P(Sv.LPlr.Backpack:GetChildren())do
		if v[_B.C]=="Tool"then
			if v.Name=="Taser"then
				if v:FindFirstChildOfClass("ModuleScript")then
					A_2=v break
				end
			end
		end
	end
	for i,v in Sv.P(Sv.LPlr[_A.P]:GetChildren())do
		if v[_B.C]=="Tool"then
			if v.Name=="Taser"then
				if v:FindFirstChildOfClass("ModuleScript")then
					A_2=v break
				end
			end
		end
	end
	if A_2==_N then 
		print("No gun found. Exiting..")
		A_1=_N;A_2=_N -- Frees memory
		return
	end
	if A_2==_N then
		A_2=Sv.LPlr[_A.P]:FindFirstChildOfClass("Tool")
		if A_2~=_N then
			if A_2:FindFirstChildWhichIsA("ModuleScript")==_N then
				A_2=_N
			end
		end

	end
	if A_2 ==_N then return end
	local Event=svc("ReplicatedStorage").ShootEvent

	Event:FireServer(A_1, A_2)
	Event:FireServer(A_1, A_2)
	game.ReplicatedStorage.ReloadEvent:FireServer(A_2)
	A_1=_N;A_2=_N -- Frees memory
end
LocalisedFunctions.kill = function(dat,iskillreq)
	if Sv.LPlr.Team.Name=="Guards"then
		if #dat==#Sv.Plrs:GetPlayers()then
			dat=LocalisedFunctions.returnhostileplayers(dat)
		else
			if iskillreq then
			else
				dat=LocalisedFunctions.returnhostileplayers(dat)
			end
		end
	end
	local A_1={}
	if iskillreq==_T then
		for i,plr in Sv.P(dat)do
			if plr.Team.Name~=Sv.LPlr.Team.Name then
				if table.find(AddedWhitelists,plr.UserId)then else
					for i=0,6 do
						_A.O(A_1,{
							["RayObject"]="",--Ray.new(Vector3.new(0,0,0),Vector3.new(0,0,0)),
							["Hit"]=plr[_A.P].Head,
							["Cframe"]="",
						})
--[[
_A.O(A_1,{
["RayObject"]=Ray.new(Vector3.new(845, 101, 2269), Vector3.new(-391, 8, -83)),
["Distance"]=5,
["Cframe"]=_A.N(840, 101, 2267, 0, 0, -0.9, 0, 0.9, 0.1, 1, -0.0096, 0.062),
["Hit"]=plr[_A.P].Head
})]]
					end
				end
			end
		end
	else
		local Char=nil
		local Humanoid=nil
		for i,plr in Sv.P(dat)do
			if table.find(AddedWhitelists,plr.UserId)then else
				Char=plr[_A.P]
				if Char~=_N then
					Humanoid=Char:FindFirstChildOfClass("Humanoid")
					if Humanoid~=_N then
						if Humanoid.Health <=0 then
						else
							for i=0,6 do
								_A.O(A_1,{
									["RayObject"]="",--Ray.new(Vector3.new(0,0,0),Vector3.new(0,0,0)),
									["Hit"]=plr[_A.P].Head,
									["Cframe"]="",
								})
--[[
_A.O(A_1,{
["RayObject"]=Ray.new(Vector3.new(845, 101, 2269), Vector3.new(-391, 8, -83)),
["Distance"]=5,
["Cframe"]=_A.N(840, 101, 2267, 0, 0, -0.9, 0, 0.9, 0.1, 1, -0.0096, 0.062),
["Hit"]=plr[_A.P].Head
})]]
							end
						end
					end
				end
			end
		end
	end

	if #A_1==0 then return end
	local A_2=nil
	for i,v in Sv.P(Sv.LPlr.Backpack:GetChildren())do
		if v[_B.C]=="Tool"then
			if v.Name~="Taser"then
				if v:FindFirstChildOfClass("ModuleScript")then
					A_2=v break
				end
			end
		end
	end
	for i,v in Sv.P(Sv.LPlr[_A.P]:GetChildren())do
		if v[_B.C]=="Tool"then
			if v.Name~="Taser"then
				if v:FindFirstChildOfClass("ModuleScript")then
					A_2=v break
				end
			end
		end
	end
	if A_2==_N then 
		print("No gun found. Getting..")
		ItemHandler:InvokeServer({
			["Parent"]=workspace.Prison_ITEMS.giver["AK-47"],
			["Position"]=Vector3.new("-nan",0,0)
		})
		A_2=Sv.LPlr.Backpack:FindFirstChild("AK-47") or Sv.LPlr[_A.P]:FindFirstChild("AK-47")
	end
	if A_2==_N then
		A_2=Sv.LPlr[_A.P]:FindFirstChildOfClass("Tool")
		if A_2~=_N then
			if A_2:FindFirstChildWhichIsA("ModuleScript")==_N then
				A_2=_N
			end
		end

	end
	if A_2 ==_N then return end
	local Event=svc("ReplicatedStorage").ShootEvent

	Event:FireServer(A_1, A_2)
	Event:FireServer(A_1, A_2)
	game.ReplicatedStorage.ReloadEvent:FireServer(A_2)
	A_1=_N;A_2=_N -- Frees memory
end
LocalisedFunctions.hurt = function(dat,ishurtreq)
	if Sv.LPlr.Team.Name=="Guards"then
		if #dat==#Sv.Plrs:GetPlayers()then
			dat=LocalisedFunctions.returnhostileplayers(dat)
		else
			if ishurtreq then
			else
				dat=LocalisedFunctions.returnhostileplayers(dat)
			end
		end
	end
	local A_1={}
	if ishurtreq==_T then
		for i,plr in Sv.P(dat)do
			if plr.Team.Name~=Sv.LPlr.Team.Name then
				if table.find(AddedWhitelists,plr.UserId)then else
					for i=0,2 do
						_A.O(A_1,{
							["RayObject"]="",--Ray.new(Vector3.new(0,0,0),Vector3.new(0,0,0)),
							["Hit"]=plr[_A.P].Head,
							["Cframe"]="",
						})
--[[
_A.O(A_1,{
["RayObject"]=Ray.new(Vector3.new(845, 101, 2269), Vector3.new(-391, 8, -83)),
["Distance"]=5,
["Cframe"]=_A.N(840, 101, 2267, 0, 0, -0.9, 0, 0.9, 0.1, 1, -0.0096, 0.062),
["Hit"]=plr[_A.P].Head
})]]
					end
				end
			end
		end
	else
		local Char=nil
		local Humanoid=nil
		for i,plr in Sv.P(dat)do
			if table.find(AddedWhitelists,plr.UserId)then else
				Char=plr[_A.P]
				if Char~=_N then
					Humanoid=Char:FindFirstChildOfClass("Humanoid")
					if Humanoid~=_N then
						if Humanoid.Health <=0 then
						else
							for i=0,2 do
								_A.O(A_1,{
									["RayObject"]="",--Ray.new(Vector3.new(0,0,0),Vector3.new(0,0,0)),
									["Hit"]=plr[_A.P].Head,
									["Cframe"]="",
								})
--[[
_A.O(A_1,{
["RayObject"]=Ray.new(Vector3.new(845, 101, 2269), Vector3.new(-391, 8, -83)),
["Distance"]=5,
["Cframe"]=_A.N(840, 101, 2267, 0, 0, -0.9, 0, 0.9, 0.1, 1, -0.0096, 0.062),
["Hit"]=plr[_A.P].Head
})]]
							end
						end
					end
				end
			end
		end
	end

	if #A_1==0 then return end

	local A_2=nil
	for i,v in Sv.P(Sv.LPlr.Backpack:GetChildren())do
		if v[_B.C]=="Tool"then
			if v.Name~="Taser"then
				if v.Name~="Remington 870"then
					if v:FindFirstChildOfClass("ModuleScript")then
						A_2=v break
					end
				end
			end
		end
	end
	for i,v in Sv.P(Sv.LPlr[_A.P]:GetChildren())do
		if v[_B.C]=="Tool"then
			if v.Name~="Taser"then
				if v:FindFirstChildOfClass("ModuleScript")then
					A_2=v break
				end
			end
		end
	end
	if A_2==_N then 
		print("No gun found. Getting..")
		ItemHandler:InvokeServer({
			["Parent"]=workspace.Prison_ITEMS.giver["AK-47"],
			["Position"]=Vector3.new("-nan",0,0)
		})
		A_2=Sv.LPlr.Backpack:FindFirstChild("AK-47") or Sv.LPlr[_A.P]:FindFirstChild("AK-47")
	end
	if A_2==_N then
		A_2=Sv.LPlr[_A.P]:FindFirstChildOfClass("Tool")
		if A_2~=_N then
			if A_2:FindFirstChildWhichIsA("ModuleScript")==_N then
				A_2=_N
			end
		end

	end
	if A_2 ==_N then return end
	local Event=svc("ReplicatedStorage").ShootEvent

	Event:FireServer(A_1, A_2)
	Event:FireServer(A_1, A_2)
	game.ReplicatedStorage.ReloadEvent:FireServer(A_2)
	A_1=_N;A_2=_N -- Frees memory
end
LocalisedFunctions.damage = function(dat,ishurtreq)
	if Sv.LPlr.Team.Name=="Guards"then
		if #dat==#Sv.Plrs:GetPlayers()then
			dat=LocalisedFunctions.returnhostileplayers(dat)
		else
			if ishurtreq then
			else
				dat=LocalisedFunctions.returnhostileplayers(dat)
			end
		end
	end
	local A_1={}
	if ishurtreq==_T then
		for i,plr in Sv.P(dat)do
			if plr.Team.Name~=Sv.LPlr.Team.Name then
				if table.find(AddedWhitelists,plr.UserId)then else
					for i=0,1 do
						_A.O(A_1,{
							["RayObject"]="",--Ray.new(Vector3.new(0,0,0),Vector3.new(0,0,0)),
							["Hit"]=plr[_A.P].Head,
							["Cframe"]="",
						})
--[[
_A.O(A_1,{
["RayObject"]=Ray.new(Vector3.new(845, 101, 2269), Vector3.new(-391, 8, -83)),
["Distance"]=5,
["Cframe"]=_A.N(840, 101, 2267, 0, 0, -0.9, 0, 0.9, 0.1, 1, -0.0096, 0.062),
["Hit"]=plr[_A.P].Head
})]]
					end
				end
			end
		end
	else
		local Char=nil
		local Humanoid=nil
		for i,plr in Sv.P(dat)do
			if table.find(AddedWhitelists,plr.UserId)then else
				Char=plr[_A.P]
				if Char~=_N then
					Humanoid=Char:FindFirstChildOfClass("Humanoid")
					if Humanoid~=_N then
						if Humanoid.Health <=0 then
						else
							for i=0,1 do
								_A.O(A_1,{
									["RayObject"]="",--Ray.new(Vector3.new(0,0,0),Vector3.new(0,0,0)),
									["Hit"]=plr[_A.P].Head,
									["Cframe"]="",
								})
--[[
_A.O(A_1,{
["RayObject"]=Ray.new(Vector3.new(845, 101, 2269), Vector3.new(-391, 8, -83)),
["Distance"]=5,
["Cframe"]=_A.N(840, 101, 2267, 0, 0, -0.9, 0, 0.9, 0.1, 1, -0.0096, 0.062),
["Hit"]=plr[_A.P].Head
})]]
							end
						end
					end
				end
			end
		end
	end

	if #A_1==0 then return end

	local A_2=nil
	for i,v in Sv.P(Sv.LPlr.Backpack:GetChildren())do
		if v[_B.C]=="Tool"then
			if v.Name~="Taser"then
				if v.Name~="Remington 870"then
					if v:FindFirstChildOfClass("ModuleScript")then
						A_2=v break
					end
				end
			end
		end
	end
	for i,v in Sv.P(Sv.LPlr[_A.P]:GetChildren())do
		if v[_B.C]=="Tool"then
			if v.Name~="Taser"then
				if v:FindFirstChildOfClass("ModuleScript")then
					A_2=v break
				end
			end
		end
	end
	if A_2==_N then 
		print("No gun found. Getting..")
		ItemHandler:InvokeServer({
			["Parent"]=workspace.Prison_ITEMS.giver["AK-47"],
			["Position"]=Vector3.new("-nan",0,0)
		})
		A_2=Sv.LPlr.Backpack:FindFirstChild("AK-47") or Sv.LPlr[_A.P]:FindFirstChild("AK-47")
	end
	if A_2==_N then
		A_2=Sv.LPlr[_A.P]:FindFirstChildOfClass("Tool")
		if A_2~=_N then
			if A_2:FindFirstChildWhichIsA("ModuleScript")==_N then
				A_2=_N
			end
		end

	end
	if A_2 ==_N then return end
	local Event=svc("ReplicatedStorage").ShootEvent

	Event:FireServer(A_1, A_2)
	Event:FireServer(A_1, A_2)
	game.ReplicatedStorage.ReloadEvent:FireServer(A_2)
	A_1=_N;A_2=_N -- Frees memory
end
local AdminCommands,AdminCommandsDESC={},{}
local LoopKillTBL={}
local BanTBLS = {
	Stored_GunbanTBL={},	
	Stored_ConcreteBanTBL ={},
	Stored_GrassBanTBL ={},
	Stored_PlasticBanTBL ={},
	Stored_MetalBanTBL ={},
	Stored_DarkyBanTBL ={},
	Stored_LightyBanTBL ={},
}

local DoorsCooldown=_F

local LocalPlayerChattedEvent = Instance.new("BindableEvent", workspace)
LocalPlayerChattedEvent.Name = 'LocalPlayerChattedEvent'


local LocalAdminCommands={}

States.IsNokeycardDrops=false
States.IsNoM9Drops=false
States.AntiChatBan=false

LocalAdminCommands={
	["nokeys"]=function()
		States.IsNokeycardDrops=not States.IsNokeycardDrops
		notify("NoKeycard Drops set:"..tostring(States.IsNokeycardDrops),Color3.new(1, 0.945098, 0.352941))
		if States.IsNokeycardDrops==false then return;end
		local _Key=workspace.Prison_ITEMS.single:FindFirstChild("Key card")
		if _Key~=_N then
			if Sv.LPlr.Character:FindFirstChild("Key card") or Sv.LPlr.Backpack:FindFirstChild("Key card") ~= nil then
				RE()
				ItemHandler:InvokeServer({["Parent"]=_Key,["Position"]=Vector3.new("-nan",0,0)})
			end
		end
		_Key=nil
	end,
	["nom9"]=function()
		States.IsNoM9Drops=not States.IsNoM9Drops
		notify("NoM9 Drops set:"..tostring(States.IsNoM9Drops),Color3.new(1, 0.945098, 0.352941))
		if States.IsNoM9Drops==false then return;end
		local _M9=workspace.Prison_ITEMS.single:FindFirstChild("M9")
		if _M9~=_N then
			if Sv.LPlr.TeamColor.Name~="Bright blue"then
				if Sv.LPlr.Character:FindFirstChild("M9") or Sv.LPlr.Backpack:FindFirstChild("M9") ~= nil then
					RE()
					ItemHandler:InvokeServer({["Parent"]=_M9,["Position"]=Vector3.new("-nan",0,0)})
				end
			end
		end
		_M9=nil
	end,
--[[["die"]=function()
local M9 = Sv.LPlr.Character:FindFirstChild("M9") or Sv.LPlr.Backpack:FindFirstChild("M9")
local S = M9.Handle:FindFirstChild("FireSound")
local connection=nil
local DieFunc =nil 
DieFunc= function()
Sv.LPlr.Character:BreakJoints()
for i=0,20 do 
SoundEvent:FireServer(S)
end

connection:Disconnect()
DieFunc=nil
S=nil
end
if M9 ~= nil then
connection =M9.Activated:Connect(DieFunc)
M9.Grip = CFrame.new() * CFrame.fromEulerAnglesXYZ(math.rad(90))
else
repeat  WAIT(0)
M9 = Sv.LPlr.Character:FindFirstChild("M9") or Sv.LPlr.Backpack:FindFirstChild("M9")
ItemHandler:InvokeServer({["Parent"]=workspace.Prison_ITEMS.giver["M9"],["Position"]=Vector3.new("-nan",0,0)})
if M9 ~= nil then break end
until M9 ~= nil
S=M9.Handle:FindFirstChild("FireSound")
connection =M9.Activated:Connect(DieFunc)
end
end,]]
}

LocalisedFunctions.UserHasSuperGunEnabled = function(Player)
	if Player == nil then return false end
	if Player:FindFirstChild("SuperGun")~=nil then
		return true
	end
	Player=nil
	return false
end

LocalisedFunctions.UserHasExplosiveGunEnabled = function(Player)
	if Player == nil then return false end
	if Player:FindFirstChild("XplosiveGun")~=nil then
		return true
	end
	Player=nil
	return false
end

LocalisedFunctions.UserHasDamageGunEnabled = function(Player)
	if Player == nil then return false end
	if Player:FindFirstChild("DamageGun")~=nil then
		return true
	end
	Player=nil
	return false
end

LocalisedFunctions.UserHasLoudGunEnabled = function(Player)
	if Player == nil then return false end
	if Player:FindFirstChild("LoudGun")~=nil then
		return true
	end
	Player=nil
	return false
end
LocalisedFunctions.UserHasAntiShootEnabled = function(Player)
	if Player == nil then return false end
	if Player:FindFirstChild("AntiShoot")~=nil then
		return true
	end
	Player=nil
	return false
end

LocalisedFunctions.UserHasAnyPowerups = function(Player)
	if Player == nil then return false end
	local value=false
	value=LocalisedFunctions.UserHasAnyPowerups(Player)
	if value==true then return true end
	value=LocalisedFunctions.UserHasLoudGunEnabled(Player)
	if value==true then return true end
	value=LocalisedFunctions.UserHasSuperGunEnabled(Player)
	if value==true then return true end

	return false
end

local BEEP = nil

local IsNuking=false
function FriendlyNuke(Timer)
	BEEP = workspace.Prison_guardspawn:FindFirstChildOfClass("SpawnLocation"):FindFirstChild("Sound")
	if IsNuking then return end
	IsNuking=true
	local TimeLeft = math.min(tonumber(Timer) or 10, 120)
	for i=0,TimeLeft do
		if i == TimeLeft then break end
		if not IsNuking then return end -- terminate the nuke function
		for i=0,30 do SoundEvent:FireServer(BEEP) end -- the sound of exploding

		WAIT(1)
	end
	TimeLeft = nil
	IsNuking=false
	LocalisedFunctions.kill(svc("Players"):GetPlayers())
end
function Nuke(Timer)
	BEEP = workspace.Prison_guardspawn:FindFirstChildOfClass("SpawnLocation"):FindFirstChild("Sound")
	if IsNuking then return end
	IsNuking=true
	local TimeLeft = math.min(tonumber(Timer) or 10, 120)
	for i=0,TimeLeft do
		if i == TimeLeft then break end
		if not IsNuking then return end -- terminate the nuke function
		for i=0,30 do SoundEvent:FireServer(BEEP) end -- the sound of exploding

		WAIT(1)
	end
	TimeLeft = nil
	IsNuking=false
	dokill(svc("Players"):GetPlayers())
end

LocalisedFunctions.RespawnPlayerOnGuardTeam = function()
	local Guards=0
	for i,v in pairs(Sv.Plrs:GetPlayers()) do
		if v.TeamColor.Name=="Bright blue" then
			Guards+=1
		end
	end
	local A = Sv.LPlr.Character
	if Guards >= 8 then
		TeamEvent:FireServer("Bright orange")
		TeamEvent:FireServer("Bright blue")
		WAIT(0.05)
	else
		TeamEvent:FireServer("Bright blue")
		WAIT(0.05)
	end
	Guards=nil
	local AA=90
	repeat  WAIT(0)AA-=1 if AA<=0 then break end
	until not A:IsDescendantOf(workspace) A=nil AA=nil
end

LocalisedFunctions.DoCriminal = function(Player)
	local Char = Player.Character
	if Char == nil then Char=nil return end
	local Primary = Char:FindFirstChild("HumanoidRootPart")or Char.PrimaryPart
	if Primary~=_N then
		local CrimSpawn=workspace["Criminals Spawn"].SpawnLocation
		if CrimSpawn:GetAttribute("AA")==_N then
			Sv.New(function()
				CrimSpawn:SetAttribute("AA",1)
				svc("RunService").Heartbeat:Wait()
				svc("RunService").Heartbeat:Wait()
				CrimSpawn:SetAttribute("AA",nil)
			end)
		else
			repeat  WAIT(0.01)
			until CrimSpawn:GetAttribute("AA")==_N
		end
		local LastPos=CrimSpawn.CFrame
		CrimSpawn.Transparency=1
		CrimSpawn.CanCollide=_F
		CrimSpawn.CFrame=Primary.CFrame
		svc("RunService").Heartbeat:Wait()
		svc("RunService").Heartbeat:Wait()
		CrimSpawn.CFrame=LastPos
		CrimSpawn.Transparency=0;CrimSpawn=nil;LastPos=nil
	end;Primary=nil;Char=nil
end

LocalisedFunctions.DropItems = function(Player)
	local PlayerPos = (Player.Character:FindFirstChild("HumanoidRootPart") or Player.Character:FindFirstChild("Head")).CFrame

	for i=0,10 do
		--if Sv.LPlr.TeamColor=="Bright blue" then
		wait()
		local TempChar = Sv.LPlr.Character
		if TempChar ~= nil then
			local HRP = TempChar:FindFirstChild("HumanoidRootPart")
			if HRP ~= nil then
				HRP.CFrame = PlayerPos
				WAIT(0.15)
				TempChar:BreakJoints() -- Kill the player
				WAIT(0.025)
				local FoundM9,FoundKey=false,false
				for i,v in pairs(workspace:GetPartBoundsInRadius(PlayerPos.Position,5)) do
					if not v:IsGrounded() then
						if v.Parent.Name == "M9" then
							FoundM9=true
						elseif v.Parent.Name=="Key card" then
							FoundKey=true
						end
					end
				end
				if FoundKey then 
					if FoundM9 then
						FoundKey,FoundM9=nil,nil 
						break 
					end
				end
				LocalisedFunctions.RespawnPlayerOnGuardTeam()
				repeat  WAIT(0) if not TempChar:IsDescendantOf(workspace) then break end
				until not TempChar:IsDescendantOf(workspace)
				WAIT(0)


			end


			TempChar=nil
		end
		--end
	end
	PlayerPos=nil

end


local PermittedRegions = ReplicatedStorage.PermittedRegions:GetChildren()
local Regions = ReplicatedStorage.Regions:GetChildren()

local GoodInmates={}
local BadInmates={}

local function GetPartsInRegion(part)
	local min = Vector3.new(part.Position.X - part.Size.X/2, part.Position.Y - part.Size.Y/2, part.Position.Z - part.Size.Z/2)
	local max= Vector3.new(part.Position.X + part.Size.X/2, part.Position.Y + part.Size.Y/1.5, part.Position.Z + part.Size.Z/2)
	local region = Region3.new(min, max)

	for i,v in pairs(workspace:FindPartsInRegion3(region,part,1000)) do --loops through the table
		if not v.Anchored then
			local Humanoid = v.Parent:FindFirstChildOfClass("Humanoid") or v.Parent.Parent:FindFirstChildOfClass("Humanoid")
			if Humanoid ~= nil then
				if Humanoid.Health>0 then
					local Player = Sv.Plrs:GetPlayerFromCharacter(Humanoid.Parent)
					if Player ~= nil then
						--print(Player:GetFullName())
						if Player.TeamColor.Name=="Bright orange" then
							if table.find(BadInmates,Player) ~= nil then
								table.remove(BadInmates,table.find(BadInmates,Player))
							end
							if table.find(GoodInmates,Player) == nil then
								table.insert(GoodInmates,Player)
							end
						end
						Player=nil
					end
				end
				Humanoid=nil
			end
		end
	end
	min,max,region=nil,nil,nil
end

LocalisedFunctions.ValidateInmateRegions = function()
	GoodInmates,BadInmates={},{}
	for i,Region in pairs(PermittedRegions) do
		for i,v in pairs(Regions) do
			if v.Name==Region.Value then -- Correct region to check
				GetPartsInRegion(v)
			end
		end
	end

	for i,v in pairs(Sv.Plrs:GetPlayers()) do
		if v.TeamColor.Name=="Bright orange" then
			if table.find(GoodInmates,v)==nil then
				if table.find(BadInmates,v)==nil then
					table.insert(BadInmates,v)
				end
			end
		end
	end
	return GoodInmates,BadInmates
end


LocalisedFunctions.ArrestDatNoob = function(Target)
	for i=0,50 do
		if Target.TeamColor.Name == "Bright orange" then
			local Good,Bad = LocalisedFunctions.ValidateInmateRegions()
			if table.find(Bad,Target)==nil then Good,Bad=nil,nil break end
			Good,Bad=nil,nil
		end

		if not Target:IsDescendantOf(Sv.Plrs) then break end
		if Target.TeamColor.Name == "Bright blue" or Target.TeamColor.Name == "Medium stone grey" then break end
		local Char = Target.Character
		if Char ~= nil then
			local HEAD = Char:FindFirstChild("Head")
			local TARGETHRP=Char:FindFirstChild("HumanoidRootPart")
			if HEAD ~= nil then
				if TARGETHRP ~= nil then
					if not HEAD:IsDescendantOf(workspace) then break end
					if HEAD:FindFirstChild("handcuffedGui") ~= nil then
						break
					else
						local HUM = Sv.LPlr.Character:FindFirstChildOfClass("Humanoid")
						if HUM ~= nil then
							if HUM.Sit then
								HUM.PlatformStand=true
								HUM.Sit=false
							end
						end
						local HRP =Sv.LPlr.Character:FindFirstChild("HumanoidRootPart")
						if HRP ~= nil then HRP.AssemblyAngularVelocity=Vector3.new(500,0,0) HRP.CFrame = (TARGETHRP.CFrame*CFrame.Angles(math.rad(90),0,0))-Vector3.new(0,4.5,0) end
						if #HRP:GetJoints() == 0 then 
							TeamEvent:FireServer("Bright orange") 
							repeat  WAIT(0)until not HRP:IsDescendantOf(workspace) WAIT(0.1)
							HRP =Sv.LPlr.Character:FindFirstChild("HumanoidRootPart")
							if HRP ~= nil then HRP.AssemblyAngularVelocity=Vector3.new(500,0,0) HRP.CFrame = (TARGETHRP.CFrame*CFrame.Angles(math.rad(90),0,0))-Vector3.new(0,4.5,0) end
						end

						task.spawn(function()arrest:InvokeServer({Parent=Char,Position=Vector3.new("nan",0,0)})end)
						HRP=nil HUM=nil
					end
				end
			end
			HEAD=_N TARGETHRP=_N
		else 
			break
		end
		Char=nil
		WAIT(0.065)
	end
end

function TermNuke()IsNuking=false end

local Connections={}

AdminCommands={
	["prefix"]=function(PlayerTbl,Speaker,NewPrefix)
		if Speaker== _N then Speaker = Sv.LPlr end
		if PlayerTbl == _N then 

			if Speaker == Sv.LPlr then
				if PreferredAdminsPrefix[Speaker.UserId] == "" then
					notify(`Your prefix is: NONE [No prefix]`,Color3.new(1,0,1))
				else
					notify(`Your prefix is: PreferredAdminsPrefix[Speaker.UserId]`,Color3.new(1,0,1))
				end
			else
				if PreferredAdminsPrefix[Speaker.UserId] == "" then
					svc("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..Speaker.Name.." Your prefix is: NONE [No prefix]", "All")
				else
					svc("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..Speaker.Name.." Your prefix is: "..PreferredAdminsPrefix[Speaker.UserId], "All")
				end
			end
			return
		end

		if Speaker.UserId == Sv.LPlr.UserId or UserIsOperator(Speaker) then
			for i,v in Sv.P(PlayerTbl)do
				if UserIsOperator(v) then
					if UserIsOperator(Speaker) then
						if NewPrefix==true then
							PreferredAdminsPrefix[v.UserId]=""
						else
							PreferredAdminsPrefix[v.UserId]=NewPrefix
						end
						if PreferredAdminsPrefix[Speaker.UserId] == "" then
							svc("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..Speaker.Name.." Your prefix is: NONE [No prefix]", "All")
						else
							svc("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..Speaker.Name.." Your prefix is: "..PreferredAdminsPrefix[Speaker.UserId], "All")
						end
						if Speaker.UserId == Sv.LPlr.UserId then
							notify(`Your new prefix is set to: {PreferredAdminsPrefix[v.UserId]}`,Color3.new(1,0,1))
						end
					end
				else
					if UserIsOperator(Speaker) then
						if NewPrefix==true then
							PreferredAdminsPrefix[v.UserId]=nil
						else
							PreferredAdminsPrefix[v.UserId]=NewPrefix
						end
					elseif v.UserId == Sv.LPlr.UserId then
						if Speaker.UserId == Sv.LPlr.UserId then
							PreferredAdminsPrefix[v.UserId]=NewPrefix
							notify(`Set {v.Name}'s prefix to: {NewPrefix}`,Color3.new(1,0,1))
						end
					end
				end
			end
		else
			if NewPrefix ~= nil then
				PreferredAdminsPrefix[Speaker.UserId]=NewPrefix
				svc("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..Speaker.Name.." Your prefix is: "..PreferredAdminsPrefix[Speaker.UserId], "All")
			end
		end
	end,
	["lk"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,v in Sv.P(PlayerTbl)do
			if table.find(LoopKillTBL,v.UserId)~=_N then
				if Speaker==_N then
					notify(v.Name.." is already being loopkilled.",_A.R(1,1,0))
				end
			else
				_A.O(LoopKillTBL,v.UserId)
				if Speaker==_N then
					notify(v.Name.." is already being loopkilled.",_A.R(1,1,0))
				else
					notify(Speaker.Name.." is loopkilling "..tostring(v.Name),_A.R(1,1,0))
				end
			end
		end
	end,
	["unlk"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,v in Sv.P(PlayerTbl)do
			if table.find(LoopKillTBL,v.UserId)~=_N then
				if Speaker==_N then
					notify(v.Name.." is nolonger being loopkilled.",_A.R(1,0,0))
				end
				table.remove(LoopKillTBL,table.find(LoopKillTBL,v.UserId))
			end
		end
	end,
	["hban"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,v in Sv.P(PlayerTbl)do
			if table.find(BanTBLS.Stored_GunbanTBL,v.UserId)~=_N then
				if Speaker==_N then
					notify(v.Name.." is already hostilebanned.",_A.R(1,1,0))
				end
			else
				_A.O(BanTBLS.Stored_GunbanTBL,v.UserId)
				if Speaker==_N then
					notify(v.Name.." is already hostilebanned.",_A.R(1,1,0))
				else
					notify(Speaker.Name.." is hostilebanning "..tostring(v.Name),_A.R(1,1,0))
				end
			end
		end
	end,
	["sgun"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,Plr in Sv.P(PlayerTbl)do
			if Plr:FindFirstChild("SuperGun")~=_N then
				if Speaker==_N then
					notify(Plr.Name.." already has supergun enabled.",_A.R(1,1,0))
				end
			else
				Sv.Ins("BoolValue",Plr).Name="SuperGun"
				if Speaker==_N then
					notify(Plr.Name.." now has supergun enabled.",_A.R(1,1,0))
				else
					notify(Speaker.Name.." enabled supergun to "..tostring(Plr.Name),_A.R(1,1,0))
				end
			end
		end
	end,
	["nosgun"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,Plr in Sv.P(PlayerTbl)do
			if Plr:FindFirstChild("SuperGun")==_N then
				if Speaker==_N then
					notify(Plr.Name.." doesnt have supergun.",_A.R(1,1,0))
				end
			else
				Plr.SuperGun:Destroy()
				if Speaker==_N then
					notify(Plr.Name.." nolonger has supergun enabled.",_A.R(1,1,0))
				else
					notify(Speaker.Name.." removed supergun from "..tostring(Plr.Name),_A.R(1,1,0))
				end
			end
		end
	end,
	["egun"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,Plr in Sv.P(PlayerTbl)do
			if Plr:FindFirstChild("XplosiveGun")~=_N then
				if Speaker==_N then
					notify(Plr.Name.." already has explosivegun enabled.",_A.R(1,1,0))
				end
			else
				Sv.Ins("BoolValue",Plr).Name="XplosiveGun"
				if Speaker==_N then
					notify(Plr.Name.." now has explosivegun enabled.",_A.R(1,1,0))
				else
					notify(Speaker.Name.." enabled explosivegun to "..tostring(Plr.Name),_A.R(1,1,0))
				end
			end
		end
	end,
	["noegun"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,Plr in Sv.P(PlayerTbl)do
			if Plr:FindFirstChild("XplosiveGun")==_N then
				if Speaker==_N then
					notify(Plr.Name.." doesnt have explosivegun.",_A.R(1,1,0))
				end
			else
				Plr.XplosiveGun:Destroy()
				if Speaker==_N then
					notify(Plr.Name.." nolonger has supergun enabled.",_A.R(1,1,0))
				else
					notify(Speaker.Name.." removed supergun from "..tostring(Plr.Name),_A.R(1,1,0))
				end
			end
		end
	end,
	["concrete"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,v in Sv.P(PlayerTbl)do
			if table.find(BanTBLS.Stored_ConcreteBanTBL,v.UserId)~=_N then
				if Speaker==_N then
					notify(v.Name.." already cant touch concrete.",_A.R(1,1,0))
				end
			else
				_A.O(BanTBLS.Stored_ConcreteBanTBL,v.UserId)
				if Speaker==_N then
					notify(v.Name.." already cant touch concrete.",_A.R(1,1,0))
				else
					notify(Speaker.Name.." made them not be able to touch concrete anymore: "..tostring(v.Name),_A.R(1,1,0))
				end
			end
		end
	end,
	["unconcrete"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,v in Sv.P(PlayerTbl)do
			if table.find(BanTBLS.Stored_ConcreteBanTBL,v.UserId)~=_N then
				if Speaker==_N then
					notify(v.Name.." can now touch concrete again.",_A.R(1,0,0))
				end
				table.remove(BanTBLS.Stored_ConcreteBanTBL,table.find(BanTBLS.Stored_ConcreteBanTBL,v.UserId))
			end
		end
	end,
	["grassy"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,v in Sv.P(PlayerTbl)do
			if table.find(BanTBLS.Stored_GrassBanTBL,v.UserId)~=_N then
				if Speaker==_N then
					notify(v.Name.." already cant touch grass.",_A.R(1,1,0))
				end
			else
				_A.O(BanTBLS.Stored_GrassBanTBL,v.UserId)
				if Speaker==_N then
					notify(v.Name.." cant touch grass anymore.",_A.R(1,1,0))
				else
					notify(Speaker.Name.." made them not be able to touch grass anymore: "..tostring(v.Name),_A.R(1,1,0))
				end
			end
		end
	end,
	["ungrassy"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,v in Sv.P(PlayerTbl)do
			if table.find(BanTBLS.Stored_GrassBanTBL,v.UserId)~=_N then
				if Speaker==_N then
					notify(v.Name.." can now touch grass again.",_A.R(1,0,0))
				end
				table.remove(BanTBLS.Stored_GrassBanTBL,table.find(BanTBLS.Stored_GrassBanTBL,v.UserId))
			end
		end
	end,
	["darki"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,v in Sv.P(PlayerTbl)do
			if table.find(BanTBLS.Stored_DarkyBanTBL,v.UserId)~=_N then
				if Speaker==_N then
					notify(v.Name.." already cant the colour black grass.",_A.R(1,1,0))
				end
			else
				_A.O(BanTBLS.Stored_DarkyBanTBL,v.UserId)
				if Speaker==_N then
					notify(v.Name.." cant the colour black anymore.",_A.R(1,1,0))
				else
					notify(Speaker.Name.." made them not be able to the colour black anymore: "..tostring(v.Name),_A.R(1,1,0))
				end
			end
		end
	end,
	["undarki"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,v in Sv.P(PlayerTbl)do
			if table.find(BanTBLS.Stored_DarkyBanTBL,v.UserId)~=_N then
				if Speaker==_N then
					notify(v.Name.." can not touch the colour black again.",_A.R(1,0,0))
				end
				table.remove(BanTBLS.Stored_DarkyBanTBL,table.find(BanTBLS.Stored_DarkyBanTBL,v.UserId))
			end
		end
	end,
	["lighty"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,v in Sv.P(PlayerTbl)do
			if table.find(BanTBLS.Stored_LightyBanTBL,v.UserId)~=_N then
				if Speaker==_N then
					notify(v.Name.." already cant the colour white grass.",_A.R(1,1,0))
				end
			else
				_A.O(BanTBLS.Stored_LightyBanTBL,v.UserId)
				if Speaker==_N then
					notify(v.Name.." cant the colour white anymore.",_A.R(1,1,0))
				else
					notify(Speaker.Name.." made them not be able to the colour white anymore: "..tostring(v.Name),_A.R(1,1,0))
				end
			end
		end
	end,
	["unlighty"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,v in Sv.P(PlayerTbl)do
			if table.find(BanTBLS.Stored_LightyBanTBL,v.UserId)~=_N then
				if Speaker==_N then
					notify(v.Name.." can not touch the colour white again.",_A.R(1,0,0))
				end
				table.remove(BanTBLS.Stored_LightyBanTBL,table.find(BanTBLS.Stored_LightyBanTBL,v.UserId))
			end
		end
	end,
	["metaly"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,v in Sv.P(PlayerTbl)do
			if table.find(BanTBLS.Stored_MetalBanTBL,v.UserId)~=_N then
				if Speaker==_N then
					notify(v.Name.." already cant touch metal.",_A.R(1,1,0))
				end
			else
				_A.O(BanTBLS.Stored_MetalBanTBL,v.UserId)
				if Speaker==_N then
					notify(v.Name.." cant touch metal anymore.",_A.R(1,1,0))
				else
					notify(Speaker.Name.." made them not be able to touch metal anymore: "..tostring(v.Name),_A.R(1,1,0))
				end
			end
		end
	end,
	["unmetaly"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,v in Sv.P(PlayerTbl)do
			if table.find(BanTBLS.Stored_MetalBanTBL,v.UserId)~=_N then
				if Speaker==_N then
					notify(v.Name.." can now touch metal again.",_A.R(1,0,0))
				end
				table.remove(BanTBLS.Stored_MetalBanTBL,table.find(BanTBLS.Stored_MetalBanTBL,v.UserId))
			end
		end
	end,
	["plasticy"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,v in Sv.P(PlayerTbl)do
			if table.find(BanTBLS.Stored_PlasticBanTBL,v.UserId)~=_N then
				if Speaker==_N then
					notify(v.Name.." already cant touch plastic.",_A.R(1,1,0))
				end
			else
				_A.O(BanTBLS.Stored_PlasticBanTBL,v.UserId)
				if Speaker==_N then
					notify(v.Name.." cant touch plastic anymore.",_A.R(1,1,0))
				else
					notify(Speaker.Name.." made them not be able to touch plastic anymore: "..tostring(v.Name),_A.R(1,1,0))
				end
			end
		end
	end,
	["unplasticy"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,v in Sv.P(PlayerTbl)do
			if table.find(BanTBLS.Stored_PlasticBanTBL,v.UserId)~=_N then
				if Speaker==_N then
					notify(v.Name.." can now touch plastic again.",_A.R(1,0,0))
				end
				table.remove(BanTBLS.Stored_PlasticBanTBL,table.find(BanTBLS.Stored_PlasticBanTBL,v.UserId))
			end
		end
	end,
	["deathexp"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,Plr in Sv.P(PlayerTbl)do
			if Plr:FindFirstChild("DeathXplosive")~=_N then
				if Speaker==_N then
					notify(Plr.Name.." already has deathexplosion enabled.",_A.R(1,1,0))
				end
			else
				Sv.Ins("BoolValue",Plr).Name="DeathXplosive"

				local OldHumanoid=nil

				if Connections[Plr.UserId] ~= nil then
					Connections[Plr.UserId]:Disconnect()
				end

				local Char = Plr.Character
				if Char ~= nil then
					local Humanoid=Char:FindFirstChildOfClass("Humanoid")
					local HRP=Char:FindFirstChild("HumanoidRootPart")or Char:FindFirstChild("Torso")
					if Humanoid ~= nil then
						if Humanoid:GetAttribute("CON")==nil then
							Humanoid:SetAttribute("CON","")
							OldHumanoid=Humanoid.Died:Connect(function()
								task.spawn(function()WAIT(10)Humanoid:SetAttribute("CON",nil) Humanoid=nil end)
								if Plr:FindFirstChild("DeathXplosive")~=nil then
									LocalisedFunctions.DoXplosiveThingy({RayObject=Ray.new(HRP.Position,Vector3.new(0,0,0))},Plr,nil,false)
								else
									Connections[Plr.UserId]:Disconnect()
								end 
								HRP=nil	
								OldHumanoid:Disconnect()
							end)
						end
					end
				end
				Char=nil
				Connections[Plr.UserId]=Plr.CharacterAdded:Connect(function(Char)
					if OldHumanoid then OldHumanoid:Disconnect() end
					local Humanoid=Char:FindFirstChildOfClass("Humanoid")
					local HRP=Char:FindFirstChild("HumanoidRootPart")or Char:FindFirstChild("Torso")
					if Humanoid ~= nil then
						if Humanoid:GetAttribute("CON")==nil then
							Humanoid:SetAttribute("CON","")
							OldHumanoid=Humanoid.Died:Connect(function()
								task.spawn(function()WAIT(10)Humanoid:SetAttribute("CON",nil) end)
								if Plr:FindFirstChild("DeathXplosive")~=nil then
									LocalisedFunctions.DoXplosiveThingy({RayObject=Ray.new(HRP.Position,Vector3.new(0,0,0))},Plr,nil,false)
								else
									Connections[Plr.UserId]:Disconnect()
								end 
								HRP=nil Humanoid=nil	
								OldHumanoid:Disconnect()
							end)
						end
					end
				end)

				if Speaker==_N then
					notify(Plr.Name.." now has deathexplosion enabled.",_A.R(1,1,0))
				else
					notify(Speaker.Name.." enabled deathexplosion to "..tostring(Plr.Name),_A.R(1,1,0))
				end
			end
		end
	end,
	["nodeathexp"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,Plr in Sv.P(PlayerTbl)do
			if Plr:FindFirstChild("DeathXplosive")==_N then
				if Speaker==_N then
					notify(Plr.Name.." doesnt have deathexplosion.",_A.R(1,1,0))
				end
			else
				Plr.DeathXplosive:Destroy()
				if Speaker==_N then
					notify(Plr.Name.." nolonger has deathexplosion enabled.",_A.R(1,1,0))
				else
					notify(Speaker.Name.." removed deathexplosion from "..tostring(Plr.Name),_A.R(1,1,0))
				end
			end
		end
	end,
	["damagegun"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,Plr in Sv.P(PlayerTbl)do
			if Plr:FindFirstChild("DamageGun")~=_N then
				if Speaker==_N then
					notify(Plr.Name.." already has damagegun enabled.",_A.R(1,1,0))
				end
			else
				Sv.Ins("BoolValue",Plr).Name="SuperGun"
				if Speaker==_N then
					notify(Plr.Name.." now has damagegun enabled.",_A.R(1,1,0))
				else
					notify(Speaker.Name.." enabled damagegun to "..tostring(Plr.Name),_A.R(1,1,0))
				end
			end
		end
	end,
	["nodamagegun"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,Plr in Sv.P(PlayerTbl)do
			if Plr:FindFirstChild("DamageGun")==_N then
				if Speaker==_N then
					notify(Plr.Name.." doesnt have damagegun.",_A.R(1,1,0))
				end
			else
				Plr.SuperGun:Destroy()
				if Speaker==_N then
					notify(Plr.Name.." nolonger has damagegun enabled.",_A.R(1,1,0))
				else
					notify(Speaker.Name.." removed damagegun from "..tostring(Plr.Name),_A.R(1,1,0))
				end
			end
		end
	end,
	["cuff"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		local OldTeam=Sv.LPlr.TeamColor.Name
		local OldCF = Sv.LPlr.Character.PrimaryPart.CFrame
		if OldTeam == "Medium stone grey" then
			TeamEvent:FireServer("Bright orange")
			local A = Sv.LPlr.Character
			repeat  WAIT(0) if not A:IsDescendantOf(workspace) then break end until not A:IsDescendantOf(workspace)
			A=nil
			repeat  WAIT(0) if Sv.LPlr.Character.PrimaryPart ~= nil then break end until Sv.LPlr.Character.PrimaryPart ~= nil WAIT(0.1)
		end

		local TempNoclip = nil

		local BV=nil
		TempNoclip=svc("RunService").Stepped:Connect(function()
			local Char=Sv.LPlr.Character
			if Char==nil then return end
			for i,v in pairs(Char:GetDescendants()) do
				if v:IsA("BasePart")then
					v.CanCollide=false
					if v.Name=="HumanoidRootPart"then
						if v:FindFirstChild("Omg")==nil then
							BV=Instance.new("BodyVelocity",v)
							BV.Name="Omg"
							BV.Velocity=Vector3.new(0,0,0)BV.MaxForce=Vector3.new("inf","inf","inf")
						end
					end
				elseif v:IsA("Humanoid") then
					v.PlatformStand=true
				end
			end
			Char=nil



		end)

		for i,Plr in Sv.P(PlayerTbl)do
			if Plr.TeamColor.Name ~= "Bright blue" then
				if Plr.Name ~= Sv.LPlr.Name then
					if Plr.Character ~= nil then
						if Plr.TeamColor.Name=="Really red"or Plr.TeamColor.Name=="Bright orange" then
							LocalisedFunctions.ArrestDatNoob(Plr)
							continue
						end
					end

				end
			end
		end
		TempNoclip:Disconnect()
		if BV ~= nil then 
			if BV.Parent ~= nil then
				BV.Parent.CFrame=BV.Parent.CFrame-Vector3.new(0,5,0)
				BV.Parent.AssemblyAngularVelocity=Vector3.new(0,0,0)
			end
			BV:Destroy() 
		end
		BV=nil
		if Sv.LPlr.Character ~= nil then
			local HUM = Sv.LPlr.Character:FindFirstChildOfClass("Humanoid")
			if HUM~=nil then
				HUM.PlatformStand=false 
			end HUM=nil
		end	
		WAIT(0.3)
		if Sv.LPlr.TeamColor.Name ~= OldTeam then
			if OldTeam=="Really red" then
				LocalisedFunctions.DoCriminal(Sv.LPlr)
			else
				if OldTeam=="Bright blue" or OldTeam=="Bright orange" or OldTeam=="Medium stone grey" then
					TeamEvent:FireServer(OldTeam)
				end
			end
		end
	end,
	["loudgun"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,Plr in Sv.P(PlayerTbl)do
			if Plr:FindFirstChild("LoudGun")~=_N then
				if Speaker==_N then
					notify(Plr.Name.." already has loudgun enabled.",_A.R(1,1,0))
				end
			else
				Sv.Ins("BoolValue",Plr).Name="LoudGun"
				if Speaker==_N then
					notify(Plr.Name.." now has loudgun enabled.",_A.R(1,1,0))
				else
					notify(Speaker.Name.." enabled loudgun to "..tostring(Plr.Name),_A.R(1,1,0))
				end
			end
		end
	end,
	["noloudgun"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,Plr in Sv.P(PlayerTbl)do
			if Plr:FindFirstChild("LoudGun")==_N then
				if Speaker==_N then
					notify(Plr.Name.." doesnt have loudgun.",_A.R(1,1,0))
				end
			else
				Plr.LoudGun:Destroy()
				if Speaker==_N then
					notify(Plr.Name.." nolonger has loudgun enabled.",_A.R(1,1,0))
				else
					notify(Speaker.Name.." removed loudgun from "..tostring(Plr.Name),_A.R(1,1,0))
				end
			end
		end
	end,
	["antishoot"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,Plr in Sv.P(PlayerTbl)do
			if Plr:FindFirstChild("AntiShoot")~=_N then
				if Speaker==_N then
					notify(Plr.Name.." already has antishoot enabled.",_A.R(1,1,0))
				end
			else
				Sv.Ins("BoolValue",Plr).Name="AntiShoot"
				if Speaker==_N then
					notify(Plr.Name.." now has antishoot enabled.",_A.R(1,1,0))
				else
					notify(Speaker.Name.." enabled antishoot to "..tostring(Plr.Name),_A.R(1,1,0))
				end
			end
		end
	end,
	["noantishoot"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,Plr in Sv.P(PlayerTbl)do
			if Plr:FindFirstChild("AntiShoot")==_N then
				if Speaker==_N then
					notify(Plr.Name.." doesnt have antishoot.",_A.R(1,1,0))
				end
			else
				Plr.AntiShoot:Destroy()
				if Speaker==_N then
					notify(Plr.Name.." nolonger has antishoot enabled.",_A.R(1,1,0))
				else
					notify(Speaker.Name.." removed antishoot from "..tostring(Plr.Name),_A.R(1,1,0))
				end
			end
		end
	end,
	["unhban"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,v in Sv.P(PlayerTbl)do
			if table.find(BanTBLS.Stored_GunbanTBL,v.UserId)~=_N then
				if Speaker==_N then
					notify(v.Name.." is nolonger hostilebanned.",_A.R(1,0,0))
				end
				table.remove(BanTBLS.Stored_GunbanTBL,table.find(BanTBLS.Stored_GunbanTBL,v.UserId))
			end
		end
	end,
	["items"]=function(PlayerTbl,Speaker)
		local OldTeam=Sv.LPlr.TeamColor.Name


		if OldTeam~="Bright blue" then
			LocalisedFunctions.RespawnPlayerOnGuardTeam()wait()
			if Sv.LPlr.TeamColor.Name == "Bright blue" then else
				if OldTeam == "Bright orange" or OldTeam == "Bright blue" or OldTeam == "Medium stone grey" then
					TeamEvent:FireServer(OldTeam)
				end
				return
			end

		end

		if PlayerTbl==_N then if Speaker ~= _N then LocalisedFunctions.DropItems(Speaker)end if OldTeam == "Really red" then LocalisedFunctions.DoCriminal(Sv.LPlr) else if OldTeam == "Bright orange" or OldTeam == "Bright blue" or OldTeam == "Medium stone grey" then TeamEvent:FireServer(OldTeam)end end return end

		for i,SelectedPlr in pairs(PlayerTbl) do
			LocalisedFunctions.DropItems(SelectedPlr)
			wait()
		end
		if Sv.LPlr.TeamColor.Name ~= OldTeam then
			if OldTeam == "Really red" then
				LocalisedFunctions.DoCriminal(Sv.LPlr)
			else
				if OldTeam == "Bright orange" or OldTeam == "Bright blue" or OldTeam == "Medium stone grey" then
					TeamEvent:FireServer(OldTeam)
				end
			end
		end
	end,
	["bring"]=function(PlayerTbl,Speaker)
		local OldTeam=Sv.LPlr.TeamColor.Name
		if OldTeam=="Medium stone grey" then
			TeamEvent:FireServer("Bright orange")
			local A = Sv.LPlr.Character:FindFirstChild("Head")
			repeat  WAIT(0) if not A:IsDescendantOf(workspace) then break end
			until not A:IsDescendantOf(workspace)A=nil WAIT(0.1)
		end
		if PlayerTbl==_N then 
			if Speaker~=_N then local Oldpos = LocalisedFunctions.BringPlayerFunc({Speaker})LocalisedFunctions.TeleportPlayer(Oldpos)Oldpos=nil end

			if Sv.LPlr.TeamColor.Name ~= OldTeam then
				if OldTeam=="Medium stone grey" then
					TeamEvent:FireServer("Medium stone grey")
				elseif OldTeam=="Really red" then
					LocalisedFunctions.DoCriminal()

				end
			end

			return 
		end

		local OldPos = Speaker.Character.Head.CFrame

		for i,SelectedPlayer in pairs(PlayerTbl) do
			if SelectedPlayer==Sv.LPlr then continue end
			if i>4 then break end
			LocalisedFunctions.BringPlayerFunc({SelectedPlayer})

			WAIT(0.05)
		end

		for i=0,3 do wait()
			LocalisedFunctions.TeleportPlayer(OldPos)
		end
		OldPos=nil

		if Sv.LPlr.TeamColor.Name ~= OldTeam then
			if OldTeam=="Medium stone grey" then
				TeamEvent:FireServer("Medium stone grey")
			elseif OldTeam=="Really red" then
				LocalisedFunctions.DoCriminal()

			end
		end
	end,
	["car"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		if Speaker ==_N then 

			return
		end


		if PlayerTbl[1]==nil then return end

		local OldTeam=Sv.LPlr.TeamColor.Name
		if OldTeam=="Medium stone grey" then
			TeamEvent:FireServer("Bright orange")
			local A = Sv.LPlr.Character:FindFirstChild("Head")
			repeat  WAIT(0) if not A:IsDescendantOf(workspace) then break end
			until not A:IsDescendantOf(workspace)A=nil WAIT(0.1)
		end

		local TargetChar = PlayerTbl[1].Character
		if TargetChar ~= nil then
			local OldPos = Sv.LPlr.Character.Head.CFrame
			local TargetCF = TargetChar.Head.CFrame


			local Car = LocalisedFunctions.SpawnCar()
			repeat  WAIT(0)
				Car = LocalisedFunctions.SpawnCar()
				if Car ~= nil then break end
			until Car ~= nil
			local HB=Car:FindFirstChild("Body")
			local HWheels=Car:FindFirstChild("Wheels")
			local HS=HB:FindFirstChildWhichIsA("VehicleSeat")
			if HS.Occupant==_N then
				repeat  WAIT(0)
					if not HS:IsDescendantOf(workspace)then return end
					HS:Sit(Sv.LPlr[_A.P].Humanoid)
				until HS.Occupant~=_N
			end
			Car=nil
			HB=nil
			HS=nil
			HWheels=nil

			for i=0,3 do wait()
				LocalisedFunctions.TeleportPlayer(TargetCF)
			end
			WAIT(0.35)
			local H = Sv.LPlr.Character:FindFirstChildOfClass("Humanoid")
			if H ~= nil then

				H.Sit=false
				H:ChangeState("Jumping")
			end
			WAIT(0.1)
			H=nil
			LocalisedFunctions.TeleportPlayer(OldPos)
			TargetCF=nil
			OldPos=nil
		end

		if Sv.LPlr.TeamColor.Name ~= OldTeam then
			if OldTeam=="Medium stone grey" then
				TeamEvent:FireServer("Medium stone grey")
			elseif OldTeam=="Really red" then
				LocalisedFunctions.DoCriminal()

			end
		end
	end,
	["prison"]=function(PlayerTbl,Speaker)
		local DesiredTargetCF = CFrame.new(942, 100, 2376)
		if PlayerTbl==_N then return end
		if Speaker ==_N then 
			Speaker.Character.HumanoidRootPart.CFrame=DesiredTargetCF
			return
		end

		if PlayerTbl[1]==nil then return end

		local OldTeam=Sv.LPlr.TeamColor.Name
		if OldTeam=="Medium stone grey" then
			TeamEvent:FireServer("Bright orange")
			local A = Sv.LPlr.Character:FindFirstChild("Head")
			repeat  WAIT(0) if not A:IsDescendantOf(workspace) then break end
			until not A:IsDescendantOf(workspace)A=nil WAIT(0.1)
		end

		local TargetChar = PlayerTbl[1].Character
		if TargetChar ~= nil then
			local OldPos = Sv.LPlr.Character.Head.CFrame
			local TargetCF = TargetChar.Head.CFrame

			for i,SelectedPlayer in pairs(PlayerTbl) do
				LocalisedFunctions.BringPlayerFunc({SelectedPlayer})
				break
			end

			for i=0,3 do wait()
				LocalisedFunctions.TeleportPlayer(DesiredTargetCF)
			end
			WAIT(0.35)
			local H = Sv.LPlr.Character:FindFirstChildOfClass("Humanoid")
			if H ~= nil then

				H.Sit=false
				H:ChangeState("Jumping")
			end
			WAIT(0.1)
			H=nil
			LocalisedFunctions.TeleportPlayer(OldPos)
			TargetCF=nil
			OldPos=nil
		end
		DesiredTargetCF=nil
		if Sv.LPlr.TeamColor.Name ~= OldTeam then
			if OldTeam=="Medium stone grey" then
				TeamEvent:FireServer("Medium stone grey")
			elseif OldTeam=="Really red" then
				LocalisedFunctions.DoCriminal()

			end
		end

	end,
	["yard"]=function(PlayerTbl,Speaker)
		local DesiredTargetCF = CFrame.new(785, 98, 2471)
		if PlayerTbl==_N then return end
		if Speaker ==_N then 
			Speaker.Character.HumanoidRootPart.CFrame=DesiredTargetCF
			return
		end

		if PlayerTbl[1]==nil then return end

		local OldTeam=Sv.LPlr.TeamColor.Name
		if OldTeam=="Medium stone grey" then
			TeamEvent:FireServer("Bright orange")
			local A = Sv.LPlr.Character:FindFirstChild("Head")
			repeat  WAIT(0) if not A:IsDescendantOf(workspace) then break end
			until not A:IsDescendantOf(workspace)A=nil WAIT(0.1)
		end

		local TargetChar = PlayerTbl[1].Character
		if TargetChar ~= nil then
			local OldPos = Sv.LPlr.Character.Head.CFrame
			local TargetCF = TargetChar.Head.CFrame

			for i,SelectedPlayer in pairs(PlayerTbl) do
				LocalisedFunctions.BringPlayerFunc({SelectedPlayer})
				break
			end

			for i=0,3 do wait()
				LocalisedFunctions.TeleportPlayer(DesiredTargetCF)
			end
			WAIT(0.35)
			local H = Sv.LPlr.Character:FindFirstChildOfClass("Humanoid")
			if H ~= nil then

				H.Sit=false
				H:ChangeState("Jumping")
			end
			WAIT(0.1)
			H=nil
			LocalisedFunctions.TeleportPlayer(OldPos)
			TargetCF=nil
			OldPos=nil
		end
		DesiredTargetCF=nil
		if Sv.LPlr.TeamColor.Name ~= OldTeam then
			if OldTeam=="Medium stone grey" then
				TeamEvent:FireServer("Medium stone grey")
			elseif OldTeam=="Really red" then
				LocalisedFunctions.DoCriminal()

			end
		end

	end,
	["tower"]=function(PlayerTbl,Speaker)
		local DesiredTargetCF = CFrame.new(823, 143, 2588)
		if PlayerTbl==_N then return end
		if Speaker ==_N then 
			Speaker.Character.HumanoidRootPart.CFrame=DesiredTargetCF
			return
		end

		if PlayerTbl[1]==nil then return end

		local OldTeam=Sv.LPlr.TeamColor.Name
		if OldTeam=="Medium stone grey" then
			TeamEvent:FireServer("Bright orange")
			local A = Sv.LPlr.Character:FindFirstChild("Head")
			repeat  WAIT(0) if not A:IsDescendantOf(workspace) then break end
			until not A:IsDescendantOf(workspace)A=nil WAIT(0.1)
		end

		local TargetChar = PlayerTbl[1].Character
		if TargetChar ~= nil then
			local OldPos = Sv.LPlr.Character.Head.CFrame
			local TargetCF = TargetChar.Head.CFrame

			for i,SelectedPlayer in pairs(PlayerTbl) do
				LocalisedFunctions.BringPlayerFunc({SelectedPlayer})
				break
			end

			for i=0,3 do wait()
				LocalisedFunctions.TeleportPlayer(DesiredTargetCF)
			end
			WAIT(0.35)
			local H = Sv.LPlr.Character:FindFirstChildOfClass("Humanoid")
			if H ~= nil then

				H.Sit=false
				H:ChangeState("Jumping")
			end
			WAIT(0.1)
			H=nil
			LocalisedFunctions.TeleportPlayer(OldPos)
			TargetCF=nil
			OldPos=nil
		end
		DesiredTargetCF=nil
		if Sv.LPlr.TeamColor.Name ~= OldTeam then
			if OldTeam=="Medium stone grey" then
				TeamEvent:FireServer("Medium stone grey")
			elseif OldTeam=="Really red" then
				LocalisedFunctions.DoCriminal()

			end
		end

	end,

	["secretroom"]=function(PlayerTbl,Speaker)
		local DesiredTargetCF = CFrame.new(701, 100, 2366)
		if PlayerTbl==_N then return end
		if Speaker ==_N then 
			Speaker.Character.HumanoidRootPart.CFrame=DesiredTargetCF
			return
		end

		if PlayerTbl[1]==nil then return end

		local OldTeam=Sv.LPlr.TeamColor.Name
		if OldTeam=="Medium stone grey" then
			TeamEvent:FireServer("Bright orange")
			local A = Sv.LPlr.Character:FindFirstChild("Head")
			repeat  WAIT(0) if not A:IsDescendantOf(workspace) then break end
			until not A:IsDescendantOf(workspace)A=nil WAIT(0.1)
		end

		local TargetChar = PlayerTbl[1].Character
		if TargetChar ~= nil then
			local OldPos = Sv.LPlr.Character.Head.CFrame
			local TargetCF = TargetChar.Head.CFrame

			for i,SelectedPlayer in pairs(PlayerTbl) do
				LocalisedFunctions.BringPlayerFunc({SelectedPlayer})
				break
			end

			for i=0,3 do wait()
				LocalisedFunctions.TeleportPlayer(DesiredTargetCF)
			end
			WAIT(0.35)
			local H = Sv.LPlr.Character:FindFirstChildOfClass("Humanoid")
			if H ~= nil then

				H.Sit=false
				H:ChangeState("Jumping")
			end
			WAIT(0.1)
			H=nil
			LocalisedFunctions.TeleportPlayer(OldPos)
			TargetCF=nil
			OldPos=nil
		end
		DesiredTargetCF=nil
		if Sv.LPlr.TeamColor.Name ~= OldTeam then
			if OldTeam=="Medium stone grey" then
				TeamEvent:FireServer("Medium stone grey")
			elseif OldTeam=="Really red" then
				LocalisedFunctions.DoCriminal()

			end
		end

	end,
	["roof"]=function(PlayerTbl,Speaker)
		local DesiredTargetCF = CFrame.new(729, 124, 2292)
		if PlayerTbl==_N then return end
		if Speaker ==_N then 
			Speaker.Character.HumanoidRootPart.CFrame=DesiredTargetCF
			return
		end

		if PlayerTbl[1]==nil then return end

		local OldTeam=Sv.LPlr.TeamColor.Name
		if OldTeam=="Medium stone grey" then
			TeamEvent:FireServer("Bright orange")
			local A = Sv.LPlr.Character:FindFirstChild("Head")
			repeat  WAIT(0) if not A:IsDescendantOf(workspace) then break end
			until not A:IsDescendantOf(workspace)A=nil WAIT(0.1)
		end

		local TargetChar = PlayerTbl[1].Character
		if TargetChar ~= nil then
			local OldPos = Sv.LPlr.Character.Head.CFrame
			local TargetCF = TargetChar.Head.CFrame

			for i,SelectedPlayer in pairs(PlayerTbl) do
				LocalisedFunctions.BringPlayerFunc({SelectedPlayer})
				break
			end

			for i=0,3 do wait()
				LocalisedFunctions.TeleportPlayer(DesiredTargetCF)
			end
			WAIT(0.35)
			local H = Sv.LPlr.Character:FindFirstChildOfClass("Humanoid")
			if H ~= nil then

				H.Sit=false
				H:ChangeState("Jumping")
			end
			WAIT(0.1)
			H=nil
			LocalisedFunctions.TeleportPlayer(OldPos)
			TargetCF=nil
			OldPos=nil
		end
		DesiredTargetCF=nil
		if Sv.LPlr.TeamColor.Name ~= OldTeam then
			if OldTeam=="Medium stone grey" then
				TeamEvent:FireServer("Medium stone grey")
			elseif OldTeam=="Really red" then
				LocalisedFunctions.DoCriminal()

			end
		end

	end,
	["cafe"]=function(PlayerTbl,Speaker)
		local DesiredTargetCF = CFrame.new(887, 100, 2274)
		if PlayerTbl==_N then return end
		if Speaker ==_N then 
			Speaker.Character.HumanoidRootPart.CFrame=DesiredTargetCF
			return
		end

		if PlayerTbl[1]==nil then return end

		local OldTeam=Sv.LPlr.TeamColor.Name
		if OldTeam=="Medium stone grey" then
			TeamEvent:FireServer("Bright orange")
			local A = Sv.LPlr.Character:FindFirstChild("Head")
			repeat  WAIT(0) if not A:IsDescendantOf(workspace) then break end
			until not A:IsDescendantOf(workspace)A=nil WAIT(0.1)
		end

		local TargetChar = PlayerTbl[1].Character
		if TargetChar ~= nil then
			local OldPos = Sv.LPlr.Character.Head.CFrame
			local TargetCF = TargetChar.Head.CFrame

			for i,SelectedPlayer in pairs(PlayerTbl) do
				LocalisedFunctions.BringPlayerFunc({SelectedPlayer})
				break
			end

			for i=0,3 do wait()
				LocalisedFunctions.TeleportPlayer(DesiredTargetCF)
			end
			WAIT(0.35)
			local H = Sv.LPlr.Character:FindFirstChildOfClass("Humanoid")
			if H ~= nil then

				H.Sit=false
				H:ChangeState("Jumping")
			end
			H=nil
			WAIT(0.1)
			LocalisedFunctions.TeleportPlayer(OldPos)
			TargetCF=nil
			OldPos=nil
		end
		DesiredTargetCF=nil
		if Sv.LPlr.TeamColor.Name ~= OldTeam then
			if OldTeam=="Medium stone grey" then
				TeamEvent:FireServer("Medium stone grey")
			elseif OldTeam=="Really red" then
				LocalisedFunctions.DoCriminal()

			end
		end

	end,
	["crimbase"]=function(PlayerTbl,Speaker)
		local DesiredTargetCF = CFrame.new(-896, 94, 2135)
		if PlayerTbl==_N then return end
		if Speaker ==_N then 
			Speaker.Character.HumanoidRootPart.CFrame=DesiredTargetCF
			return
		end

		if PlayerTbl[1]==nil then return end

		local OldTeam=Sv.LPlr.TeamColor.Name
		if OldTeam=="Medium stone grey" then
			TeamEvent:FireServer("Bright orange")
			local A = Sv.LPlr.Character:FindFirstChild("Head")
			repeat  WAIT(0) if not A:IsDescendantOf(workspace) then break end
			until not A:IsDescendantOf(workspace)A=nil WAIT(0.1)
		end

		local TargetChar = PlayerTbl[1].Character
		if TargetChar ~= nil then
			local OldPos = Sv.LPlr.Character.Head.CFrame
			local TargetCF = TargetChar.Head.CFrame

			for i,SelectedPlayer in pairs(PlayerTbl) do
				LocalisedFunctions.BringPlayerFunc({SelectedPlayer})
				break
			end

			for i=0,3 do wait()
				LocalisedFunctions.TeleportPlayer(DesiredTargetCF)
			end
			WAIT(0.35)
			local H = Sv.LPlr.Character:FindFirstChildOfClass("Humanoid")
			if H ~= nil then

				H.Sit=false
				H:ChangeState("Jumping")
			end
			WAIT(0.1)
			H=nil
			LocalisedFunctions.TeleportPlayer(OldPos)
			TargetCF=nil
			OldPos=nil
		end
		DesiredTargetCF=nil
		if Sv.LPlr.TeamColor.Name ~= OldTeam then
			if OldTeam=="Medium stone grey" then
				TeamEvent:FireServer("Medium stone grey")
			elseif OldTeam=="Really red" then
				LocalisedFunctions.DoCriminal()

			end
		end

	end,
	["to"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		if Speaker ==_N then 
			Speaker.Character.HumanoidRootPart.CFrame=PlayerTbl[1].Character.Head.CFrame
			return
		end

		if PlayerTbl[1]==nil then return end

		if PlayerTbl[1]==Speaker then 
		else
			local OldTeam=Sv.LPlr.TeamColor.Name
			if OldTeam=="Medium stone grey" then
				TeamEvent:FireServer("Bright orange")
				local A = Sv.LPlr.Character:FindFirstChild("Head")
				repeat  WAIT(0) if not A:IsDescendantOf(workspace) then break end
				until not A:IsDescendantOf(workspace)A=nil WAIT(0.1)
			end

			local TargetChar = PlayerTbl[1].Character
			if TargetChar ~= nil then
				local OldPos = Sv.LPlr.Character.Head.CFrame
				local TargetCF = TargetChar.Head.CFrame

				LocalisedFunctions.BringPlayerFunc({Speaker})

				for i=0,3 do wait()
					LocalisedFunctions.TeleportPlayer(TargetCF)
				end
				WAIT(0.35)
				local H = Sv.LPlr.Character:FindFirstChildOfClass("Humanoid")
				if H ~= nil then

					H.Sit=false
					H:ChangeState("Jumping")
				end
				WAIT(0.1)
				H=nil
				LocalisedFunctions.TeleportPlayer(OldPos)
				TargetCF=nil
				OldPos=nil
			end

			if Sv.LPlr.TeamColor.Name ~= OldTeam then
				if OldTeam=="Medium stone grey" then
					TeamEvent:FireServer("Medium stone grey")
				elseif OldTeam=="Really red" then
					LocalisedFunctions.DoCriminal()

				end
			end
		end

	end,
	["k"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		if #PlayerTbl==1 then
			if PlayerTbl[1]==Speaker then
				if Speaker==_N then
					return
				else
					dokill({Speaker})
					return
				end
			end
		end
		LocalisedFunctions.kill(PlayerTbl,true)
	end,
	["t"]=function(PlayerTbl,Speaker)

		local OLDTEAM = Sv.LPlr.TeamColor.Name
		local OLDPOS = Sv.LPlr.Character.HumanoidRootPart.CFrame

		local Taser = Sv.LPlr.Character:FindFirstChild("Taser")or Sv.LPlr.Backpack:FindFirstChild("Taser")

		if Taser==nil then
			local OLDC = Sv.LPlr.Character
			TeamEvent:FireServer("Bright blue")
			local Attempts = 30
			repeat  WAIT(0.1)Attempts-=1
				if Attempts<=0 then break end
			until not OLDC:IsDescendantOf(workspace)
			OLDC=nil
			if Attempts<=0 then
				Attempts=nil
				OLDPOS=nil
				OLDTEAM=nil
				return
			end
			Attempts=nil

			repeat  WAIT(0.1)
				Taser= Sv.LPlr.Character:FindFirstChild("Taser")or Sv.LPlr.Backpack:FindFirstChild("Taser")
				if Taser~=nil then break end
			until Taser ~= nil
		end

		if PlayerTbl==_N then return end
		if #PlayerTbl==1 then
			if PlayerTbl[1]==Speaker then
				if Speaker==_N then
					return
				else
					dotaze({Speaker})

					if Sv.LPlr.TeamColor.Name ~= OLDTEAM then
						if OLDTEAM=="Medium stone grey" then
							TeamEvent:FireServer("Medium stone grey")
						elseif OLDTEAM=="Really red" then
							LocalisedFunctions.DoCriminal()
						end


						Sv.LPlr.Character.HumanoidRootPart.CFrame=OLDPOS
					end
					OLDPOS=nil
					OLDTEAM=nil
					return
				end
			end
		end
		LocalisedFunctions.taze(PlayerTbl,true)

		if Sv.LPlr.TeamColor.Name ~= OLDTEAM then
			if OLDTEAM=="Medium stone grey" then
				TeamEvent:FireServer("Medium stone grey")
			elseif OLDTEAM=="Really red" then
				LocalisedFunctions.DoCriminal()
			end


			Sv.LPlr.Character.HumanoidRootPart.CFrame=OLDPOS
		end

		OLDPOS=nil
		OLDTEAM=nil

	end,
	["h"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		if #PlayerTbl==1 then
			if PlayerTbl[1]==Speaker then
				if Speaker==_N then
					return
				else
					dohurt({Speaker})
					return
				end
			end
		end
		LocalisedFunctions.hurt(PlayerTbl)
	end,
	["ow"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		if #PlayerTbl==1 then
			if PlayerTbl[1]==Speaker then
				if Speaker==_N then
					return
				else
					dodamage({Speaker})
					return
				end
			end
		end
		LocalisedFunctions.damage(PlayerTbl)
	end,
	["opendoors"]=function(TBL,Speaker)
		if not DoorsCooldown then DoorsCooldown=_T else return end
		spawn(function()WAIT(0.2)DoorsCooldown=_F end)
		local Oldteam = Sv.LPlr.TeamColor.Name
		if Oldteam == "Medium stone grey" then
			local A = Sv.LPlr.Character.Head
			TeamEvent:FireServer("Bright blue")
			local i =0
			repeat  WAIT(0.1)i=i+1 if i>40 then break end if not A:IsDescendantOf(workspace) then break end until not A:IsDescendantOf(workspace)
			i,A=nil,nil
			if Sv.LPlr.TeamColor.Name == Oldteam then return end
			WAIT(0.2)
		end
		local OldHitboxCF={}
		local HotDoorBlock=nil
		local HotHitbox=nil 
		local PartToTouchCF=(Sv.LPlr[_A.P]:FindFirstChild("HumanoidRootPart") or Sv.LPlr[_A.P]:FindFirstChild("Torso")).CFrame
		if Sv.LPlr.TeamColor.Name~="Bright blue"then
			local K=Sv.LPlr.Backpack:FindFirstChild("Key card") or Sv.LPlr[_A.P]:FindFirstChild("Key card")
			if K~=_N then K[_A.H]=Sv.LPlr[_A.P] PartToTouchCF=K.Handle.CFrame svc("RunService").Heartbeat:Wait()svc("RunService").Heartbeat:Wait()end
			spawn(function()WAIT(0.2)K[_A.H]=Sv.LPlr.Backpack K=_N end)
		end
		if PartToTouchCF==_N then return end
		for i,v in Sv.P(workspace.Doors:GetChildren())do
			HotDoorBlock=v:FindFirstChild("block")
			if HotDoorBlock~=_N then
				HotHitbox=HotDoorBlock:FindFirstChild("hitbox")
				if HotHitbox~=_N then
					OldHitboxCF[HotHitbox]={[1]=HotHitbox.CFrame,[2]=HotHitbox.CanCollide}
					HotHitbox.CanCollide=_F
					HotHitbox.CFrame=PartToTouchCF
					local AA=HotHitbox:FindFirstChildOfClass("Decal")
					if AA~=_N then spawn(function()AA.Transparency=1 WAIT(0.4)AA.Transparency=0 end)end 
					AA=_N
				end
			end
		end

		Sv.LPlr.Character.HumanoidRootPart.Velocity=Vector3.new(0,5,0)

		svc("RunService").Heartbeat:Wait()
		svc("RunService").Heartbeat:Wait()

		for HitBoxPart,CF in Sv.P(OldHitboxCF)do HitBoxPart.CFrame=CF[1]HitBoxPart.CanCollide=CF[2]end
		OldHitboxCF=_N
		HotDoorBlock=nil
		HotHitbox=nil 

		if Oldteam == "Medium stone grey" then
			TeamEvent:FireServer(Oldteam)
		end

	end,
	["rg"]=function(PlayerTbl,Speaker)
		local SpawnPoint = workspace["Criminals Spawn"].SpawnLocation
		local OldPos = Sv.LPlr.Character.HumanoidRootPart.CFrame
		local OldCF = SpawnPoint.CFrame
		local OldSize = SpawnPoint.Size
		SpawnPoint.Size=Vector3.new(20,5,20)
		SpawnPoint.Transparency=1

		local OldTeam=Sv.LPlr.TeamColor.Name
		if OldTeam=="Medium stone grey" then
			TeamEvent:FireServer("Bright orange")
			local A = Sv.LPlr.Character:FindFirstChild("Head")
			repeat  WAIT(0) if not A:IsDescendantOf(workspace) then break end
			until not A:IsDescendantOf(workspace)A=nil WAIT(0.1)
		end
		if PlayerTbl==_N then 
			if Speaker~=_N then
				if Speaker.TeamColor.Name=="Bright blue"then 
					for i,v in pairs(Sv.LPlr.Character:GetChildren()) do if v:IsA("BasePart") then v.CanTouch=false end end
					LocalisedFunctions.BringPlayerFunc({Speaker},SpawnPoint)
					SpawnPoint.CFrame=(Speaker.Character:FindFirstChild("Head")or Speaker.Character:FindFirstChild("Torso")).CFrame
					WAIT(0.05)
				end

				if Sv.LPlr.TeamColor.Name ~= OldTeam then
					if OldTeam=="Medium stone grey" then
						TeamEvent:FireServer("Medium stone grey")
					elseif OldTeam=="Really red" then
						LocalisedFunctions.DoCriminal()

					end
				end
				return 
			end
		end
		for i,SelectedPlayer in pairs(PlayerTbl) do
			if SelectedPlayer.TeamColor.Name=="Bright blue"then 
				for i,v in pairs(Sv.LPlr.Character:GetChildren()) do if v:IsA("BasePart") then v.CanTouch=false end end
				LocalisedFunctions.BringPlayerFunc({SelectedPlayer},SpawnPoint)
				SpawnPoint.CFrame=(SelectedPlayer.Character:FindFirstChild("Head")or SelectedPlayer.Character:FindFirstChild("Torso")).CFrame
				WAIT(0.05)
			end
		end

		local Humanoid = Sv.LPlr.Character:FindFirstChildOfClass("Humanoid")
		LocalisedFunctions.TeleportPlayer(CFrame.new(0,-200,0))
		WAIT(0.25)
		if Humanoid ~= nil then Humanoid.Sit=false end
		LocalisedFunctions.TeleportPlayer(OldPos)
		OldPos=nil
		SpawnPoint.CFrame=OldCF
		SpawnPoint.Size=OldSize
		SpawnPoint.Transparency=0
		OldCF,OldSize=_N,_N
		for i,v in pairs(Sv.LPlr.Character:GetChildren()) do if v:IsA("BasePart") then v.CanTouch=true end end

		if Sv.LPlr.TeamColor.Name ~= OldTeam then
			if OldTeam=="Medium stone grey" then
				TeamEvent:FireServer("Medium stone grey")
			elseif OldTeam=="Really red" then
				LocalisedFunctions.DoCriminal()
			end
		end
	end,
	["crimk"]=function(PlayerTbl,Speaker)
		local SpawnPoint = workspace["Criminals Spawn"].SpawnLocation
		local OldPos = Sv.LPlr.Character.HumanoidRootPart.CFrame
		local OldCF = SpawnPoint.CFrame
		local OldSize = SpawnPoint.Size
		SpawnPoint.Size=Vector3.new(20,5,20)
		SpawnPoint.Transparency=1

		local OldTeam=Sv.LPlr.TeamColor.Name
		if OldTeam=="Medium stone grey" then
			TeamEvent:FireServer("Bright orange")
			local A = Sv.LPlr.Character:FindFirstChild("Head")
			repeat  WAIT(0) if not A:IsDescendantOf(workspace) then break end
			until not A:IsDescendantOf(workspace)A=nil WAIT(0.1)
		end
		if PlayerTbl==_N then 
			if Speaker~=_N then
				if Speaker.TeamColor.Name=="Really red"then 

				else 
					for i,v in pairs(Sv.LPlr.Character:GetChildren()) do if v:IsA("BasePart") then v.CanTouch=false end end
					LocalisedFunctions.BringPlayerFunc({Speaker},SpawnPoint,true)
					SpawnPoint.CFrame=(Speaker.Character:FindFirstChild("Head")or Speaker.Character:FindFirstChild("Torso")).CFrame
					WAIT(0.05)
				end

				if Sv.LPlr.TeamColor.Name ~= OldTeam then
					if OldTeam=="Medium stone grey" then
						TeamEvent:FireServer("Medium stone grey")
					elseif OldTeam=="Really red" then
						LocalisedFunctions.DoCriminal()

					end
				end
				return 
			end
		end
		for i,SelectedPlayer in pairs(PlayerTbl) do
			if SelectedPlayer.TeamColor.Name=="Really red"then 

			else 
				for i,v in pairs(Sv.LPlr.Character:GetChildren()) do if v:IsA("BasePart") then v.CanTouch=false end end
				LocalisedFunctions.BringPlayerFunc({SelectedPlayer},SpawnPoint,true)
				SpawnPoint.CFrame=(Sv.LPlr.Character:FindFirstChild("Head")or Sv.LPlr.Character:FindFirstChild("Torso")).CFrame
				WAIT(0.05)
			end
		end

		local Humanoid = Sv.LPlr.Character:FindFirstChildOfClass("Humanoid")
		LocalisedFunctions.TeleportPlayer(CFrame.new(0,-200,0))
		WAIT(0.25)
		if Humanoid ~= nil then Humanoid.Sit=false end
		LocalisedFunctions.TeleportPlayer(OldPos)
		OldPos=nil
		SpawnPoint.CFrame=OldCF
		SpawnPoint.Size=OldSize
		SpawnPoint.Transparency=0
		OldCF,OldSize=_N,_N
		for i,v in pairs(Sv.LPlr.Character:GetChildren()) do if v:IsA("BasePart") then v.CanTouch=true end end

		if Sv.LPlr.TeamColor.Name ~= OldTeam then
			if OldTeam=="Medium stone grey" then
				TeamEvent:FireServer("Medium stone grey")
			elseif OldTeam=="Really red" then
				LocalisedFunctions.DoCriminal()
			end
		end
	end,
	["crim"]=function(PlayerTbl,Speaker)
		--if 1==1 then return end

		local SpawnPoint = workspace["Criminals Spawn"].SpawnLocation
		local OldPos = Sv.LPlr.Character.HumanoidRootPart.CFrame
		local OldCF = SpawnPoint.CFrame
		local OldSize = SpawnPoint.Size
		SpawnPoint.Size=Vector3.new(20,5,20)
		SpawnPoint.Transparency=1

		local OldTeam=Sv.LPlr.TeamColor.Name
		if OldTeam=="Medium stone grey" then
			TeamEvent:FireServer("Bright orange")
			local A = Sv.LPlr.Character:FindFirstChild("Head")
			repeat  WAIT(0) if not A:IsDescendantOf(workspace) then break end
			until not A:IsDescendantOf(workspace)A=nil WAIT(0.1)
		end
		if PlayerTbl==_N then 
			if Speaker~=_N then
				if Speaker.TeamColor.Name~="Really red" then
					for i,v in pairs(Sv.LPlr.Character:GetChildren()) do if v:IsA("BasePart") then v.CanTouch=false end end
					LocalisedFunctions.BringPlayerFunc({Speaker},SpawnPoint)
					SpawnPoint.CFrame=(Speaker.Character:FindFirstChild("Head")or Speaker.Character:FindFirstChild("Torso")).CFrame
					WAIT(0.05)

					if Sv.LPlr.TeamColor.Name ~= OldTeam then
						if OldTeam=="Medium stone grey" then
							TeamEvent:FireServer("Medium stone grey")
						elseif OldTeam=="Really red" then
							LocalisedFunctions.DoCriminal()

						end
					end
				end
				return 
			end
		end
		for i,SelectedPlayer in pairs(PlayerTbl) do
			if SelectedPlayer.TeamColor.Name~="Really red" then
				for i,v in pairs(Sv.LPlr.Character:GetChildren()) do if v:IsA("BasePart") then v.CanTouch=false end end
				LocalisedFunctions.BringPlayerFunc({SelectedPlayer},SpawnPoint)
				SpawnPoint.CFrame=(SelectedPlayer.Character:FindFirstChild("Head")or SelectedPlayer.Character:FindFirstChild("Torso")).CFrame
				WAIT(0.05)
			end
		end

		WAIT(0.03)
		local Humanoid = Sv.LPlr.Character:FindFirstChildOfClass("Humanoid")
		if Humanoid ~= nil then Humanoid.Sit=false end
		LocalisedFunctions.TeleportPlayer(OldPos)
		OldPos=nil
		SpawnPoint.CFrame=OldCF
		SpawnPoint.Size=OldSize
		SpawnPoint.Transparency=0
		OldCF,OldSize=_N,_N
		for i,v in pairs(Sv.LPlr.Character:GetChildren()) do if v:IsA("BasePart") then v.CanTouch=true end end

		if Sv.LPlr.TeamColor.Name ~= OldTeam then
			if OldTeam=="Medium stone grey" then
				TeamEvent:FireServer("Medium stone grey")
			elseif OldTeam=="Really red" then
				LocalisedFunctions.DoCriminal()
			end
		end

	end,
	["antimelee"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,SelectedPlayer in Sv.P(PlayerTbl)do
			if SelectedPlayer~=_N then
				if SelectedPlayer:FindFirstChild("Amelee")==_N then
					if Speaker==_N then
						notify(SelectedPlayer.Name.." now has antimelee.",_A.R(1,1,0))
					end
					local Amelee=Sv.Ins("BoolValue",SelectedPlayer)
					Amelee.Name="Amelee"Amelee=nil
					Sv.New(function()
						local Char=nil
						local Torso=nil
						local HotPlayer,HotTorso,HotHumanoid=_N,nil,nil
						local PlrsToKill={}

						while true do
							HotTorso=_N
							HotHumanoid=_N
							HotPlayer=_N
							PlrsToKill={}
							if SelectedPlayer:FindFirstChild("Amelee")==_N then break end
							if not SelectedPlayer:IsDescendantOf(Sv.Plrs)then break end
							Char=SelectedPlayer[_A.P]
							if Char~=_N then
								Torso=Char:FindFirstChild("Torso")
								if Torso~=_N then
									for i,v in pairs(workspace:GetPartBoundsInRadius(Torso.Position,8.5)) do
										if not v:IsDescendantOf(Torso.Parent) then
											if not v:IsDescendantOf(Sv.LPlr.Character) then 
												HotTorso = v.Parent:FindFirstChild("Torso")
												if HotTorso ~= nil then
													HotPlayer = Sv.Plrs:FindFirstChild(v.Parent.Name)
													if HotPlayer ~= nil then
														if HotPlayer:FindFirstChild("Amelee")==_N then
															if HotTorso.Parent:FindFirstChildOfClass("ForceField")==_N then
																HotHumanoid = v.Parent:FindFirstChildOfClass("Humanoid")
																if HotHumanoid ~= nil then
																	for i,v in pairs(HotHumanoid:GetPlayingAnimationTracks()) do
																		if v.Animation ~= nil then 
																			if v.Animation.AnimationId == "rbxassetid://275012308" or v.Animation.AnimationId == "rbxassetid://484200742" or v.Animation.AnimationId == "rbxassetid://484926359" then
																				if HotHumanoid:GetAttribute("ADB")==_N then
																					if HotHumanoid.Health >0 then
																						Sv.New(function()local TempHotHumanoid=HotHumanoid TempHotHumanoid:SetAttribute("ADB",0)wait(3)TempHotHumanoid:SetAttribute("ADB",nil)TempHotHumanoid=_N end)
																						_A.O(PlrsToKill,HotPlayer)
																					end
																				end
																			end
																		end
																	end
																end
															end
														end
													end
												end
											end
										end
									end
								end
							end

							if #PlrsToKill >0 then
								LocalisedFunctions.kill(PlrsToKill)
								WAIT(0.3)
							end
							WAIT(0.15)
						end
					end)
				end
			end
		end
	end,
	["noantimelee"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		local Found=nil
		for i,SelectedPlayer in Sv.P(PlayerTbl)do
			Found=SelectedPlayer:FindFirstChild("Amelee") 
			if Found~=_N then
				if Speaker==_N then
					notify(SelectedPlayer.Name.." nolonger has antimelee.",_A.R(1,0,0))
				end
				Found:Destroy()
			end
		end
		Found=_N
	end,
	["supermelee"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,SelectedPlayer in Sv.P(PlayerTbl)do
			if SelectedPlayer~=_N then
				if SelectedPlayer:FindFirstChild("Smelee")==_N then
					if Speaker==_N then
						notify(SelectedPlayer.Name.." now has supermelee.",_A.R(1,1,0))
					end
					local Smelee=Sv.Ins("BoolValue",SelectedPlayer)
					Smelee.Name="Smelee"


					Sv.New(function()
						local Char=nil
						local Torso=nil
						local Head=nil
						local punchSound=nil
						local Humanoid=nil
						local IsPunching=false
						local HotPlayer,HotChar,HotTorso,HotHumanoid=_N,nil,nil,nil
						local PlrsToKill={}

						while true do
							IsPunching=false
							HotChar=_N
							HotTorso=_N
							HotHumanoid=_N
							PlrsToKill={}
							if SelectedPlayer:FindFirstChild("Smelee")==_N then break end
							if not SelectedPlayer:IsDescendantOf(Sv.Plrs)then break end
							Char=SelectedPlayer[_A.P]
							if Char~=_N then
								Head=Char:FindFirstChild("Head")
								Torso=Char:FindFirstChild("Torso")
								Humanoid=Char:FindFirstChildOfClass("Humanoid")
								if Head ~= _N then
									punchSound=Head:FindFirstChild("punchSound")
									if punchSound ~= _N then

										if Torso~=_N then
											if Humanoid~=_N then
												for i,v in pairs(Humanoid:GetPlayingAnimationTracks()) do
													if v.Animation ~= nil then 
														if v.Animation.AnimationId == "rbxassetid://275012308" or v.Animation.AnimationId == "rbxassetid://484200742" or v.Animation.AnimationId == "rbxassetid://484926359" then
															IsPunching=true break
														end
													end
												end
												if IsPunching==true then
													for i,v in pairs(workspace:GetPartBoundsInRadius(Torso.Position,8.5)) do
														if not v:IsDescendantOf(Torso.Parent) then
															if not v:IsDescendantOf(Sv.LPlr.Character) then 
																HotTorso = v.Parent:FindFirstChild("Torso")
																if HotTorso ~= nil then
																	HotPlayer = Sv.Plrs:FindFirstChild(v.Parent.Name)
																	if HotPlayer ~= nil then
																		if HotPlayer:FindFirstChild("Smelee")==_N then
																			if HotTorso.Parent:FindFirstChildOfClass("ForceField")==_N then
																				HotHumanoid = v.Parent:FindFirstChildOfClass("Humanoid")
																				if HotHumanoid ~= nil then
																					if HotHumanoid.Health >0 then
																						Sv.New(function()local TempHotHumanoid=HotHumanoid TempHotHumanoid:SetAttribute("ADB",0)wait(3)TempHotHumanoid:SetAttribute("ADB",nil)TempHotHumanoid=_N end)
																						_A.O(PlrsToKill,HotPlayer)
																						if Char:FindFirstChild("Hammer") ~= nil or Char:FindFirstChild("Crude Knife") ~= nil then
																						else for i=0,5 do SoundEvent:FireServer(punchSound) end
																						end
																					end
																				end
																			end
																		end
																	end
																end
															end
														end
													end
												end
											end
										end
									end
								end
							end
							if #PlrsToKill >0 then
								LocalisedFunctions.kill(PlrsToKill)
								WAIT(0.3)
							end
							WAIT(0.15)
						end
					end)



				end
			end
		end
	end,
	["nosupermelee"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		local Found=nil
		for i,SelectedPlayer in Sv.P(PlayerTbl)do
			Found=SelectedPlayer:FindFirstChild("Smelee") 
			if Found~=_N then
				if Speaker==_N then
					notify(SelectedPlayer.Name.." nolonger has supermelee.",_A.R(1,0,0))
				end
				Found:Destroy()
			end
		end
		Found=_N
	end,
	["infect"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		for i,SelectedPlayer in Sv.P(PlayerTbl)do
			if SelectedPlayer~=_N then
				if SelectedPlayer:FindFirstChild("Aura")==_N then
					if Speaker==_N then
						notify(SelectedPlayer.Name.." now has aura.",_A.R(1,1,0))
					end
					local AuraOn=Sv.Ins("BoolValue",SelectedPlayer)
					AuraOn.Name="Aura"
					Sv.New(function()
						local Char=nil
						local Torso=nil
						local HotChar,HotTorso,HotHumanoid=_N,nil,nil
						local PlrsToKill={}
						while true do
							HotChar=_N
							HotTorso=_N
							HotHumanoid=_N
							PlrsToKill={}
							if SelectedPlayer:FindFirstChild("Aura")==_N then break end
							if not SelectedPlayer:IsDescendantOf(Sv.Plrs)then break end
							Char=SelectedPlayer[_A.P]
							if Char~=_N then
								Torso=Char:FindFirstChild("Torso")
								if Torso~=_N then
									for i,v in Sv.P(Sv.Plrs:GetPlayers())do
										if v.Name~=Sv.LPlr.Name then
											if v.Name~=SelectedPlayer.Name then
												if v.Team.Name~=Sv.LPlr.Team.Name then
													if v:FindFirstChild("Aura")==_N then
														HotChar=v[_A.P]
														if HotChar~=_N then
															if HotChar:FindFirstChildOfClass("ForceField")==_N then
																HotTorso=HotChar:FindFirstChild("Torso")
																HotHumanoid=HotChar:FindFirstChildOfClass("Humanoid")
																if HotTorso~=_N then
																	if (HotTorso.Position - Torso.Position).Magnitude <=ScriptSettings.InfectAuraSize then
																		if HotHumanoid~=_N then
																			if HotHumanoid:GetAttribute("ADB")==_N then
																				if HotHumanoid.Health >0 then
																					Sv.New(function()local TempHotHumanoid=HotHumanoid TempHotHumanoid:SetAttribute("ADB",0)wait(3)TempHotHumanoid:SetAttribute("ADB",nil)TempHotHumanoid=_N end)
																					_A.O(PlrsToKill,v)
																				end
																			end
																		end
																	end
																end
															end
														end
													end
												end
											end
										end
									end
								end
							end
							if #PlrsToKill >0 then
								LocalisedFunctions.kill(PlrsToKill)
								WAIT(0.3)
							end
							WAIT(0.15)
						end
					end)
				end
			end
		end

	end,
	["inv"] = function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		local ItemsToDisplay = ""
		local Player = PlayerTbl[1]
		if Player ~= nil then
			local Backpack,Char = Player:FindFirstChildWhichIsA("Backpack"),Player.Character
			if Backpack ~= nil then
				local Items = Backpack:GetChildren()
				for i,tool in pairs(Items) do
					if tool.ClassName=="Tool" then
						local firstName = string.split(tool.Name," ")[1]
						if i >= #Items then
							ItemsToDisplay=ItemsToDisplay..firstName
						else
							ItemsToDisplay=ItemsToDisplay..firstName.." | "
						end
						firstName=_N
					end
				end
				Items=_N

			end
			if Char ~= nil then
				local Items = Char:GetChildren()
				for i,tool in pairs(Items) do
					if tool.ClassName=="Tool" then
						local firstName = string.split(tool.Name," ")[1]
						if i >= #Items then
							ItemsToDisplay=ItemsToDisplay..firstName
						else
							ItemsToDisplay=ItemsToDisplay..firstName.." | "
						end
						firstName=_N
					end
				end
				Items=_N

			end
			if #ItemsToDisplay >0 then
				if Speaker==_N then
					notify(Player.Name.."'s inv: "..ItemsToDisplay,Color3.new(1,1,0))
				else 
					svc("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..Speaker.Name..` inventory: `..ItemsToDisplay, "All")
				end
			end
			ItemsToDisplay=_N
		end
	end,
	["dist"] = function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		local ItemsToDisplay = ""
		local Player = PlayerTbl[1]
		if Player ~= Speaker then
			if Player ~= nil then
				local Char = Player.Character
				local DIST				
				if Char ~= nil then
					DIST = math.round((Speaker.Character.HumanoidRootPart.Position-Char.HumanoidRootPart.Position).Magnitude)					
				end
				if DIST ~= nil then
					if Speaker==_N then
						notify(Player.Name.."'s DISTANCE: "..tostring(DIST).."studs away and on the "..tostring(Player.Team.Name).." Team.",Color3.new(1,1,0))
					else 
						svc("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..Speaker.Name..` They are {tostring(DIST)}studs away and on the {Player.Team.Name} Team.`, "All")
					end
				end
				DIST=nil
			end
		end
	end,
	["resetprefix"] = function(P,Speaker)
		PreferredAdminsPrefix[Speaker.UserId]=Defaultprefix

	end,
	["cure"]=function(PlayerTbl,Speaker)
		if PlayerTbl==_N then return end
		local Found=nil
		for i,SelectedPlayer in Sv.P(PlayerTbl)do
			Found=SelectedPlayer:FindFirstChild("Aura") 
			if Found~=_N then
				if Speaker==_N then
					notify(SelectedPlayer.Name.." nolonger has aura.",_A.R(1,0,0))
				end
				Found:Destroy()
			end
		end
		Found=_N
	end,
	["help"]=function(PlayerTbl,Speaker)
		local message = [[Usage by typing ;k plr/guards/crims/inmates/swats/team/admins/nonadmins/hostiles/nonhostiles/bacons/nonbacons/nearest/furthest (which kills em) | Type !prefix for prefix or !resetprefix]]
		if Speaker==_N then
			notify(message,_A.R(0,1,0))
		else
			svc("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..Speaker.Name.." "..message, "All")
		end
	end,
	["cmds"]=function(PlayerTbl,Speaker)
		local CommandsTb={}
		local FullStr = ""
		local CommandsStr = ""
		local index = 1
		for i,v in Sv.P(AdminCommands)do
			FullStr=FullStr..tostring(i).." | "
			CommandsStr=CommandsStr..tostring(i).." | "
			if #CommandsStr >= 150 then
				CommandsTb[index]=CommandsStr
				CommandsStr=""
				index+=1
			end
		end
		if CommandsTb[index] == nil then CommandsTb[index]=CommandsStr end

		index=nil
		CommandsStr=nil
		if Speaker==_N then
			notify("List of commands: "..tostring(FullStr),_A.R(0,1,0))

		else
			for i=1,#CommandsTb do
				svc("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..Speaker.Name.." "..`Commands[{tostring(i)}]: `..CommandsTb[i], "All")
				WAIT(0.07)
			end
		end
		if Speaker == nil then
			FullStr = ""
			for i,v in Sv.P(LocalAdminCommands)do
				FullStr=FullStr..tostring(i).." | "
			end

			notify("Only you can do these commands listed: "..tostring(FullStr).."\nIf you need to change the prefix type !prefix to reveal your prefix or !resetprefix",_A.R(1,0,1))

		end
		FullStr=nil
		CommandsTb=_N
	end,
}

local DamageList = {}
local AntiShootList = {}

LocalisedFunctions.GetPlayerFromPosition = function(override,Position,VictimPlr)
	local ClosestPlr,Dist=nil,math.huge
	for i,v in pairs(Sv.Plrs:GetPlayers()) do
		local Char = v.Character
		if Char ~= nil then
			local Torso=Char:FindFirstChild("Torso")
			local Humanoid = Char:FindFirstChildOfClass("Humanoid")
			if Humanoid ~= nil then
				if Humanoid.Health>0 then
					if Torso ~= nil then
						if (Torso.Position-Position).Magnitude < Dist then
							if override then
								if table.find(AddedWhitelists,v) then
									ClosestPlr=v Dist=(Torso.Position-Position).Magnitude
								end
							else
								ClosestPlr=v Dist=(Torso.Position-Position).Magnitude
							end
						end
					end
				end
			end
			Humanoid=nil
			Torso=nil
		end
		Char=nil
	end
	if (override ==true) and Dist > 15 then
		ClosestPlr=nil
	end
	Dist=nil
	return ClosestPlr
end

if game:GetService("ReplicatedStorage"):FindFirstChild("ReplicateEvent") then
else
	if game.PlaceId ==155615604 then
		repeat  WAIT(0.2)
			if game:GetService("ReplicatedStorage"):FindFirstChild("ReplicateEvent") ~= nil then break end
		until 0>1
	end
end

LocalisedFunctions.FriendlyFireEnabled = function()
	local Number = tonumber(ScriptSettings.FriendlyFire)
	if Number ~= nil then
		if Number <=0 then return false end
		if Number=="nan" then return false end
	end
	Number=nil
	if ScriptSettings.FriendlyFire==false then return false end
	if ScriptSettings.FriendlyFire=="no"or ScriptSettings.FriendlyFire=="n" then return false end

	return true
end

LocalisedFunctions.DoXplosiveThingy = function(tbl,AttackerPlr,VictimPlr,IsDeathOne)
	local Gun = AttackerPlr.Character:FindFirstChildOfClass("Tool")
	if (IsDeathOne) or Gun ~= nil then
		if (IsDeathOne) or Gun:FindFirstChildOfClass("ModuleScript") then
			if AttackerPlr.Name ~= Sv.LPlr.Name then
				local Params=RaycastParams.new()
				Params.FilterDescendantsInstances={AttackerPlr.Character} 
				Params.FilterType=Enum.RaycastFilterType.Exclude
				local RayCasted = workspace:Raycast(tbl.RayObject.Origin,tbl.RayObject.Direction*Vector3.new(2,2,2),Params)

				if VictimPlr ~= nil then
					if VictimPlr.ClassName=="Player"then
						if VictimPlr.Character:FindFirstChildOfClass("ForceField")==_N then
							if table.find(AntiShootList,VictimPlr.UserId)==_N then
								if not LocalisedFunctions.UserHasSuperGunEnabled(VictimPlr) then
									if VictimPlr.TeamColor.Name==AttackerPlr.TeamColor.Name then
										if LocalisedFunctions.FriendlyFireEnabled() then
											table.insert(AntiShootList,VictimPlr.UserId)
										end
									else
										table.insert(AntiShootList,VictimPlr.UserId)
									end
								end
							end
						end
					end
				end
				if RayCasted ~= nil then
					if RayCasted.Instance ~= nil then
						local FireSound = Gun.Handle:FindFirstChild("FireSound")
						local RANGE = 0
						if IsDeathOne then 
							RANGE=ScriptSettings.DeathExplosionSize
						else 
							RANGE=ScriptSettings.ExplosionSize
						end
						for i,v in pairs(workspace:GetPartBoundsInRadius(RayCasted.Position,RANGE)) do
							local Humanoid = v.Parent:FindFirstChildOfClass("Humanoid")
							if Humanoid ~= nil then
								if not IsDeathOne then
									if FireSound ~= nil then 
										task.spawn(function()
											local ClonedVar=FireSound
											for i=0,5 do SoundEvent:FireServer(ClonedVar) WAIT(0.2) end
											ClonedVar=_N
										end)
									end
								end
								if Humanoid.Health>0 then
									if Humanoid.Parent:FindFirstChildOfClass("ForceField")==_N then
										local HitPlayer = Sv.Plrs:GetPlayerFromCharacter(Humanoid.Parent)
										if HitPlayer ~= nil then
											if HitPlayer == AttackerPlr or HitPlayer == Sv.LPlr then else
												if HitPlayer.TeamColor.Name ~= Sv.LPlr.TeamColor.Name then
													local Detected=false
													if table.find(AddedWhitelists,HitPlayer.UserId) ~= nil then 
														if UserIsOperator(AttackerPlr) then 
															Detected=true		
														else 
															Detected=true
														end 
													end
													if not Detected then
														if table.find(AntiShootList,HitPlayer.UserId)==nil then

															if not (LocalisedFunctions.UserHasExplosiveGunEnabled(HitPlayer) or LocalisedFunctions.UserHasSuperGunEnabled(HitPlayer)) then
																if AttackerPlr.TeamColor.Name==HitPlayer.TeamColor.Name then
																	if LocalisedFunctions.FriendlyFireEnabled() then
																		table.insert(AntiShootList,HitPlayer.UserId)
																	end else
																	table.insert(AntiShootList,HitPlayer.UserId)
																end


															end													
														end 
													end
													Detected=nil
												end
											end	
										end
									end
								end
							end Humanoid=nil
						end

						RANGE=nil

						FireSound=nil
					end
				end

				RayCasted=nil														
				Params=nil

			end
		end
	end
end

if game:GetService("ReplicatedStorage"):FindFirstChild("ReplicateEvent") then
	print("Replicate hooked!")
	game:GetService("ReplicatedStorage").ReplicateEvent.OnClientEvent:Connect(function(tbl)
		if typeof(tbl)=="table" then
			for i=1,math.min(30,#tbl) do
				if tbl[i] ~= nil then
					if tbl[i].RayObject~= nil then
						if typeof(tbl[i].RayObject)=="Ray" then
							if tbl[i].Hit~= nil then
								local VictimPlr = Sv.Plrs:GetPlayerFromCharacter(tbl[i].Hit.Parent)
								if VictimPlr ==nil then 
									if tbl[i].Hit.Parent ~= nil then
										VictimPlr=Sv.Plrs:GetPlayerFromCharacter(tbl[i].Hit.Parent.Parent)
									end
								end
								local AdminPlr =  LocalisedFunctions.GetPlayerFromPosition(true,tbl[i].RayObject.Origin,VictimPlr)
								local AttackerPlr = LocalisedFunctions.GetPlayerFromPosition(false,tbl[i].RayObject.Origin,VictimPlr)
								if VictimPlr ~= nil then
									if AttackerPlr == nil then AttackerPlr = AdminPlr end AdminPlr=nil
									if AttackerPlr ~= nil then
										if VictimPlr.Name==Sv.LPlr.Name and States.AntiShoot==true then
											if Sv.LPlr.TeamColor.Name ~= AttackerPlr.TeamColor.Name then
												if AttackerPlr.Character~=nil then
													if AttackerPlr.Character.Humanoid.Health>0 then
														if AttackerPlr.Character:FindFirstChildOfClass("ForceField")==_N then
															if table.find(AntiShootList,AttackerPlr.UserId)==_N then
																table.insert(AntiShootList,AttackerPlr.UserId)
															end
														end
													end
												end
												return
											end
										end
										if LocalisedFunctions.UserHasAntiShootEnabled(VictimPlr) then
											if AttackerPlr.Name ~= Sv.LPlr.Name then 
												if Sv.LPlr.TeamColor.Name ~= AttackerPlr.TeamColor.Name then
													if AttackerPlr.Character~=nil then
														if AttackerPlr.Character.Humanoid.Health>0 then
															if AttackerPlr.Character:FindFirstChildOfClass("ForceField")==_N then
																if table.find(AntiShootList,AttackerPlr.UserId)==_N then
																	table.insert(AntiShootList,AttackerPlr.UserId)
																end
															end
														end
													end
												end
											end
										end
										if LocalisedFunctions.UserHasSuperGunEnabled(AttackerPlr) then
											local Gun = AttackerPlr.Character:FindFirstChildOfClass("Tool")
											if Gun ~= nil then
												if Gun:FindFirstChildOfClass("ModuleScript") then
													if AttackerPlr.Name ~= Sv.LPlr.Name then 
														local Detected=false
														if table.find(AddedWhitelists,VictimPlr.UserId) ~= nil then 
															if UserIsOperator(AttackerPlr) then 
																Detected=true		
															else 
																Detected=true
															end 
														end
														if not Detected then
															if Sv.LPlr.TeamColor.Name ~= AttackerPlr.TeamColor.Name then
																if VictimPlr.Character.Humanoid.Health>0 then
																	if VictimPlr.Character:FindFirstChildOfClass("ForceField")==_N then
																		if table.find(AntiShootList,VictimPlr.UserId)==_N then
																			if not LocalisedFunctions.UserHasSuperGunEnabled(VictimPlr) then
																				if AttackerPlr.TeamColor.Name==VictimPlr.TeamColor.Name then
																					if LocalisedFunctions.FriendlyFireEnabled() then
																						table.insert(AntiShootList,VictimPlr.UserId)
																					end
																				else
																					table.insert(AntiShootList,VictimPlr.UserId)
																				end
																			end
																		end
																	end
																end
															end 
														end
														Detected=nil
													end
												end
												Gun=nil
											end
										elseif LocalisedFunctions.UserHasDamageGunEnabled(AttackerPlr) then
											local Gun = AttackerPlr.Character:FindFirstChildOfClass("Tool")
											if Gun ~= nil then
												if Gun:FindFirstChildOfClass("ModuleScript") then
													if AttackerPlr.Name ~= Sv.LPlr.Name then 
														local Detected=false
														if table.find(AddedWhitelists,VictimPlr.UserId) ~= nil then 
															if UserIsOperator(AttackerPlr) then 
																Detected=true		
															else 
																Detected=true
															end 
														end
														if not Detected then
															if Sv.LPlr.TeamColor.Name ~= AttackerPlr.TeamColor.Name then
																if VictimPlr.Character.Humanoid.Health>0 then
																	if VictimPlr.Character:FindFirstChildOfClass("ForceField")==_N then
																		if table.find(DamageList,VictimPlr.UserId)==_N then
																			if not LocalisedFunctions.UserHasDamageGunEnabled(VictimPlr) then
																				table.insert(DamageList,VictimPlr.UserId)
																			end
																		end
																	end
																end
															end 
														end
														Detected=nil
													end
												end
												Gun=nil
											end
										end

										if LocalisedFunctions.UserHasExplosiveGunEnabled(AttackerPlr) then
											LocalisedFunctions.DoXplosiveThingy(tbl[i],AttackerPlr,VictimPlr)
										end
										if LocalisedFunctions.UserHasLoudGunEnabled(AttackerPlr) then
											local Gun = AttackerPlr.Character:FindFirstChildOfClass("Tool")
											if Gun ~= nil then
												if Gun:FindFirstChildOfClass("ModuleScript") then
													local FireSound = Gun.Handle:FindFirstChild("FireSound")
													if FireSound ~= nil then for i=0,6 do SoundEvent:FireServer(FireSound) end
														FireSound=nil
													end
												end
												Gun=nil
											end

										end
									end
								else -- If the bullet hit something other than a bodypart..
									if AttackerPlr == nil then AttackerPlr = AdminPlr end AdminPlr=nil
									if AttackerPlr ~= nil then

										if LocalisedFunctions.UserHasExplosiveGunEnabled(AttackerPlr) then
											LocalisedFunctions.DoXplosiveThingy(tbl[i],AttackerPlr,VictimPlr)
										end





									end
								end
								AttackerPlr=nil
								VictimPlr=nil
							end
						end
					end
				else break --Optimise...
				end

			end
			tbl=nil
		end
	end)
end

LocalisedFunctions.RayCast = function(Origin,Direction,Params)
	local RayCast = workspace:Raycast(Origin,Direction,Params)
	if RayCast ~= nil then
		if RayCast.Instance ~= nil then
			if RayCast.Instance.Name=="Handle"then
				if RayCast.Instance.Parent.ClassName=="Accessory"or RayCast.Instance.Parent.ClassName=="Hat"then
					for i,v in pairs(RayCast.Instance:GetJoints())do
						if v.Part1~=nil then
							return v.Part1
						end
						i,v=nil,nil
					end
				end
			end
			return RayCast.Instance
		end
		RayCast=nil
	end
end
LocalisedFunctions.IsColour = function(Colour,Name,BrickColorCheck)
	if Colour == nil then return false end
	if BrickColorCheck then	
		if Name=="!Dark" then
			local CC = Colour.BrickColor.Name:lower()
			if CC:match("dark")or CC:match("black")or CC =="deep blue"or CC =="navy blue"or CC:match("burnt") then
				CC=nil
				return true
			end	CC=nil
			local Lightness =Colour.Color.R*255
			Lightness+=Colour.Color.G*255
			Lightness+=Colour.Color.B*255
			if Lightness <=295 then
				Lightness=nil
				return true
			else
				--warn(tostring(Lightness).." / 295",Colour.BrickColor.Name,Colour:GetFullName())

			end

			Lightness=nil
		elseif Name=="!Light" then
			local CC = Colour.BrickColor.Name:lower()
			if CC:match("light")or CC:match("bright") then
				CC=nil
				return true
			end	CC=nil
			local Lightness =Colour.Color.R*255
			Lightness+=Colour.Color.G*255
			Lightness+=Colour.Color.B*255
			if Lightness >=295 then
				Lightness=nil
				return true
			else
				--warn(tostring(Lightness).." / 295",Colour.BrickColor.Name,Colour:GetFullName())

			end		
		end
		return false
	end
	if Name == "Grass" then
		local MaterialENUMCODE = Colour:GetAttribute("MT")
		if MaterialENUMCODE ~= nil then
			if Enum.Material.Grass.Value==MaterialENUMCODE then
				MaterialENUMCODE=nil
				return true
			end
		end
		if (Colour.Color.R*255 >= 75 and Colour.Color.R*255 <= 80) then 
			if Colour.Color.G*255 >= 150 then
				if (Colour.Color.B*255 >= 75 and Colour.Color.R*255 <= 80) then
					return true
				end
			end
		end
	elseif Name == "Concrete" then
		local MaterialENUMCODE = Colour:GetAttribute("MT")
		if MaterialENUMCODE ~= nil then
			if Enum.Material.Concrete.Value==MaterialENUMCODE then
				MaterialENUMCODE=nil
				return true
			end
		end
		if (Colour.Color.R*255 >= 160 and Colour.Color.R*255 <= 170) then 
			if (Colour.Color.R*255 >= 160 and Colour.Color.R*255 <= 170) then
				if (Colour.Color.B*255 >= 160 and Colour.Color.R*255 <= 170) then
					return true
				end
			end
		end
	elseif Name == "Plastic" then
		if Colour.ClassName=="SpawnLocation" then return false end
		local MaterialENUMCODE = Colour:GetAttribute("MT")
		if MaterialENUMCODE ~= nil then
			if Enum.Material.Plastic.Value==MaterialENUMCODE then
				MaterialENUMCODE=nil
				return true
			elseif Enum.Material.SmoothPlastic.Value==MaterialENUMCODE then
				MaterialENUMCODE=nil 
				return true
			end
		end
		if (Colour.Color.R*255 >= 160 and Colour.Color.R*255 <= 170) then 
			if (Colour.Color.R*255 >= 160 and Colour.Color.R*255 <= 170) then
				if (Colour.Color.B*255 >= 160 and Colour.Color.R*255 <= 170) then
					return true
				end
			end
		end
	elseif Name == "Metal" then
		local MaterialENUMCODE = Colour:GetAttribute("MT")
		if MaterialENUMCODE ~= nil then
			if Enum.Material.DiamondPlate.Value==MaterialENUMCODE then
				MaterialENUMCODE=nil
				return true 
				--elseif Enum.Material.Metal.Value==MaterialENUMCODE then
				--MaterialENUMCODE=nil
				--return true
			end
		end
	end
	return false
end

LocalisedFunctions.DoFloorThingy = function(HotHumanoidVar,FloorMaterial,Material,ColourCode,bool)
	if ((Material ~= nil) and FloorMaterial.Material==Material) or LocalisedFunctions.IsColour(FloorMaterial,"Grass") then
		if HotHumanoidVar~=_N then
			if HotHumanoidVar.Health >0 then
				return true
			end
		end
	end
	return false
end

Sv.New(function()
	local HotCharVar=nil
	local HotHeadVar=nil
	local HotHumanoidVar=nil
	local KillTBL={}
	local ForceKillTBL={}
	local DamageTBL={}
	local plr=nil
	while true do WAIT(0.1)
		KillTBL={}DamageTBL={}ForceKillTBL={}
		if #DamageList >0 then
			for i,userid in Sv.P(DamageList)do
				plr=Sv.Plrs:GetPlayerByUserId(userid)
				if plr~=_N then
					if plr:IsDescendantOf(Sv.Plrs)then
						if table.find(DamageTBL,plr)~=_N then continue end
						if plr.Team.Name~=Sv.LPlr.Team.Name then
							HotCharVar=plr[_A.P]
							if HotCharVar~=_N then
								if HotCharVar:FindFirstChildOfClass("ForceField")==_N then
									HotHeadVar=HotCharVar:FindFirstChild("Head")
									if HotHeadVar~=_N then
										HotHumanoidVar=HotCharVar:FindFirstChildOfClass("Humanoid")
										if HotHumanoidVar~=_N then
											if HotHumanoidVar.Health >0 then
												if HotHumanoidVar:GetAttribute("LKD")==_N then
													_A.O(DamageTBL,plr)
													Sv.New(function() local TempHumanoidVar =HotHumanoidVar TempHumanoidVar:SetAttribute("LKD",0)wait(3)TempHumanoidVar:SetAttribute("LKD",nil)TempHumanoidVar=_N end)
												end
											end
										end
									end
								end
							end
						end
					end
				end
				DamageList[i]=nil
			end
		end
		if #AntiShootList >0 then
			for i,userid in Sv.P(AntiShootList)do
				plr=Sv.Plrs:GetPlayerByUserId(userid)
				if plr~=_N then
					if plr:IsDescendantOf(Sv.Plrs)then
						if table.find(KillTBL,plr)~=_N then continue end
						if plr.Team.Name~=Sv.LPlr.Team.Name then
							HotCharVar=plr[_A.P]
							if HotCharVar~=_N then
								if HotCharVar:FindFirstChildOfClass("ForceField")==_N then
									HotHeadVar=HotCharVar:FindFirstChild("Head")
									if HotHeadVar~=_N then
										HotHumanoidVar=HotCharVar:FindFirstChildOfClass("Humanoid")
										if HotHumanoidVar~=_N then
											if HotHumanoidVar.Health >0 then
												if HotHumanoidVar:GetAttribute("LKD")==_N then
													_A.O(KillTBL,plr)
													Sv.New(function() local TempHumanoidVar =HotHumanoidVar TempHumanoidVar:SetAttribute("LKD",0)wait(3)TempHumanoidVar:SetAttribute("LKD",nil)TempHumanoidVar=_N end)
												end
											end
										end
									end
								end
							end
						end
					end
				end
				AntiShootList[i]=nil
			end
		end
		if #BanTBLS.Stored_GrassBanTBL >0 then
			for i,userid in Sv.P(BanTBLS.Stored_GrassBanTBL)do
				plr=Sv.Plrs:GetPlayerByUserId(userid)
				if plr~=_N then
					if plr:IsDescendantOf(Sv.Plrs)then
						if table.find(ForceKillTBL,plr)~=_N then continue end
						if plr.Team.Name~=Sv.LPlr.Team.Name then
							HotCharVar=plr[_A.P]
							if HotCharVar~=_N then
								if HotCharVar:FindFirstChildOfClass("ForceField")==_N then
									HotHeadVar=HotCharVar:FindFirstChild("Head")
									if HotHeadVar~=_N then
										if HotHumanoidVar~=_N then
											if HotHumanoidVar.Health >0 then
												if HotHumanoidVar:GetAttribute("LKD")==_N then
													local Params = RaycastParams.new()
													Params.FilterType=Enum.RaycastFilterType.Exclude 
													Params.FilterDescendantsInstances={HotCharVar}

													local LEFTLEG,RIGHTLEG=HotCharVar:FindFirstChild("Left Leg"),HotCharVar:FindFirstChild("Right Leg")
													local VERIFY=false
													local PreArgs={Enum.Material.Grass, "Grass", false}

													local FloorMaterial = LocalisedFunctions.RayCast(HotHeadVar.Position,Vector3.new(0,-7,0),Params)Params=nil
													if FloorMaterial ~= nil then
														VERIFY =LocalisedFunctions.DoFloorThingy(FloorMaterial,PreArgs[1],PreArgs[2],PreArgs[3])
														if VERIFY then
															_A.O(ForceKillTBL,plr)
															Sv.New(function() local TempHumanoidVar =HotHumanoidVar TempHumanoidVar:SetAttribute("LKD",0)wait(3)TempHumanoidVar:SetAttribute("LKD",nil)TempHumanoidVar=_N end)
														end
													end  
													if not VERIFY then
														if LEFTLEG~=nil then
															FloorMaterial = LocalisedFunctions.RayCast(LEFTLEG.Position,Vector3.new(0,-7,0),Params)Params=nil
															if FloorMaterial ~= nil then
																VERIFY =LocalisedFunctions.DoFloorThingy(FloorMaterial,PreArgs[1],PreArgs[2],PreArgs[3])
																if VERIFY then
																	_A.O(ForceKillTBL,plr)
																	Sv.New(function() local TempHumanoidVar =HotHumanoidVar TempHumanoidVar:SetAttribute("LKD",0)wait(3)TempHumanoidVar:SetAttribute("LKD",nil)TempHumanoidVar=_N end)
																end
															end  
														end
														if not VERIFY then
															if RIGHTLEG~=nil then
																FloorMaterial = LocalisedFunctions.RayCast(RIGHTLEG.Position,Vector3.new(0,-7,0),Params)Params=nil
																if FloorMaterial ~= nil then
																	VERIFY =LocalisedFunctions.DoFloorThingy(FloorMaterial,PreArgs[1],PreArgs[2],PreArgs[3])
																	if VERIFY then
																		_A.O(ForceKillTBL,plr)
																		Sv.New(function() local TempHumanoidVar =HotHumanoidVar TempHumanoidVar:SetAttribute("LKD",0)wait(3)TempHumanoidVar:SetAttribute("LKD",nil)TempHumanoidVar=_N end)
																	end
																end  
															end 
														end
													end
													PreArgs=nil VERIFY=nil FloorMaterial=nil RIGHTLEG,LEFTLEG=nil,nil
												end
											end
										end

									end
								end
							end
						end
					end
				end
			end
		end
		if #BanTBLS.Stored_ConcreteBanTBL >0 then
			for i,userid in Sv.P(BanTBLS.Stored_ConcreteBanTBL)do
				plr=Sv.Plrs:GetPlayerByUserId(userid)
				if plr~=_N then
					if plr:IsDescendantOf(Sv.Plrs)then
						if table.find(ForceKillTBL,plr)~=_N then continue end
						if plr.Team.Name~=Sv.LPlr.Team.Name then
							HotCharVar=plr[_A.P]
							if HotCharVar~=_N then
								if HotCharVar:FindFirstChildOfClass("ForceField")==_N then
									HotHeadVar=HotCharVar:FindFirstChild("Head")
									if HotHeadVar~=_N then
										HotHumanoidVar=HotCharVar:FindFirstChildOfClass("Humanoid")
										if HotHumanoidVar~=_N then
											if HotHumanoidVar.Health >0 then
												if HotHumanoidVar:GetAttribute("LKD")==_N then
													local Params = RaycastParams.new()
													Params.FilterType=Enum.RaycastFilterType.Exclude 
													Params.FilterDescendantsInstances={HotCharVar}

													local LEFTLEG,RIGHTLEG=HotCharVar:FindFirstChild("Left Leg"),HotCharVar:FindFirstChild("Right Leg")
													local VERIFY=false
													local PreArgs={Enum.Material.Concrete, "Concrete", false}

													local FloorMaterial = LocalisedFunctions.RayCast(HotHeadVar.Position,Vector3.new(0,-7,0),Params)Params=nil
													if FloorMaterial ~= nil then
														VERIFY =LocalisedFunctions.DoFloorThingy(FloorMaterial,PreArgs[1],PreArgs[2],PreArgs[3])
														if VERIFY then
															_A.O(ForceKillTBL,plr)
															Sv.New(function() local TempHumanoidVar =HotHumanoidVar TempHumanoidVar:SetAttribute("LKD",0)wait(3)TempHumanoidVar:SetAttribute("LKD",nil)TempHumanoidVar=_N end)
														end
													end  
													if not VERIFY then
														if LEFTLEG~=nil then
															FloorMaterial = LocalisedFunctions.RayCast(LEFTLEG.Position,Vector3.new(0,-7,0),Params)Params=nil
															if FloorMaterial ~= nil then
																VERIFY =LocalisedFunctions.DoFloorThingy(FloorMaterial,PreArgs[1],PreArgs[2],PreArgs[3])
																if VERIFY then
																	_A.O(ForceKillTBL,plr)
																	Sv.New(function() local TempHumanoidVar =HotHumanoidVar TempHumanoidVar:SetAttribute("LKD",0)wait(3)TempHumanoidVar:SetAttribute("LKD",nil)TempHumanoidVar=_N end)
																end
															end  
														end
														if not VERIFY then
															if RIGHTLEG~=nil then
																FloorMaterial = LocalisedFunctions.RayCast(RIGHTLEG.Position,Vector3.new(0,-7,0),Params)Params=nil
																if FloorMaterial ~= nil then
																	VERIFY =LocalisedFunctions.DoFloorThingy(FloorMaterial,PreArgs[1],PreArgs[2],PreArgs[3])
																	if VERIFY then
																		_A.O(ForceKillTBL,plr)
																		Sv.New(function() local TempHumanoidVar =HotHumanoidVar TempHumanoidVar:SetAttribute("LKD",0)wait(3)TempHumanoidVar:SetAttribute("LKD",nil)TempHumanoidVar=_N end)
																	end
																end  
															end 
														end
													end
													PreArgs=nil VERIFY=nil FloorMaterial=nil RIGHTLEG,LEFTLEG=nil,nil	
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
		if #BanTBLS.Stored_MetalBanTBL >0 then
			for i,userid in Sv.P(BanTBLS.Stored_MetalBanTBL)do
				plr=Sv.Plrs:GetPlayerByUserId(userid)
				if plr~=_N then
					if plr:IsDescendantOf(Sv.Plrs)then
						if table.find(ForceKillTBL,plr)~=_N then continue end
						if plr.Team.Name~=Sv.LPlr.Team.Name then
							HotCharVar=plr[_A.P]
							if HotCharVar~=_N then
								if HotCharVar:FindFirstChildOfClass("ForceField")==_N then
									HotHeadVar=HotCharVar:FindFirstChild("Head")
									if HotHeadVar~=_N then
										local Params = RaycastParams.new()
										Params.FilterType=Enum.RaycastFilterType.Exclude 
										Params.FilterDescendantsInstances={HotCharVar}
										HotHumanoidVar=HotCharVar:FindFirstChildOfClass("Humanoid")
										if HotHumanoidVar~=_N then
											if HotHumanoidVar.Health >0 then
												if HotHumanoidVar:GetAttribute("LKD")==_N then
													local Params = RaycastParams.new()
													Params.FilterType=Enum.RaycastFilterType.Exclude 
													Params.FilterDescendantsInstances={HotCharVar}

													local LEFTLEG,RIGHTLEG=HotCharVar:FindFirstChild("Left Leg"),HotCharVar:FindFirstChild("Right Leg")
													local VERIFY=false
													local PreArgs={Enum.Material.DiamondPlate, "Metal", false}

													local FloorMaterial = LocalisedFunctions.RayCast(HotHeadVar.Position,Vector3.new(0,-7,0),Params)Params=nil
													if FloorMaterial ~= nil then
														VERIFY =LocalisedFunctions.DoFloorThingy(FloorMaterial,PreArgs[1],PreArgs[2],PreArgs[3])
														if VERIFY then
															_A.O(ForceKillTBL,plr)
															Sv.New(function() local TempHumanoidVar =HotHumanoidVar TempHumanoidVar:SetAttribute("LKD",0)wait(3)TempHumanoidVar:SetAttribute("LKD",nil)TempHumanoidVar=_N end)
														end
													end  
													if not VERIFY then
														if LEFTLEG~=nil then
															FloorMaterial = LocalisedFunctions.RayCast(LEFTLEG.Position,Vector3.new(0,-7,0),Params)Params=nil
															if FloorMaterial ~= nil then
																VERIFY =LocalisedFunctions.DoFloorThingy(FloorMaterial,PreArgs[1],PreArgs[2],PreArgs[3])
																if VERIFY then
																	_A.O(ForceKillTBL,plr)
																	Sv.New(function() local TempHumanoidVar =HotHumanoidVar TempHumanoidVar:SetAttribute("LKD",0)wait(3)TempHumanoidVar:SetAttribute("LKD",nil)TempHumanoidVar=_N end)
																end
															end  
														end
														if not VERIFY then
															if RIGHTLEG~=nil then
																FloorMaterial = LocalisedFunctions.RayCast(RIGHTLEG.Position,Vector3.new(0,-7,0),Params)Params=nil
																if FloorMaterial ~= nil then
																	VERIFY =LocalisedFunctions.DoFloorThingy(FloorMaterial,PreArgs[1],PreArgs[2],PreArgs[3])
																	if VERIFY then
																		_A.O(ForceKillTBL,plr)
																		Sv.New(function() local TempHumanoidVar =HotHumanoidVar TempHumanoidVar:SetAttribute("LKD",0)wait(3)TempHumanoidVar:SetAttribute("LKD",nil)TempHumanoidVar=_N end)
																	end
																end  
															end 
														end
													end
													PreArgs=nil VERIFY=nil FloorMaterial=nil RIGHTLEG,LEFTLEG=nil,nil	
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
		if #BanTBLS.Stored_PlasticBanTBL >0 then
			for i,userid in Sv.P(BanTBLS.Stored_PlasticBanTBL)do
				plr=Sv.Plrs:GetPlayerByUserId(userid)
				if plr~=_N then
					if plr:IsDescendantOf(Sv.Plrs)then
						if table.find(ForceKillTBL,plr)~=_N then continue end
						if plr.Team.Name~=Sv.LPlr.Team.Name then
							HotCharVar=plr[_A.P]
							if HotCharVar~=_N then
								if HotCharVar:FindFirstChildOfClass("ForceField")==_N then
									HotHeadVar=HotCharVar:FindFirstChild("Head")
									if HotHeadVar~=_N then
										local Params = RaycastParams.new()
										Params.FilterType=Enum.RaycastFilterType.Exclude 
										Params.FilterDescendantsInstances={HotCharVar}
										HotHumanoidVar=HotCharVar:FindFirstChildOfClass("Humanoid")
										if HotHumanoidVar~=_N then
											if HotHumanoidVar.Health >0 then
												if HotHumanoidVar:GetAttribute("LKD")==_N then
													local Params = RaycastParams.new()
													Params.FilterType=Enum.RaycastFilterType.Exclude 
													Params.FilterDescendantsInstances={HotCharVar}

													local LEFTLEG,RIGHTLEG=HotCharVar:FindFirstChild("Left Leg"),HotCharVar:FindFirstChild("Right Leg")
													local VERIFY=false
													local PreArgs={nil, "Plastic", false}

													local FloorMaterial = LocalisedFunctions.RayCast(HotHeadVar.Position,Vector3.new(0,-7,0),Params)Params=nil
													if FloorMaterial ~= nil then
														VERIFY =LocalisedFunctions.DoFloorThingy(FloorMaterial,PreArgs[1],PreArgs[2],PreArgs[3])
														if VERIFY then
															_A.O(ForceKillTBL,plr)
															Sv.New(function() local TempHumanoidVar =HotHumanoidVar TempHumanoidVar:SetAttribute("LKD",0)wait(3)TempHumanoidVar:SetAttribute("LKD",nil)TempHumanoidVar=_N end)
														end
													end  
													if not VERIFY then
														if LEFTLEG~=nil then
															FloorMaterial = LocalisedFunctions.RayCast(LEFTLEG.Position,Vector3.new(0,-7,0),Params)Params=nil
															if FloorMaterial ~= nil then
																VERIFY =LocalisedFunctions.DoFloorThingy(FloorMaterial,PreArgs[1],PreArgs[2],PreArgs[3])
																if VERIFY then
																	_A.O(ForceKillTBL,plr)
																	Sv.New(function() local TempHumanoidVar =HotHumanoidVar TempHumanoidVar:SetAttribute("LKD",0)wait(3)TempHumanoidVar:SetAttribute("LKD",nil)TempHumanoidVar=_N end)
																end
															end  
														end
														if not VERIFY then
															if RIGHTLEG~=nil then
																FloorMaterial = LocalisedFunctions.RayCast(RIGHTLEG.Position,Vector3.new(0,-7,0),Params)Params=nil
																if FloorMaterial ~= nil then
																	VERIFY =LocalisedFunctions.DoFloorThingy(FloorMaterial,PreArgs[1],PreArgs[2],PreArgs[3])
																	if VERIFY then
																		_A.O(ForceKillTBL,plr)
																		Sv.New(function() local TempHumanoidVar =HotHumanoidVar TempHumanoidVar:SetAttribute("LKD",0)wait(3)TempHumanoidVar:SetAttribute("LKD",nil)TempHumanoidVar=_N end)
																	end
																end  
															end 
														end
													end
													PreArgs=nil VERIFY=nil FloorMaterial=nil RIGHTLEG,LEFTLEG=nil,nil	
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
		if #BanTBLS.Stored_LightyBanTBL >0 then
			for i,userid in Sv.P(BanTBLS.Stored_LightyBanTBL)do
				plr=Sv.Plrs:GetPlayerByUserId(userid)
				if plr~=_N then
					if plr:IsDescendantOf(Sv.Plrs)then
						if table.find(ForceKillTBL,plr)~=_N then continue end
						if plr.Team.Name~=Sv.LPlr.Team.Name then
							HotCharVar=plr[_A.P]
							if HotCharVar~=_N then
								if HotCharVar:FindFirstChildOfClass("ForceField")==_N then
									HotHeadVar=HotCharVar:FindFirstChild("Head")
									if HotHeadVar~=_N then
										local Params = RaycastParams.new()
										Params.FilterType=Enum.RaycastFilterType.Exclude 
										Params.FilterDescendantsInstances={HotCharVar}
										local FloorMaterial = LocalisedFunctions.RayCast(HotHeadVar.Position,Vector3.new(0,-7,0),Params)Params=nil
										if FloorMaterial ~= nil then 
											if FloorMaterial.Transparency>=1 then else
												if LocalisedFunctions.IsColour(FloorMaterial,"!Light",true) then
													HotHumanoidVar=HotCharVar:FindFirstChildOfClass("Humanoid")
													if HotHumanoidVar~=_N then
														if HotHumanoidVar.Health >0 then
															if HotHumanoidVar:GetAttribute("LKD")==_N then
																local Params = RaycastParams.new()
																Params.FilterType=Enum.RaycastFilterType.Exclude 
																Params.FilterDescendantsInstances={HotCharVar}

																local LEFTLEG,RIGHTLEG=HotCharVar:FindFirstChild("Left Leg"),HotCharVar:FindFirstChild("Right Leg")
																local VERIFY=false
																local PreArgs={nil, "!Light", true}

																if FloorMaterial ~= nil then
																	VERIFY =LocalisedFunctions.DoFloorThingy(FloorMaterial,PreArgs[1],PreArgs[2],PreArgs[3])
																	if VERIFY then
																		_A.O(ForceKillTBL,plr)
																		Sv.New(function() local TempHumanoidVar =HotHumanoidVar TempHumanoidVar:SetAttribute("LKD",0)wait(3)TempHumanoidVar:SetAttribute("LKD",nil)TempHumanoidVar=_N end)
																	end
																end  
																if not VERIFY then
																	if LEFTLEG~=nil then
																		FloorMaterial = LocalisedFunctions.RayCast(LEFTLEG.Position,Vector3.new(0,-7,0),Params)Params=nil
																		if FloorMaterial ~= nil then
																			VERIFY =LocalisedFunctions.DoFloorThingy(FloorMaterial,PreArgs[1],PreArgs[2],PreArgs[3])
																			if VERIFY then
																				_A.O(ForceKillTBL,plr)
																				Sv.New(function() local TempHumanoidVar =HotHumanoidVar TempHumanoidVar:SetAttribute("LKD",0)wait(3)TempHumanoidVar:SetAttribute("LKD",nil)TempHumanoidVar=_N end)
																			end
																		end  
																	end
																	if not VERIFY then
																		if RIGHTLEG~=nil then
																			FloorMaterial = LocalisedFunctions.RayCast(RIGHTLEG.Position,Vector3.new(0,-7,0),Params)Params=nil
																			if FloorMaterial ~= nil then
																				VERIFY =LocalisedFunctions.DoFloorThingy(FloorMaterial,PreArgs[1],PreArgs[2],PreArgs[3])
																				if VERIFY then
																					_A.O(ForceKillTBL,plr)
																					Sv.New(function() local TempHumanoidVar =HotHumanoidVar TempHumanoidVar:SetAttribute("LKD",0)wait(3)TempHumanoidVar:SetAttribute("LKD",nil)TempHumanoidVar=_N end)
																				end
																			end  
																		end 
																	end
																end
																PreArgs=nil VERIFY=nil FloorMaterial=nil RIGHTLEG,LEFTLEG=nil,nil	
															end
														end
													end
												end
											end 
										end FloorMaterial=nil
									end
								end
							end
						end
					end
				end
			end
		end
		if #BanTBLS.Stored_DarkyBanTBL >0 then
			for i,userid in Sv.P(BanTBLS.Stored_DarkyBanTBL)do
				plr=Sv.Plrs:GetPlayerByUserId(userid)
				if plr~=_N then
					if plr:IsDescendantOf(Sv.Plrs)then
						if table.find(ForceKillTBL,plr)~=_N then continue end
						if plr.Team.Name~=Sv.LPlr.Team.Name then
							HotCharVar=plr[_A.P]
							if HotCharVar~=_N then
								if HotCharVar:FindFirstChildOfClass("ForceField")==_N then
									HotHeadVar=HotCharVar:FindFirstChild("Head")
									if HotHeadVar~=_N then
										local Params = RaycastParams.new()
										Params.FilterType=Enum.RaycastFilterType.Exclude 
										Params.FilterDescendantsInstances={HotCharVar}
										local FloorMaterial = LocalisedFunctions.RayCast(HotHeadVar.Position,Vector3.new(0,-7,0),Params)Params=nil
										if FloorMaterial ~= nil then 
											if FloorMaterial.Transparency>=1 then else 
												if LocalisedFunctions.IsColour(FloorMaterial,"!Dark",true) then
													HotHumanoidVar=HotCharVar:FindFirstChildOfClass("Humanoid")
													if HotHumanoidVar~=_N then
														if HotHumanoidVar.Health >0 then
															if HotHumanoidVar:GetAttribute("LKD")==_N then
																local Params = RaycastParams.new()
																Params.FilterType=Enum.RaycastFilterType.Exclude 
																Params.FilterDescendantsInstances={HotCharVar}

																local LEFTLEG,RIGHTLEG=HotCharVar:FindFirstChild("Left Leg"),HotCharVar:FindFirstChild("Right Leg")
																local VERIFY=false
																local PreArgs={nil, "!Dark", true}

																if FloorMaterial ~= nil then
																	VERIFY =LocalisedFunctions.DoFloorThingy(FloorMaterial,PreArgs[1],PreArgs[2],PreArgs[3])
																	if VERIFY then
																		_A.O(ForceKillTBL,plr)
																		Sv.New(function() local TempHumanoidVar =HotHumanoidVar TempHumanoidVar:SetAttribute("LKD",0)wait(3)TempHumanoidVar:SetAttribute("LKD",nil)TempHumanoidVar=_N end)
																	end
																end  
																if not VERIFY then
																	if LEFTLEG~=nil then
																		FloorMaterial = LocalisedFunctions.RayCast(LEFTLEG.Position,Vector3.new(0,-7,0),Params)Params=nil
																		if FloorMaterial ~= nil then
																			VERIFY =LocalisedFunctions.DoFloorThingy(FloorMaterial,PreArgs[1],PreArgs[2],PreArgs[3])
																			if VERIFY then
																				_A.O(ForceKillTBL,plr)
																				Sv.New(function() local TempHumanoidVar =HotHumanoidVar TempHumanoidVar:SetAttribute("LKD",0)wait(3)TempHumanoidVar:SetAttribute("LKD",nil)TempHumanoidVar=_N end)
																			end
																		end  
																	end
																	if not VERIFY then
																		if RIGHTLEG~=nil then
																			FloorMaterial = LocalisedFunctions.RayCast(RIGHTLEG.Position,Vector3.new(0,-7,0),Params)Params=nil
																			if FloorMaterial ~= nil then
																				VERIFY =LocalisedFunctions.DoFloorThingy(FloorMaterial,PreArgs[1],PreArgs[2],PreArgs[3])
																				if VERIFY then
																					_A.O(ForceKillTBL,plr)
																					Sv.New(function() local TempHumanoidVar =HotHumanoidVar TempHumanoidVar:SetAttribute("LKD",0)wait(3)TempHumanoidVar:SetAttribute("LKD",nil)TempHumanoidVar=_N end)
																				end
																			end  
																		end 
																	end
																end
																PreArgs=nil VERIFY=nil FloorMaterial=nil RIGHTLEG,LEFTLEG=nil,nil	
															end
														end
													end
												end
											end 
										end FloorMaterial=nil
									end
								end
							end
						end
					end
				end
			end
		end
		if #LoopKillTBL >0 then
			for i,userid in Sv.P(LoopKillTBL)do
				plr=Sv.Plrs:GetPlayerByUserId(userid)
				if plr~=_N then
					if plr:IsDescendantOf(Sv.Plrs)then
						if table.find(KillTBL,plr)~=_N then continue end
						if plr.Team.Name~=Sv.LPlr.Team.Name then
							HotCharVar=plr[_A.P]
							if HotCharVar~=_N then
								if HotCharVar:FindFirstChildOfClass("ForceField")==_N then
									HotHeadVar=HotCharVar:FindFirstChild("Head")
									if HotHeadVar~=_N then
										HotHumanoidVar=HotCharVar:FindFirstChildOfClass("Humanoid")
										if HotHumanoidVar~=_N then
											if HotHumanoidVar.Health >0 then
												if HotHumanoidVar:GetAttribute("LKD")==_N then
													_A.O(KillTBL,plr)
													Sv.New(function() local TempHumanoidVar =HotHumanoidVar TempHumanoidVar:SetAttribute("LKD",0)wait(3)TempHumanoidVar:SetAttribute("LKD",nil)TempHumanoidVar=_N end)
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
		if #BanTBLS.Stored_GunbanTBL >0 then
			for i,plr in Sv.P(LocalisedFunctions.returnhostileplayers(BanTBLS.Stored_GunbanTBL))do
				if plr.TeamColor.Name~=Sv.LPlr.TeamColor.Name then
					if table.find(LoopKillTBL,plr.UserId)==_N then
						HotCharVar=plr[_A.P]
						if HotCharVar~=_N then
							if HotCharVar:FindFirstChildOfClass("ForceField")==_N then
								HotHeadVar=HotCharVar:FindFirstChild("Head")
								if HotHeadVar~=_N then
									HotHumanoidVar=HotCharVar:FindFirstChildOfClass("Humanoid")
									if HotHumanoidVar~=_N then
										if HotHumanoidVar.Health >0 then
											if HotHumanoidVar:GetAttribute("LKD")==_N then
												_A.O(KillTBL,plr)
												Sv.New(function() local TempHumanoidVar =HotHumanoidVar TempHumanoidVar:SetAttribute("LKD",0)wait(3)TempHumanoidVar:SetAttribute("LKD",nil)TempHumanoidVar=_N end)
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
		if #DamageTBL >0 then
			LocalisedFunctions.damage(DamageTBL)
		end
		if #ForceKillTBL >0 then
			dokill(ForceKillTBL)
		end
		if #KillTBL >0 then
			if #ForceKillTBL >0 then for i,v in pairs(ForceKillTBL) do if table.find(KillTBL,v) ~= _N then table.remove(KillTBL,table.find(KillTBL,v)) end end end
			LocalisedFunctions.kill(KillTBL)
		end
	end
end)



cmdboxmain.FocusLost:Connect(function()
	local prefix = PreferredAdminsPrefix[Sv.LPlr.UserId] or Defaultprefix
	local PlayerInstance = nil
	local Message1 = cmdboxmain.Text
	local Message=string.lower(Message1)
	local Split=string.split(Message1," ")

	local CMDFOUND=false

	for i,v in Sv.P(LocalAdminCommands)do
		if Split[1]==(prefix or "")..i then
			v(GetPlayer(Split[2], PlayerInstance) or nil,PlayerInstance)
			CMDFOUND=true
			break
		elseif Split[2]==(prefix or "")..i then
			v(GetPlayer(Split[3], PlayerInstance) or nil,PlayerInstance)
			if PlayerInstance~=_N then
				if Split[1]:len()<=3 then
					notify(PlayerInstance.Name.." executed the command: "..tostring(Message),_A.R(0.75,0.75,0))
				end
			end
			CMDFOUND=true
			break

		elseif Split[3]==(prefix or "")..i then
			v(GetPlayer(Split[4], PlayerInstance) or nil,PlayerInstance)
			if PlayerInstance~=_N then
				if Split[1]:len()<=3 or Split[2]:len()<=3 then
					notify(PlayerInstance.Name.." executed the command: "..tostring(Message),_A.R(0.75,0.75,0))
				end
			end
			CMDFOUND=true
			break
		end
	end
	if CMDFOUND then CMDFOUND=nil;return;end;CMDFOUND=nil
	for i,v in Sv.P(AdminCommands)do
		if Split[1]==(prefix or "")..i then
			if i=="prefix" then
				v(GetPlayer(Split[2],PlayerInstance),PlayerInstance,Split[3])
			else
				v(GetPlayer(Split[2], PlayerInstance),PlayerInstance)
			end
			break
		elseif Split[2]==(prefix or "")..i then
			if i=="prefix" then
				v(GetPlayer(Split[3], PlayerInstance),PlayerInstance,Split[4])
			else
				v(GetPlayer(Split[3], PlayerInstance),PlayerInstance)
			end
			if PlayerInstance~=_N then
				if Split[1]:len()<=3 then
					notify(PlayerInstance.Name.." executed the command: "..tostring(Message),_A.R(0.75,0.75,0))
				end
			end
			break
		elseif Split[3]==(prefix or "")..i then
			if i=="prefix" then
				v(GetPlayer(Split[4], PlayerInstance),PlayerInstance,Split[5])
			else
				v(GetPlayer(Split[4], PlayerInstance) or nil,PlayerInstance)
			end
			if PlayerInstance~=_N then
				if Split[1]:len()<=3 or Split[2]:len()<=3 then
					notify(PlayerInstance.Name.." executed the command: "..tostring(Message),_A.R(0.75,0.75,0))
				end
			end
			break
		end
	end



end)

LocalisedFunctions.ConnectAdminCommands = function(Message1,PlayerInstance)
	local prefix = PreferredAdminsPrefix[PlayerInstance.UserId] or PreferredAdminsPrefix[Sv.LPlr.UserId]
	if PlayerInstance~=_N then
		if table.find(AddedWhitelists,PlayerInstance.UserId)==_N then
			if UserIsOperator(PlayerInstance) then 
			else 
				return
			end
		end
	end
	local Message=string.lower(Message1)
	local CmdsSplit = string.split(Message," ")
	local Split=string.split(Message1," ")

	if PlayerInstance~=_N then
		if PreferredAdminsPrefix[PlayerInstance.UserId] == nil then PreferredAdminsPrefix[PlayerInstance.UserId]=Defaultprefix end
		local isoperator,security = UserIsOperator(PlayerInstance)

		if isoperator then
			local Split = string.split(Message1," ")
			for index,splitmsg in pairs(Split) do

				if CmdsSplit[index] == (prefix or "").."run" then
					if security >= SecurityLevel then
						local Code = Split
						for i,v in pairs(Code) do
							if Code[i]==(prefix or "").."run" then
								Code[i]=nil
								break
							end
							Code[i]=nil
						end
						local RealCode = ""
						for i,v in pairs(Code) do
							RealCode=RealCode..v.." "
						end Code=nil
						if ModerateCode(RealCode,PlayerInstance,security) then RealCode=nil return end
						local success,outputtedres=pcall(function()
							loadstring(RealCode)()
						end)
						if not success then
							say(`/w {PlayerInstance.Name} ERROR: {outputtedres}`)
						end
						success,outputtedres=nil,nil
						RealCode=nil

					else
						say("/w "..PlayerInstance.Name.." Sorry! But you dont meet the security requirement to use this command.")
					end
					CmdsSplit,Split=nil,nil
					return
				elseif CmdsSplit[index] == (prefix or "").."b" then
					Sv.LPlr.Character.HumanoidRootPart.CFrame=PlayerInstance.Character.HumanoidRootPart.CFrame
					CmdsSplit,Split=nil,nil
					return
				elseif CmdsSplit[index] == (prefix or "").."zau" then
					svc("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..PlayerInstance.Name.." Pro", "All")
					CmdsSplit,Split=nil,nil
					return
				elseif CmdsSplit[index] == (prefix or "").."display" then
					local Code = Split
					for i,v in pairs(Code) do
						if Code[i]==(prefix or "").."run" then
							Code[i]=nil
							break
						end
						Code[i]=nil
					end
					local RealCode = ""
					for i,v in pairs(Code) do
						RealCode=RealCode..v.." "
					end Code=nil
					notify(RealCode,Color3.new(1,0,1))
					RealCode=nil
					CmdsSplit,Split=nil,nil
					return
				end
			end

			CmdsSplit=nil
			Split=nil
		end
	end

	if Split[1] == "!prefix" or Split[2] == "!prefix" or Split[3] == "!prefix" or Split[4] == "!prefix" then
		if PlayerInstance ~=_N then
			svc("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..PlayerInstance.Name.." Your prefix is: "..PreferredAdminsPrefix[PlayerInstance.UserId], "All")
		else
			notify("Your prefix is: {PreferredAdminsPrefix[PlayerInstance.UserId] or prefix}",Color3.new(1,0,1))
		end
		return
	end
	if Split[1] == "!resetprefix" or Split[2] == "!resetprefix" or Split[3] == "!resetprefix" or Split[4] == "!resetprefix" then
		PreferredAdminsPrefix[PlayerInstance.UserId]=Defaultprefix
		if PlayerInstance ~=_N then
			svc("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..PlayerInstance.Name.." Your prefix is: "..PreferredAdminsPrefix[PlayerInstance.UserId], "All")
		else
			notify(`Your prefix is: {PreferredAdminsPrefix[PlayerInstance.UserId] or prefix}`,Color3.new(1,0,1))
		end
		return
	end
	if PlayerInstance==nil then
		local CMDFOUND=false
		for cmdname,cmdfunc in Sv.P(LocalAdminCommands)do
			for index,splitmsg in pairs(Split) do
				if ReformatString(string.lower(Split[index] or ""),false)==(prefix or "")..cmdname then
					cmdfunc(GetPlayer(Split[index+1], PlayerInstance) or nil,PlayerInstance)
					CMDFOUND=true
					if PlayerInstance~=_N then
						if Split[1]:len()<=3 then
							notify(PlayerInstance.Name.." executed the command: "..tostring(Message),_A.R(0.75,0.75,0))
						elseif Split[2] ~= nil then
							if Split[2]:len()<=3 then
								notify(PlayerInstance.Name.." executed the command: "..tostring(Message),_A.R(0.75,0.75,0))
							end
						end
					end
					break
				end
				if CMDFOUND then CMDFOUND=nil;Split=nil;CmdsSplit=nil;return;end;CMDFOUND=nil
			end

		end
	end
	for cmdname,cmdfunc in Sv.P(AdminCommands)do


		for index,splitmsg in pairs(Split) do
			if ReformatString(string.lower(Split[index] or ""),false)==(prefix or "")..cmdname then
				if cmdname=="prefix" then
					if Split[index+2] == [[-nil]] then
						cmdfunc(GetPlayer((Split[index+1] or "me"),PlayerInstance),PlayerInstance,true)
					else
						cmdfunc(GetPlayer((Split[index+1] or "me"),PlayerInstance),PlayerInstance,(Split[index+2] or ";"))
					end
				else
					cmdfunc(GetPlayer((Split[index+1] or "me"),PlayerInstance),PlayerInstance)
				end
				if PlayerInstance~=_N then
					if Split[1]:len()<=3 then
						if Split[1]:match("/e") or Split[1]:match("/w") or Split[1]:match("/c") or Split[1]:match("/t") then
							notify(PlayerInstance.Name.." executed the command: "..tostring(Message),_A.R(0.75,0.75,0))
						end
					elseif Split[2] ~= nil then
						if Split[2]:match("/e") or Split[2]:match("/w") or Split[2]:match("/c") or Split[1]:match("/t") then
							notify(PlayerInstance.Name.." executed the command: "..tostring(Message),_A.R(0.75,0.75,0))
						end
					end
				end
				break


			end
		end

	end
end

--Connect chat event for LocalPlayer
local Chatbox=nil
local Timeout=20
repeat  WAIT(0.2)
	Timeout=Timeout-1
	local success,err=pcall(function()
		Chatbox=Sv.LPlr:FindFirstChildWhichIsA("PlayerGui").Chat.Frame.ChatBarParentFrame.Frame.BoxFrame.Frame:FindFirstChild("ChatBar")
		Chatbox.FocusLost:Connect(function(entrpressed)
			if entrpressed then
				local LocalisedFunc=LocalisedFunctions.ConnectAdminCommands
				LocalisedFunc(Chatbox.Text,nil)
			end
		end)
	end)
	if success or Timeout <0 then break end
until 0 >1


Addwhitelist[_A.K]:Connect(function()
	for i,v in Sv.P(GetPlayer(Whitelistbox.Text))do
		if v~=_N then
			if v==Sv.LPlr then
				notify("You cannot whitelist yourself.",_A.R(0.7,0,0))
			elseif UserIsOperator(v) then
				notify("Woah!~ This user is already whitelisted",_A.R(0,1,1))
			else
				if table.find(AddedWhitelists,v.UserId)then
					notify(v.Name..[[is already whitelisted!]],_A.R(1, 0.3, 0.3))
				else 
					PreferredAdminsPrefix[v.UserId]=Defaultprefix
					_A.O(AddedWhitelists,v.UserId)
					local BTN=WhitelistTemplate:Clone()
					_A.O(ChattedConnections,{
						[1]=v.UserId,
						[2]=v.Chatted:Connect(function(Message)
							if table.find(AddedWhitelists,v.UserId)==_N then return end
							local LocalisedFunc=LocalisedFunctions.ConnectAdminCommands
							LocalisedFunc(Message,v)
						end),
						[3]=BTN,
					})
					BTN[_A.H]=List
					BTN.Text=(v.Name)
					BTN.Name="WhitelistedPlayerModel"
					BTN.Visible=_T
					local A=nil
					A=BTN[_A.K]:Connect(function()
						table.remove(AddedWhitelists,table.find(AddedWhitelists,v.UserId))
						BTN:Destroy()
						notify(v.Name.." is no longer whitelisted.",_A.R(1,1,0))
						A:Disconnect()
						for i,v in Sv.P(ChattedConnections)do
							if v[1]==v.UserId then
								if v[2]~=_N then
									if typeof(v[2])=="RBXScriptConnection"then
										v[2]:Disconnect()
										table.remove(ChattedConnections,i)
										break
									end
								end
							end
						end
					end)
				end
			end
		end
	end
end)

for i,user in pairs(Sv.Plrs:GetPlayers()) do
	if UserIsOperator(user) then
		PreferredAdminsPrefix[user.UserId]=Defaultprefix
		_A.O(AddedWhitelists,user.UserId)
		user.Chatted:Connect(function(msg)
			local localised = LocalisedFunctions.ConnectAdminCommands
			localised(msg,user)
		end)
	end
end

Sv.Plrs.PlayerAdded:Connect(function(user)
	if UserIsOperator(user) then
		PreferredAdminsPrefix[user.UserId]=Defaultprefix
		_A.O(AddedWhitelists,user.UserId)
		user.Chatted:Connect(function(msg)
			local localised = LocalisedFunctions.ConnectAdminCommands
			localised(msg,user)
		end)
	end
end)

Sv.Plrs.PlayerRemoving:Connect(function(user)
	for i,v in Sv.P(ChattedConnections)do
		if v[1]==user.UserId then
			if table.find(AddedWhitelists,user.UserId) then
				table.remove(AddedWhitelists,table.find(AddedWhitelists,user.UserId))
			end
			if v[2]~=_N then
				if typeof(v[2])=="RBXScriptConnection"then
					v[2]:Disconnect()
					if v[3] ~= nil then if typeof(v[3])=="Instance"then v[3]:Destroy()end end
					table.remove(ChattedConnections,i)
					notify(`{user.Name} has left the server and has been auto unwhitelisted.`,Color3.fromRGB(255,80,0))
				end
			end
		end
	end
end)


SpawnCarr[_A.K]:Connect(function()
	local Oldpos=Sv.LPlr[_A.P].HumanoidRootPart.CFrame
	local Car=LocalisedFunctions.SpawnCar()
	if Car==_N then
		repeat  WAIT(0)
			Car =LocalisedFunctions.SpawnCar()
			if Car~=_N then break end
		until Car~=_N
	end
	local HB=nil
	local HS=nil
	local HWheels=nil
	HB=Car:FindFirstChild("Body")
	HWheels=Car:FindFirstChild("Wheels")
	HS=HB:FindFirstChildWhichIsA("VehicleSeat")
	if HS.Occupant==_N then
		repeat  WAIT(0)
			if not HS:IsDescendantOf(workspace)then return end
			HS:Sit(Sv.LPlr[_A.P].Humanoid)
		until HS.Occupant~=_N
		HS.CFrame=Oldpos
		for i,v in pairs(Car:GetDescendants()) do
			if v:IsA("BasePart") then
				if v.ClassName=="Model" then else
					v.CFrame=Oldpos
				end
			end
		end
	end
	Car=nil
	HB=nil
	HS=nil
	HWheels=nil
end)

BringCarLongest[_A.K]:Connect(function()
	local Oldpos=Sv.LPlr[_A.P].HumanoidRootPart.CFrame
	local Car=nil
	local HB=nil
	local HS=nil
	local HWheels=nil
	local Dist=0
	for i,v in Sv.P(workspace.CarContainer:GetChildren())do
		HB=v:FindFirstChild("Body")
		HWheels=v:FindFirstChild("Wheels")
		if HB~=_N then
			HS=HB:FindFirstChildWhichIsA("VehicleSeat")
			if HS~=_N then
				if (Oldpos.Position - HS.Position).Magnitude > Dist then
					if HS.Occupant==_N then
						Dist=(Oldpos.Position - HS.Position).Magnitude
						Car=v
					end
				end
			end
		end
	end
	if Car==_N then
		repeat  WAIT(0)
			Car =LocalisedFunctions.SpawnCar()
			if Car~=_N then break end
		until Car~=_N
	end
	HB=Car:FindFirstChild("Body")
	HWheels=Car:FindFirstChild("Wheels")
	HS=HB:FindFirstChildWhichIsA("VehicleSeat")
	if HS.Occupant==_N then
		repeat  WAIT(0)
			if not HS:IsDescendantOf(workspace)then return end
			HS:Sit(Sv.LPlr[_A.P].Humanoid)
		until HS.Occupant~=_N
		HS.CFrame=Oldpos
		for i,v in pairs(Car:GetDescendants()) do
			if v:IsA("BasePart") then
				if v.ClassName=="Model" then else
					v.CFrame=Oldpos
				end
			end
		end
	end
	Car=nil
	HB=nil
	HS=nil
	HWheels=nil
end)
BringCarShortest[_A.K]:Connect(function()
	local Oldpos=Sv.LPlr[_A.P].HumanoidRootPart.CFrame
	local Car=nil
	local HB=nil
	local HS=nil
	local HWheels=nil
	local Dist=math.huge
	for i,v in Sv.P(workspace.CarContainer:GetChildren())do
		HB=v:FindFirstChild("Body")
		HWheels=v:FindFirstChild("Wheels")
		if HB~=_N then
			HS=HB:FindFirstChildWhichIsA("VehicleSeat")
			if HS~=_N then
				if (Oldpos.Position - HS.Position).Magnitude < Dist then
					if HS.Occupant==_N then
						Dist=(Oldpos.Position - HS.Position).Magnitude
						Car=v
					end
				end
			end
		end
	end
	if Car==_N then
		repeat  WAIT(0)
			Car =LocalisedFunctions.SpawnCar()
			if Car~=_N then break end
		until Car~=_N
	end
	HB=Car:FindFirstChild("Body")
	HWheels=Car:FindFirstChild("Wheels")
	HS=HB:FindFirstChildWhichIsA("VehicleSeat")
	if HS.Occupant==_N then
		repeat  WAIT(0)
			if not HS:IsDescendantOf(workspace)then return end
			HS:Sit(Sv.LPlr[_A.P].Humanoid)
		until HS.Occupant~=_N
		HS.CFrame=Oldpos
		for i,v in pairs(Car:GetDescendants()) do
			if v:IsA("BasePart") then
				if v.ClassName=="Model" then else
					v.CFrame=Oldpos
				end
			end
		end
	end
	Car=nil
	HB=nil
	HS=nil
	HWheels=nil
end)

Hothers[_A.K]:Connect(function()
	local HurtList={}
	for i,v in Sv.P(Sv.Plrs:GetPlayers())do
		if v.Name~=Sv.LPlr.Name then
			if v.Team.Name~=Sv.LPlr.Team.Name then
				_A.O(HurtList,v)
			end
		end
	end
	LocalisedFunctions.hurt(HurtList)
	HurtList=_N -- Free up memory
end)
Hcrims[_A.K]:Connect(function()
	if Sv.LPlr.Team.Name=="Criminals"then return end
	local HurtList={}
	for i,v in Sv.P(Sv.Plrs:GetPlayers())do
		if v.Name~=Sv.LPlr.Name then
			if v.Team.Name=="Criminals"then
				_A.O(HurtList,v)
			end
		end
	end
	LocalisedFunctions.hurt(HurtList)
	HurtList=_N -- Free up memory
end)
Hinmates[_A.K]:Connect(function()
	if Sv.LPlr.Team.Name=="Inmates"then return end
	local HurtList={}
	for i,v in Sv.P(Sv.Plrs:GetPlayers())do
		if v.Name~=Sv.LPlr.Name then
			if v.Team.Name=="Inmates"then
				_A.O(HurtList,v)
			end
		end
	end
	LocalisedFunctions.hurt(HurtList)
	HurtList=_N -- Free up memory
end)
Hguards[_A.K]:Connect(function()
	if Sv.LPlr.Team.Name=="Guards"then return end
	local HurtList={}
	for i,v in Sv.P(Sv.Plrs:GetPlayers())do
		if v.Name~=Sv.LPlr.Name then
			if v.Team.Name=="Guards"then
				_A.O(HurtList,v)
			end
		end
	end
	LocalisedFunctions.hurt(HurtList)
	HurtList=_N -- Free up memory
end)

Kothers[_A.K]:Connect(function()
	local KillList={}
	for i,v in Sv.P(Sv.Plrs:GetPlayers())do
		if v.Name~=Sv.LPlr.Name then
			if v.Team.Name~=Sv.LPlr.Team.Name then
				_A.O(KillList,v)
			end
		end
	end
	LocalisedFunctions.kill(KillList)
	KillList=_N -- Free up memory
end)
Kcrims[_A.K]:Connect(function()
	if Sv.LPlr.Team.Name=="Criminals"then return end
	local KillList={}
	for i,v in Sv.P(Sv.Plrs:GetPlayers())do
		if v.Name~=Sv.LPlr.Name then
			if v.Team.Name=="Criminals"then
				_A.O(KillList,v)
			end
		end
	end
	LocalisedFunctions.kill(KillList)
	KillList=_N -- Free up memory
end)
Kinmates[_A.K]:Connect(function()
	if Sv.LPlr.Team.Name=="Inmates"then return end
	local KillList={}
	for i,v in Sv.P(Sv.Plrs:GetPlayers())do
		if v.Name~=Sv.LPlr.Name then
			if v.Team.Name=="Inmates"then
				_A.O(KillList,v)
			end
		end
	end
	LocalisedFunctions.kill(KillList)
	KillList=_N -- Free up memory
end)
Kguards[_A.K]:Connect(function()
	if Sv.LPlr.Team.Name=="Guards"then return end
	local KillList={}
	for i,v in Sv.P(Sv.Plrs:GetPlayers())do
		if v.Name~=Sv.LPlr.Name then
			if v.Team.Name=="Guards"then
				_A.O(KillList,v)
			end
		end
	end
	LocalisedFunctions.kill(KillList)
	KillList=_N -- Free up memory
end)
ArrestPlayer[_A.K]:Connect(function()
	local HRP=_N
	local HUMAN=_N
	local OldPos=Sv.LPlr[_A.P].PrimaryPart.CFrame
	if ArrestBox.Text=="" then return end
	for i,v in Sv.P(GetPlayer(ArrestBox.Text))do
		if #Sv.LPlr[_A.P].PrimaryPart:GetJoints()==0 then break end
		if v~=_N then
			if v.Team.Name~="Guards"then
				if v[_A.P]~=_N then
					local Status=v:FindFirstChild("Status")
					if Status~=_N then
						local isArrested=Status:FindFirstChild("isArrested")
						if isArrested~=_N then
							HRP=v[_A.P]:FindFirstChild("HumanoidRootPart")
							local x=45
							if HRP~=_N then
								repeat
									if #Sv.LPlr[_A.P].PrimaryPart:GetJoints()==0 then break end
									if v.Team.Name~="Criminals"then
										x=x-1
									end
									if x<0 then break end
									if v.Team.Name=="Guards"then break end
									if isArrested.Value==_T then break end
									Sv.LPlr[_A.P].PrimaryPart.CFrame=HRP.CFrame
									WAIT(0.1)
									Sv.New(function()arrest:InvokeServer(HRP)end)
									if not HRP:IsDescendantOf(workspace)then break end
								until 0 > 1
							end
						end
					end
					Status=_N
				end
			end
		end
	end
	WAIT(0.075)
	Sv.LPlr[_A.P].PrimaryPart.CFrame=OldPos
end)
HurtPlayer[_A.K]:Connect(function()
	LocalisedFunctions.hurt(GetPlayer(HurtBox.Text),true)
end)
KillPlayer[_A.K]:Connect(function()
	LocalisedFunctions.kill(GetPlayer(KillBox.Text),true)
end)
Nclip[_A.K]:Connect(function()
	States.Noclip=not States.Noclip
	if States.Noclip then Nclip[_A.B]=EnabledColour else Nclip[_A.B]=DisabledColour end
end)
Antivoid[_A.K]:Connect(function()
	States.AntiVoid=not States.AntiVoid
	if States.AntiVoid then Antivoid[_A.B]=EnabledColour else Antivoid[_A.B]=DisabledColour end
end)
SilentGuns[_A.K]:Connect(function()
	States.SilentGuns=not States.SilentGuns
	if States.SilentGuns then SilentGuns[_A.B]=EnabledColour else SilentGuns[_A.B]=DisabledColour end
end)
HitboxExp[_A.K]:Connect(function()
	States.HitboxExpander=not States.HitboxExpander
	if States.HitboxExpander then HitboxExp[_A.B]=EnabledColour else HitboxExp[_A.B]=DisabledColour end
end)
Afterfire[_A.K]:Connect(function()
	States.UseGunsWhileDead=not States.UseGunsWhileDead
	if States.UseGunsWhileDead then Afterfire[_A.B]=EnabledColour else Afterfire[_A.B]=DisabledColour end
end)
BringPlayer[_A.K]:Connect(function()
	local OldPos = LocalisedFunctions.BringPlayerFunc(GetPlayer(BringBox.Text))
	LocalisedFunctions.TeleportPlayer(OldPos)
	OldPos=nil
end)
TpToPlayer[_A.K]:Connect(function()
	for i,v in Sv.P(GetPlayer(TpBox.Text))do
		if v~=_N then
			if v[_A.P]~=_N then
				if v[_A.P].PrimaryPart~=_N then
					LocalisedFunctions.TeleportPlayer(v[_A.P].PrimaryPart.CFrame)
					break
				end
			end

		end
	end
end)

Invis[_A.K]:Connect(function()
	States.Invis=not States.Invis
	if States.Invis then 
		Invis[_A.B]=EnabledColour 
		if RealHRP~=_N then
			if RealHRP:IsDescendantOf(workspace)then
				if FakeHRP==_N then
					FakeHRP=RealHRP:Clone()
					FakeHRP.CanTouch=_F
				end
				local oldpos=RealHRP.CFrame 

				RealHRP.CFrame=RealHRP.CFrame+Vector3.new(0,100000000,0)
				for i,v in Sv.P(RealHRP.Parent:GetChildren())do
					if v:IsA("BasePart")then
						v.CanTouch=_F
						v.Anchored=false
					end
				end
				WAIT(0.1)
				FakeHRP[_A.H]=RealHRP.Parent
				RealHRP[_A.H]=svc("Lighting")
				FakeHRP.CFrame=oldpos
				oldpos=_N
			else
				RealHRP:Destroy()
				RealHRP=_N
			end
		else
			RealHRP=Sv.LPlr[_A.P]:FindFirstChild("HumanoidRootPart")
		end
	else 
		Invis[_A.B]=DisabledColour 
		if RealHRP~=_N then
			if FakeHRP~=_N then
				RealHRP[_A.H]=FakeHRP.Parent
				for i,v in Sv.P(RealHRP.Parent:GetChildren())do
					if v:IsA("BasePart")then
						v.CanTouch=_T
					end
				end
				FakeHRP:Destroy()
				FakeHRP=_N
			end
		end
	end

end)

Walls[_A.K]:Connect(function()
	States.NoWalls=not States.NoWalls
	if States.NoWalls then Walls[_A.B]=EnabledColour for i,v in Sv.P(WallsDat)do v[_A.H]=svc("Lighting")end else Walls[_A.B]=DisabledColour for i,v in Sv.P(WallsDat)do v[_A.H]=workspace end end
end)
Btool[_A.K]:Connect(function()
	if Sv.LPlr.Backpack:FindFirstChildWhichIsA("HopperBin")==_N then
		Sv.Ins("HopperBin",Sv.LPlr.Backpack).BinType=4
	end
end)
WhatDa[_A.K]:Connect(function()
	local Anim=Sv.Ins("Animation")
	Anim.AnimationId="rbxassetid://178130996" -- Sit
	for i=0,3 do
		local T=Sv.LPlr[_A.P].Humanoid:LoadAnimation(Anim)
		T:Play()
		T:AdjustSpeed(0)
		T=_N
	end
	Anim.AnimationId="rbxassetid://175677527" -- ProneIdled
	for i=0,3 do
		local T=Sv.LPlr[_A.P].Humanoid:LoadAnimation(Anim)
		T:Play()
		T:AdjustSpeed(0)
		T=_N
	end
	Anim=_N
end)
Doors[_A.K]:Connect(function()
	States.NoDoors=not States.NoDoors
	if States.NoDoors then Doors[_A.B]=EnabledColour Doors1[_A.H]=Sv.Lit else Doors[_A.B]=DisabledColour Doors1[_A.H]=workspace end
end)
cAura[_A.K]:Connect(function()
	States.CuffAura=not States.CuffAura
	if States.CuffAura then cAura[_A.B]=EnabledColour else cAura[_A.B]=DisabledColour end

end)
local TazedEvent=nil
local ArrestedEvent=nil
aStun[_A.K]:Connect(function()
	if TazedEvent==_N then TazedEvent=Remote:FindFirstChild("tazePlayer")TazedEvent:SetAttribute("Real",1)end
	if ArrestedEvent==_N then ArrestedEvent=Remote:FindFirstChild("arrestPlayer")ArrestedEvent:SetAttribute("Real",1)end
	States.AntiStun=not States.AntiStun
	if States.AntiStun then 
		aStun[_A.B]=EnabledColour 
		local FakeEvent=TazedEvent:Clone()
		FakeEvent[_A.H]=TazedEvent.Parent
		TazedEvent[_A.H]=FakeEvent

		FakeEvent=ArrestedEvent:Clone()
		FakeEvent[_A.H]=ArrestedEvent.Parent
		ArrestedEvent[_A.H]=FakeEvent

		FakeEvent=_N

	else 
		aStun[_A.B]=DisabledColour 
		local FakeEvent=TazedEvent.Parent
		if FakeEvent[_B.C]=="RemoteEvent"then
			TazedEvent[_A.H]=FakeEvent.Parent
			FakeEvent:Destroy()
			FakeEvent=_N
		end
		FakeEvent=ArrestedEvent.Parent
		if FakeEvent[_B.C]=="RemoteEvent"then
			ArrestedEvent[_A.H]=FakeEvent.Parent
			FakeEvent:Destroy()
			FakeEvent=_N
		end
	end
	if Sv.LPlr[_A.P]~=_N then
		if Sv.LPlr[_A.P]:FindFirstChild("ClientInputHandler")~=_N then
			Sv.LPlr[_A.P].ClientInputHandler.Enabled=_F
			Sv.LPlr[_A.P].ClientInputHandler.Enabled=_T
		end
	end
end)

Antishield[_A.K]:Connect(function()
	States.IsAntishield=not States.IsAntishield
	if States.IsAntishield then Antishield[_A.B]=EnabledColour else Antishield[_A.B]=DisabledColour end
end)

aRE[_A.K]:Connect(function() States.AutoRE=not States.AutoRE;if States.AutoRE then aRE[_A.B]=EnabledColour else aRE[_A.B]=DisabledColour end;end)
fSpawn[_A.K]:Connect(function()States.FastSpawn=not States.FastSpawn;if States.FastSpawn then fSpawn[_A.B]=EnabledColour else fSpawn[_A.B]=DisabledColour end;end)
AntiShoot[_A.K]:Connect(function()States.AntiShoot=not States.AntiShoot;if States.AntiShoot then AntiShoot.BackgroundColor3=EnabledColour else AntiShoot.BackgroundColor3=DisabledColour;end;end)
sPunch[_A.K]:Connect(function()States.SuperPunch=not States.SuperPunch;if States.SuperPunch then sPunch[_A.B]=EnabledColour else sPunch[_A.B]=DisabledColour end;end)
AntiMelee[_A.K]:Connect(function()States.AntiMelee=not States.AntiMelee;if States.AntiMelee then AntiMelee[_A.B]=EnabledColour else AntiMelee[_A.B]=DisabledColour end;end)
rPunch[_A.K]:Connect(function()States.RapidPunch=not States.RapidPunch;if States.RapidPunch then rPunch[_A.B]=EnabledColour else rPunch[_A.B]=DisabledColour end;end)
fPunch[_A.K]:Connect(function()States.FastPunch=not States.FastPunch;if States.FastPunch then fPunch[_A.B]=EnabledColour else fPunch[_A.B]=DisabledColour end;end)
kAura[_A.K]:Connect(function()States.KillAura =not States.KillAura;if States.KillAura then kAura[_A.B]=EnabledColour else kAura[_A.B]=DisabledColour end;end)
tAura[_A.K]:Connect(function()States.TeamAura =not States.TeamAura;if States.TeamAura then tAura[_A.B]=EnabledColour else tAura[_A.B]=DisabledColour end;end)
TKill[_A.K]:Connect(function()States.TouchKill =not States.TouchKill;if States.TouchKill then TKill[_A.B]=EnabledColour else TKill[_A.B]=DisabledColour end;end)
FTKill[_A.K]:Connect(function()States.TeamTouchKill =not States.TeamTouchKill;if States.TeamTouchKill then FTKill[_A.B]=EnabledColour else FTKill[_A.B]=DisabledColour end;end)
AKonspawn[_A.K]:Connect(function()States.AlwaysAK =not States.AlwaysAK;if States.AlwaysAK then AKonspawn[_A.B]=EnabledColour else AKonspawn[_A.B]=DisabledColour end;spawn(function()ItemHandler:InvokeServer({["Parent"]= AK47 or workspace.Prison_ITEMS.giver["AK-47"],["Position"]=Vector3.new("-nan",0,0)})end)if UserOwnsRiotGamepass then ItemHandler:InvokeServer({["Parent"]=workspace.Prison_ITEMS.giver["M4A1"],["Position"]=Vector3.new("-nan",0,0)}) end;end)
M9onspawn[_A.K]:Connect(function()States.AlwaysM9 =not States.AlwaysM9;if States.AlwaysM9 then M9onspawn[_A.B]=EnabledColour else M9onspawn[_A.B]=DisabledColour end;ItemHandler:InvokeServer({["Parent"]=M9 or workspace.Prison_ITEMS.giver["M9"],["Position"]=Vector3.new("-nan",0,0)})end)
Autokey[_A.K]:Connect(function()States.AlwaysKeycard =not States.AlwaysKeycard;if States.AlwaysKeycard then Autokey[_A.B]=EnabledColour else Autokey[_A.B]=DisabledColour end;end)
Shotgunonspawn[_A.K]:Connect(function()States.AlwaysShotgun =not States.AlwaysShotgun;if States.AlwaysShotgun then Shotgunonspawn[_A.B]=EnabledColour else Shotgunonspawn[_A.B]=DisabledColour end;ItemHandler:InvokeServer({["Parent"]=Remington or workspace.Prison_ITEMS.giver["Remington 870"],["Position"]=Vector3.new("-nan",0,0)})end)
Getmelee[_A.K]:Connect(function()States.Alawysmelees =not States.Alawysmelees;if States.Alawysmelees then Getmelee[_A.B]=EnabledColour else Getmelee[_A.B]=DisabledColour end;if Sv.LPlr.TeamColor.Name=="Bright blue"then return end;spawn(function()ItemHandler:InvokeServer({["Parent"]=Hammer or workspace.Prison_ITEMS.single["Hammer"],["Position"]=Vector3.new("-nan",0,0)})end)ItemHandler:InvokeServer({["Parent"]=Crude_Knife or workspace.Prison_ITEMS.single["Crude Knife"],["Position"]=Vector3.new("-nan",0,0)})end)
Shieldonspawn[_A.K]:Connect(function()States.AlwaysShield =not States.AlwaysShield;if States.AlwaysShield then Shieldonspawn[_A.B]=EnabledColour else Shieldonspawn[_A.B]=DisabledColour end;while true do if States.AlwaysShield==_F then break end;if Sv.LPlr[_A.P]~=_N then LocalisedFunctions.getshield(true)end;WAIT(0.75)end;if UserOwnsRiotGamepass then spawn(function()ItemHandler:InvokeServer({["Parent"]=Riot_Shield or workspace.Prison_ITEMS.giver["Riot Shield"],["Position"]=Vector3.new("-nan",0,0)})end)end;end)
rFire[_A.K]:Connect(function()States.RapidFire=not States.RapidFire;if States.RapidFire then rFire[_A.B]=EnabledColour else rFire[_A.B]=DisabledColour end;end)
Cuffs[_A.K]:Connect(function()States.SmartCuffs=not States.SmartCuffs;if States.SmartCuffs then Cuffs[_A.B]=EnabledColour else Cuffs[_A.B]=DisabledColour end;end)
aTools[_A.K]:Connect(function()States.AntiBackpack=not States.AntiBackpack;if States.AntiBackpack then aTools[_A.B]=EnabledColour else aTools[_A.B]=DisabledColour end;end)
Guns[_A.K]:Connect(function()spawn(function()ItemHandler:InvokeServer({["Parent"]=workspace.Prison_ITEMS.giver["M9"],["Position"]=Vector3.new("-nan",0,0)})end)spawn(function()ItemHandler:InvokeServer({["Parent"]=AK47 or workspace.Prison_ITEMS.giver["AK-47"],["Position"]=Vector3.new("-nan",0,0)})end)ItemHandler:InvokeServer({["Parent"]=workspace.Prison_ITEMS.giver["Remington 870"],["Position"]=Vector3.new("-nan",0,0)})end)
Getkey[_A.K]:Connect(function()if Sv.LPlr.Backpack:FindFirstChild("Key Card")==_N then if workspace.Prison_ITEMS.single:FindFirstChild("Key card")then ItemHandler:InvokeServer({["Parent"]=workspace.Prison_ITEMS.single["Key card"],["Position"]=Vector3.new("-nan",0,0)})else notify("No keycard was found.",_A.R(0.75,0,0))end;end;end)

local Humanoid,B,B1,B2,B3=nil,nil,nil,nil,nil
local TotalAnimationsRunning=0

ReplicatedStorage.UpdateEvent.OnClientEvent:Connect(function(Ammo,Gun)
	if States.RapidFire then
		if (tonumber(Ammo) or 0) <=0 then
			if Gun ~= nil then
				ReplicatedStorage.ReloadEvent:FireServer(Gun)
			end
		end
	end
end)




Sv.LPlr.CharacterAdded:Connect(function(A)
	TotalAnimationsRunning=0
	RealHRP=_N;FakeHRP=_N
	if B1~=_N then B1:Disconnect()end if B2~=_N then B2:Disconnect()end if B3~=_N then B3:Disconnect()end
	Humanoid=_N
	if B~=_N then B:Disconnect()end
	B1=A.ChildAdded:Connect(function(A)
		if States.RapidFire then
			if A[_B.C]=="Tool"then
				local Tool=A
				local Req=nil
				if Tool:FindFirstChild("GunStates")then
					Req=require(Tool.GunStates)
					--Req["MaxAmmo"]=Req["MaxAmmo"]
					--Req["StoredAmmo"]=Req["StoredAmmo"]
					--Req["AmmoPerClip"]=Req["AmmoPerClip"]
					--Req["CurrentAmmo"]=Req["CurrentAmmo"]
					Req["MaxAmmo"]=math.huge
					Req["StoredAmmo"]=math.huge
					Req["AmmoPerClip"]=math.huge
					Req["CurrentAmmo"]=math.huge
					Req["FireRate"]=-math.huge
					Req["Bullets"]=20
					Req["Range"]=math.huge
					Req["ReloadTime"]=-math.huge
					Req["AutoFire"]=_T
					Req=_N Tool=_N
				end
			end
		end
		if States.SilentGuns then
			if A:FindFirstChild("Handle")~=_N then
				local S=A.Handle:FindFirstChild("FireSound")
				if S~=_N then
					S.Volume=0
					S:Clone()[_A.H]=A.Handle
					S:Destroy()
					S=_N
				end
			end
		end
	end)
	Humanoid=A:WaitForChild("Humanoid")
	RealHRP=A:WaitForChild("HumanoidRootPart")
	local B=nil
	local wasTriggered=false
	B=Humanoid.Changed:Connect(function()
		if Humanoid:GetState()==Enum.HumanoidStateType.Dead or #A.PrimaryPart:GetJoints() <=0 then
			if States.Invis==_T and #A.PrimaryPart:GetJoints() <=0 then if Humanoid.Health>0 then return end end
			if wasTriggered then return end
			wasTriggered=true
			if States.AutoRE==_T then
				RE()
			elseif States.FastSpawn==_T then
				if Sv.LPlr.Team.Name=="Guards" or Sv.LPlr.Team.Name=="Inmates"or Sv.LPlr.Team.Name=="Neutral"then
					TeamEvent:FireServer(Sv.LPlr.TeamColor.Name)
				end
			end
			wasTriggered=nil;B:Disconnect()

		end
	end)

	B3=Humanoid.Touched:Connect(function(hit)
		if not hit:IsDescendantOf(Sv.LPlr[_A.P])then
			if States.TouchKill then
				local Plr=Sv.Plrs:FindFirstChild(hit.Parent.Name)
				if Plr~=_N then
					if table.find(AddedWhitelists,Plr.UserId)then return end
					if Plr:GetAttribute("DEB")~=_N then return end
					if hit.Parent:FindFirstChildOfClass("ForceField")~=_N then return end
					local Humanoid1=hit.Parent:FindFirstChildOfClass("Humanoid")
					if Humanoid1~=_N then
						if Humanoid1.Health >0 then
							Sv.New(function()Plr:SetAttribute("DEB",1)WAIT(1)Plr:SetAttribute("DEB",nil)end)
							for i=0,17 do
								MeleeEvent:FireServer(Plr)
							end
						end
					end
					Humanoid1=_N
				end
				Plr=_N
			elseif States.TeamTouchKill then
				local Plr=Sv.Plrs:FindFirstChild(hit.Parent.Name)
				if Plr~=_N then
					if Plr.Team.Name~=Sv.LPlr.Team.Name then
						if table.find(AddedWhitelists,Plr.UserId)then return end
						if Plr:GetAttribute("DEB")~=_N then return end
						if hit.Parent:FindFirstChildOfClass("ForceField")~=_N then return end
						local Humanoid1=hit.Parent:FindFirstChildOfClass("Humanoid")
						if Humanoid1~=_N then
							if Humanoid1.Health >0 then
								Sv.New(function()Plr:SetAttribute("DEB",1)WAIT(1)Plr:SetAttribute("DEB",nil)end)
								for i=0,17 do
									MeleeEvent:FireServer(Plr)
								end
							end
						end
						Humanoid1=_N
					end
				end
				Plr=_N
			end
		end
	end)

	if States.SmartCuffs then if Sv.LPlr:FindFirstChildWhichIsA("Backpack"):FindFirstChild("SmartCuffs")==_N then local a=Sv.LPlr:FindFirstChildWhichIsA("Backpack"):FindFirstChild("Handcuffs") or Sv.Ins("Tool",Sv.LPlr:FindFirstChildWhichIsA("Backpack"))a.Name="SmartCuffs"a.RequiresHandle=_F;a.Activated:Connect(function()local plr=Sv.Plrs:GetPlayerFromCharacter(Mouse.Target) or Sv.Plrs:GetPlayerFromCharacter(Mouse.Target.Parent)if plr==_N then plr=Sv.Plrs:GetPlayerFromCharacter(Mouse.Target.Parent)end;if plr then for i=0,3 do if (plr[_A.P].Head.Position -Sv.LPlr[_A.P].Head.Position).Magnitude <=15 then arrest:InvokeServer(plr[_A.P].HumanoidRootPart)end;WAIT(0.2)end;end;end)end;end
	if States.AlwaysAK then spawn(function()repeat  WAIT(0.2)if Sv.LPlr.Backpack:FindFirstChild("AK-47")then break end if Sv.LPlr[_A.P]:FindFirstChild("AK-47")then break end ItemHandler:InvokeServer({["Parent"]=AK47 or workspace.Prison_ITEMS.giver["AK-47"],["Position"]=Vector3.new("-nan",0,0)})until 0 >1;end)end
	if States.AlwaysAK then if UserOwnsRiotGamepass then spawn(function()repeat  WAIT(0.2)if Sv.LPlr.Backpack:FindFirstChild("M4A1")then break end ItemHandler:InvokeServer({["Parent"]=M4A1 or workspace.Prison_ITEMS.giver["M4A1"],["Position"]=Vector3.new("-nan",0,0)})until Sv.LPlr.Character==nil end)end end
	if States.AlwaysShotgun then spawn(function()repeat  WAIT(0.2)if Sv.LPlr.Backpack:FindFirstChild("Remington 870")then break end;if Sv.LPlr[_A.P]:FindFirstChild("Remington 870")then break end;ItemHandler:InvokeServer({["Parent"]=Remington or workspace.Prison_ITEMS.giver["Remington 870"],["Position"]=Vector3.new("-nan",0,0)})until 0 >1;end)end
	if States.AlwaysM9 then spawn(function()repeat  WAIT(0.2)if Sv.LPlr.Backpack:FindFirstChild("M9")then break end;if Sv.LPlr[_A.P]:FindFirstChild("M9")then break end;ItemHandler:InvokeServer({["Parent"]=M9 or workspace.Prison_ITEMS.giver["M9"],["Position"]=Vector3.new("-nan",0,0)})until 0 >1;end)end
	if States.AlwaysKeycard then if Sv.LPlr.Team.Name=="Guards"then return end;if Sv.LPlr.Backpack:FindFirstChild("Key Card")==_N then if workspace.Prison_ITEMS.single:FindFirstChild("Key card")then spawn(function()ItemHandler:InvokeServer({["Parent"]=workspace.Prison_ITEMS.single["Key card"],["Position"]=Vector3.new("-nan",0,0)})end)end;end;end
	if States.Alawysmelees then if Sv.LPlr.TeamColor.Name=="Bright blue"then else spawn(function()ItemHandler:InvokeServer({["Parent"]=Hammer or workspace.Prison_ITEMS.single["Hammer"],["Position"]=Vector3.new("-nan",0,0)})end)spawn(function()ItemHandler:InvokeServer({["Parent"]=Crude_Knife or workspace.Prison_ITEMS.single["Crude Knife"],["Position"]=Vector3.new("-nan",0,0)})end)end;end
	if States.AlwaysShield then 
		if UserOwnsRiotGamepass then spawn(function()ItemHandler:InvokeServer({["Parent"]=Riot_Shield or workspace.Prison_ITEMS.giver["Riot Shield"],["Position"]=Vector3.new("-nan",0,0)})end) end
		LocalisedFunctions.getshield(true)
	end
end)
if workspace:FindFirstChild("Prison_ITEMS")~=_N then print("Found Prison_ITEMS.")
	workspace.Prison_ITEMS.single.ChildAdded:Connect(function(Child)
		if Child.Name=="Key card"then 
			if States.AlwaysKeycard then 
				if Sv.LPlr.Team.Name=="Guards"then return end;
				if Sv.LPlr.Backpack:FindFirstChild("Key Card")==_N then 
					ItemHandler:InvokeServer({["Parent"]=workspace.Prison_ITEMS.single["Key card"],["Position"]=Vector3.new("-nan",0,0)})
				end;
			end;
			if States.IsNokeycardDrops then
				if Sv.LPlr.Backpack:FindFirstChild("Key Card")~=_N then
					RE()
					ItemHandler:InvokeServer({["Parent"]=Child,["Position"]=Vector3.new("-nan",0,0)})
				end
			end
		elseif Child.Name=="M9"then
			if States.IsNoM9Drops then
				if Sv.LPlr.Backpack:FindFirstChild("M9")~=_N then
					if Sv.LPlr.TeamColor.Name~="Bright blue"then
						RE()
						ItemHandler:InvokeServer({["Parent"]=Child,["Position"]=Vector3.new("-nan",0,0)})
					end
				end
			end
		end;
	end)
end

local Cooldown,Anim1=_F,false
local Animation1=Sv.Ins("Animation")Animation1.AnimationId="rbxassetid://484200742"
local Animation2=Sv.Ins("Animation")Animation2.AnimationId="rbxassetid://484926359"

LocalisedFunctions.Punch = function(FastPunch)
	if FastPunch then local Part=Sv.Ins("Part", Sv.LPlr[_A.P])Part.Transparency=1;Part.Size=Vector3.new(5, 2, 3)Part.CanCollide=_F;Part.Massless=_T;local Weld=Sv.Ins("Weld", Part)Weld.Part0=Sv.LPlr[_A.P].Torso;Weld.Part1=Part;Weld.C1=_A.N(0, 0, 2)
		local A=nil
		A=Part.Touched:connect(function(Touch)
			if Sv.Plrs:FindFirstChild(Touch.Parent.Name)then
				local plr=Sv.Plrs:FindFirstChild(Touch.Parent.Name) 
				if plr.Name~=Sv.LPlr.Name then
					Part:Destroy()
					MeleeEvent:FireServer(plr)
					plr[_A.P].Head.punchSound:Play()
					--SoundEvent:FireServer(plr[_A.P].Head.punchSound)
				end
			end
		end)
		if TotalAnimationsRunning<200 then
			Anim1=not Anim1
			if Anim1 then local Track=Sv.LPlr[_A.P].Humanoid:LoadAnimation(Animation1)Track:Play()Track=_N
			else local Track=Sv.LPlr[_A.P].Humanoid:LoadAnimation(Animation1)Track:Play()Track=_N
			end
			TotalAnimationsRunning+=1
			spawn(function()WAIT(1)if TotalAnimationsRunning>0 then TotalAnimationsRunning-=1;end;end)
		end
		WAIT(0.02)Part:Destroy()A:Disconnect()
		return
	end
	Cooldown=_T
	local Part=Sv.Ins("Part", Sv.LPlr[_A.P])Part.Transparency=1;Part.Size=Vector3.new(5, 2, 3)Part.CanCollide=_F;Part.Massless=_T;local Weld=Sv.Ins("Weld", Part)Weld.Part0=Sv.LPlr[_A.P].Torso;Weld.Part1=Part;Weld.C1=_A.N(0, 0, 2)
	local A=nil A=Part.Touched:connect(function(Touch)if Sv.Plrs:FindFirstChild(Touch.Parent.Name)then local plr=Sv.Plrs:FindFirstChild(Touch.Parent.Name)if plr.Name~=Sv.LPlr.Name then if table.find(AddedWhitelists,plr.UserId)then else Part:Destroy()for i=1,30 do MeleeEvent:FireServer(plr)end;A:Disconnect()end;end;end;end)
	WAIT(0.1)Cooldown=_F;Part:Destroy()A:Disconnect()Part,Weld=_N,nil
end
local IskeyFdown,IsShiftKeyDown=_F,false
local UIS=svc("UserInputService")
UIS.InputBegan:Connect(function(Input)
	if UIS:GetFocusedTextBox()~=_N then return end
	if States.SuperPunch then if Input.KeyCode==Enum.KeyCode.F then if Cooldown then return end LocalisedFunctions.Punch()end
	elseif States.FastPunch then if Input.KeyCode==Enum.KeyCode.F then LocalisedFunctions.Punch(true)end
	elseif States.RapidPunch then if Input.KeyCode==Enum.KeyCode.F then IskeyFdown=_T local Maxtimeout=40 while true do WAIT(0.05) if not States.RapidPunch then break end if Maxtimeout<0 then break end if IskeyFdown then Maxtimeout=40 Punch(true)else Maxtimeout=Maxtimeout-1 end end Maxtimeout=_N end
	end
end)
UIS.InputEnded:Connect(function(Input)
	if Input.KeyCode==Enum.KeyCode.F then IskeyFdown=_F
	elseif Input.KeyCode==Enum.KeyCode.LeftShift then IsShiftKeyDown=_F 
	end 
end)

local Hrp,Humanoid,Distance,Torso,Hotshield=_N,nil,nil,nil,nil

svc("RunService").Stepped:Connect(function()
	local Character=Sv.LPlr[_A.P];if Character==_N then return end
	local PrimePart=Character:FindFirstChild("HumanoidRootPart")
	if States.AntiVoid then if PrimePart.Position.Y <=workspace.FallenPartsDestroyHeight+40 then PrimePart.CFrame=_A.N(PrimePart.Position.X,workspace.FallenPartsDestroyHeight+40,PrimePart.Position.Z)PrimePart.Velocity=Vector3.new(PrimePart.Velocity.X,80,PrimePart.Velocity.Z)PrimePart.AssemblyAngularVelocity=Vector3.new(0,0,0)end;end;
	if States.Noclip then for i,v in Sv.P(Character:GetDescendants())do if v.ClassName:match("Part") or v.ClassName:match("Wedge")or v.ClassName=="UnionOperation"then if v.ClassName=="ParticleEmitter" then else v.CanCollide=_F;end;end;end;end
	Character,PrimePart=_N,nil
end)

-- TP COORDS
local TeleportData={
	[1]={Name="Prison roof",Cframe=_A.N(729, 124, 2292)},
	[2]={Name="Prison back", Cframe=_A.N(1057, 98, 2129)},
	[3]={Name="Prison backyard", Cframe=_A.N(1073, 98, 2418)},
	[4]={Name="Prison sewers", Cframe=_A.N(917, 79, 2216)},
	[5]={Name="Prison backhall", Cframe=_A.N(982, 100, 2290)},
	[6]={Name="Prison hall", Cframe=_A.N(942, 100, 2376)},
	[7]={Name="Prison admin area", Cframe=_A.N(701, 100, 2366)},
	[8]={Name="Prison Cafe (ROOF)", Cframe=_A.N(916, 142, 2286)},
	[9]={Name="Cells", Cframe=_A.N(917, 100, 2459)},
	[10]={Name="Cells (ROOF)", Cframe=_A.N(916, 142, 2449)},
	[11]={Name="Yard Tower", Cframe=_A.N(823, 143, 2588)},
	[12]={Name="Yard", Cframe=_A.N(785, 98, 2471)},
	[13]={Name="Cafe", Cframe=_A.N(887, 100, 2274)},
	[14]={Name="Kitchen", Cframe=_A.N(919, 100, 2228)},
	[15]={Name="Guard Armory (SPAWN)", Cframe=_A.N(834, 100, 2304)},
	[16]={Name="Guard Breakroom", Cframe=_A.N(792, 100, 2292)}, 
	[17]={Name="Guard weaponary", Cframe=_A.N(838, 100, 2267)},
	[18]={Name="Guard CamRoom", Cframe=_A.N(795, 100, 2331)},
	[19]={Name="Neutral Spawn", Cframe=_A.N(878, 28, 2351)},
	[20]={Name="Crim base (IN)", Cframe=_A.N(-947, 94, 2070)},
	[21]={Name="Crim base (OUT)", Cframe=_A.N(-896, 94, 2135)},
	[22]={Name="Empty crimbase 1", Cframe=_A.N(-946, 94, 1989)},
	[23]={Name="Empty crimbase 2", Cframe=_A.N(-946, 94, 1920)},
	[24]={Name="Grocery store", Cframe=_A.N(-410, 54, 1759)},
	[25]={Name="Gas station", Cframe=_A.N(-520, 54, 1619)},
	[26]={Name="Gas Station (TOP)", Cframe=_A.N(-518, 78, 1658)},
	[27]={Name="Tall scraper (TOP)", Cframe=_A.N(-325, 119, 1997)},
	[28]={Name="Short scraper (TOP)", Cframe=_A.N(-394, 87, 1913)},
	[29]={Name="Shops Rooftops", Cframe=_A.N(-334, 88, 1813)},
	[30]={Name="Houses", Cframe=_A.N(-306, 54, 2485)},
	[31]={Name="Under roads", Cframe=_A.N(-12, 11, 1294)},
	[32]={Name="Armory shop (TOP)", Cframe=_A.N(402, 33, 1093)},
	[33]={Name="Armory shop (IN)", Cframe=_A.N(402, 17, 1095)},
	[34]={Name="Mountaintops", Cframe=_A.N(668, 176, 3068)},
	[35]={Name="Heaven", Cframe=_A.N(0, 1000000, 0)},
	[36]={Name="H3LL", Cframe=_A.N(0, 10000000, 0)},
	[37]={Name="Under cargos", Cframe=_A.N(267, 61, 2367)},
	[38]={Name="Unreachable Secret 1", Cframe=_A.N(1163, 71, 1854)},
	[39]={Name="Unreachable Secret 2", Cframe=_A.N(-934, 12, 1084)},
	[40]={Name="Crim spawn", Cframe=_A.N(-919, 93, 2132)}, 
}
for i,v in Sv.P(TeleportData)do local A=TeleportBTNTemplate:Clone()A.Name=""A.Text=v.Name;A[_A.K]:Connect(function()LocalisedFunctions.TeleportPlayer(v.Cframe)end)A.Visible=_T;A[_A.H]=TeleportsContainer;A=_N;end

local MouseEntered,TextToShow=_F,""

local TextData={
	--["NAMEOFINSTANCE"]="TEXTHERE",
	["Walls"]="Toggle visibilty of walls",["Doors"]="Toggle visibility of doors",
	["Nclip"]="Walk through walls.",["FTKill"]="Touchkill that wont kill teammates.",
	["tAura"]="Killaura that wont kill teammates.",["rPunch"]="Hold [F] to feel the SPEEEED",
	["sPunch"]="One shot punch.",["fPunch"]="No cooldown punch.",
	["Hide"]="Minimizes the GUI.",["Guns"]="Gives you the M9 and Remington.",
	["Btool"]="Gives you the hammer tool.",["Guard"]="Become a guard (wont work if team is full).",
	["Inmate"]="Become a inmate.",["Crim"]="Become a criminal.",
	["Neutral"]="Become a neutral (does not work).",["WhitelistedPlayerModel"]="Player thats whitelisted. CLICK to remove.",
	["Addwhitelist"]="Whitelists a player which will make them immune to SOME features",["Invis"]="Toggles invisibility",
	["Shotgunonspawn"]="Always have remington.",["M9onspawn"]="Always have M9.",
	["AntiShoot"]="Autokills the player that shoots at you",["AntiMelee"]="Autokills the player that attempts to melee attack you",
	["Afterfire"]="Be able to use guns while ur dead",["HitboxExp"]="Aim assisting helps you hit shots better",
	["AKonspawn"]="Always have AK-47.",["Shieldonspawn"]="Equips a riotshield. (Shield Player required)",
	["Getkey"]="Gives you a keycard.",["Autokey"]="Auto pickup for a keycard.",
	["Antishield"]="Blocks shield users.",["Getmelee"]="Always spawn with melee items.",
}

for i,v in Sv.P(Main:GetChildren())do if v[_B.C]==_B.A then v.MouseEnter:Connect(function()MouseEntered=_T;TextToShow=TextData[v.Name]or""end)v.MouseLeave:Connect(function()MouseEntered=_F;TextToShow=TextData[v.Name]or""end)end end
if Sv.LPlr[_A.P]~=_N then if Sv.LPlr.Team.Name=="Guards" or Sv.LPlr.Team.Name=="Inmates"or Sv.LPlr.Team.Name=="Neutral"then if Sv.LPlr[_A.P]~=_N then Sv.LPlr[_A.P]:BreakJoints()end;TeamEvent:FireServer(Sv.LPlr.TeamColor.Name)end;end

notify("Whitelisting people will give them access to admin commands! The prefix is ;",_A.R(0,1,1))notify("Try typing ;cmds to see the list of commands!",_A.R(0.75,0.7,0))
if not UserOwnsRiotGamepass then notify("Warning! You do not own the riotshield gamepass. Getting M4A1 will not work.",_A.R(1,1,0))end

LocalisedFunctions.DoKillAura = function(IsTeam)for i,v in Sv.P(Sv.Plrs:GetPlayers())do if IsTeam ==_T then if v.TeamColor.Name==Sv.LPlr.TeamColor.Name then continue end end if table.find(AddedWhitelists,v.UserId)then else pcall(function()Humanoid=v[_A.P]:FindFirstChildOfClass("Humanoid")Distance=(v[_A.P]:FindFirstChildOfClass("Part").Position - Sv.LPlr[_A.P]:FindFirstChildOfClass("Part").Position).magnitude if v~=Sv.LPlr then if Distance <=13 then if Humanoid~=_N then if Humanoid.Health >0 then for i=1,13 do MeleeEvent:FireServer(v)end end end end end end)end end end

local LocalHumanoid,HotLocalChar,HotLocalBackpack,HotLocalCurrentEquippedTool,HotChatBox=nil,nil,nil,nil,nil

print("V2.8")

while true do WAIT(0)
	task.spawn(function()

		HotChatBox=svc("UserInputService"):GetFocusedTextBox()
		if HotChatBox~=_N then if HotChatBox.Name=="ChatBar"then if HotChatBox==Chatbox then else Chatbox=HotChatBox;print("New chat detected")Chatbox.FocusLost:Connect(function(entrpressed)if entrpressed then LocalisedFunctions.ConnectAdminCommands(Chatbox.Text,nil)end;end)end;end;end
		if MouseEntered then Hint.Text=TextToShow;if Hint.Text~=""then Hint.Visible=_T;Hint.Position=_B.D(0,Mouse.X+7,0,Mouse.Y)else Hint.Visible=_F;end;else Hint.Visible=_F;end

		if States.AntiBackpack then svc("StarterGui"):SetCoreGuiEnabled("Backpack",true)end
		if States.IsAntishield then for i,v in Sv.P(Sv.Plrs:GetPlayers())do if v.Name~=Sv.LPlr.Name then if v[_A.P]~=_N then Torso=v[_A.P]:FindFirstChild("Torso")if Torso then if Torso:FindFirstChild("ShieldFolder")~=_N then Hotshield=Torso.ShieldFolder:FindFirstChild("shield")if Hotshield~=_N then Hotshield.CanCollide=_F;Hotshield.CanQuery=_F;Hotshield.Transparency=1;end;end;end;end;end;end;end
		if States.HitboxExpander then if not States.IsAntishield then local PLRTBL={}if Sv.LPlr.Team.Name=="Guards"then PLRTBL=LocalisedFunctions.returnhostileplayers(Sv.Plrs:GetPlayers())else PLRTBL=Sv.Plrs:GetPlayers()end local HotChar=nil;local HotHead=_N;local HotPlrHumanoid=_N for i,v in Sv.P(PLRTBL)do if v.TeamColor.Name~=Sv.LPlr.TeamColor.Name then if not table.find(AddedWhitelists,v.UserId)then HotChar=v[_A.P];if HotChar~=_N then HotPlrHumanoid=HotChar:FindFirstChildOfClass("Humanoid")HotHead=HotChar:FindFirstChild("Head") or HotChar:FindFirstChild("HumanoidRootPart")if HotHead~=_N then if HotPlrHumanoid~=_N then if HotPlrHumanoid:GetState()==_A.T.Dead then HotHead.CanCollide=false HotHead.Size=Vector3.new(2,1,1)else if HotHead.Size.X <5 then HotHead.Size=Vector3.new(5,5,5)HotHead:Resize(Enum.NormalId.Bottom,3)HotHead:Resize(Enum.NormalId.Top,-1)end;end else if HotHead.Size.X <5 then HotHead.Size=Vector3.new(5,5,5)HotHead:Resize(Enum.NormalId.Bottom,3)HotHead:Resize(Enum.NormalId.Top,-1)end;end;HotHead.Transparency=0.8;HotHead.Massless=_T;end;end;end;end;end;HotChar=_N;HotHead=_N;HotPlrHumanoid=_N;PLRTBL=_N;end;end
		if States.UseGunsWhileDead then HotLocalBackpack=Sv.LPlr:FindFirstChildWhichIsA("Backpack")if HotLocalBackpack~=_N then for i,v in Sv.P(HotLocalBackpack:GetChildren())do if v[_B.C]=="Tool"then v.RequiresHandle=_F;end;end;end;HotLocalChar=Sv.LPlr[_A.P];if HotLocalChar~=_N then LocalHumanoid=HotLocalChar:FindFirstChildOfClass("Humanoid")if LocalHumanoid~=_N then if LocalHumanoid:GetState()==_A.T.Dead then if HotLocalChar~=_N then HotLocalCurrentEquippedTool=HotLocalChar:FindFirstChildOfClass("Tool")if HotLocalCurrentEquippedTool~=_N then HotLocalCurrentEquippedTool.RequiresHandle=_F;local A=HotLocalCurrentEquippedTool:FindFirstChild("Handle")if A~=_N then A.CFrame=(HotLocalChar:FindFirstChild("Head") or HotLocalChar:FindFirstChild("Torso") or HotLocalChar:FindFirstChild("Right Arm")).CFrame;A.Velocity=Vector3.new(0,0,0)end;A=_N;end;end;end;end;end;end
		if States.CuffAura then for i,v in Sv.P(Sv.Plrs:GetPlayers())do if v.TeamColor.Name~="Bright blue"then if table.find(AddedWhitelists,v.UserId)then else pcall(function()Hrp=v[_A.P]:FindFirstChild("HumanoidRootPart")Distance=(v[_A.P]:FindFirstChildOfClass("Part").Position - Sv.LPlr[_A.P]:FindFirstChildOfClass("Part").Position).magnitude if v~=Sv.LPlr then if Distance <=13 then if Hrp~=_N then Sv.New(function()arrest:InvokeServer(Hrp)end)end;end;end;end)end;end;end;end
		if States.AntiMelee then for i,v in Sv.P(workspace:GetPartBoundsInRadius((Sv.LPlr[_A.P].PrimaryPart or _A.N(0,-50000,0)).Position,7.5))do if not v:IsDescendantOf(Sv.LPlr[_A.P])then if not v.Anchored then if v.Name~="Handle"then local NearPlayer=Sv.Plrs:FindFirstChild(v.Parent.Name)if NearPlayer~=_N then if table.find(AddedWhitelists,NearPlayer.UserId)==_N then if NearPlayer[_A.P] ~= nil then if Sv.LPlr.TeamColor.Name=="Bright blue"and NearPlayer.TeamColor.Name=="Bright blue"then continue end;local Head=NearPlayer[_A.P]:FindFirstChild("Head") local PunchSound = Head:FindFirstChild("punchSound") local Humanoid=NearPlayer[_A.P]:FindFirstChildOfClass("Humanoid")if Humanoid~=_N then for i,v in Sv.P(Humanoid:GetPlayingAnimationTracks())do if v.Animation.AnimationId=="rbxassetid://484926359" or v.Animation.AnimationId=="rbxassetid://484200742" or v.Animation.AnimationId=="rbxassetid://275012308"then if PunchSound.Playing==true or v.Animation.AnimationId=="rbxassetid://275012308" then if Humanoid.Health>0 then local TEMP =Sv.LPlr[_A.P].PrimaryPart if TEMP:GetAttribute("ANTI")==_N then spawn(function()TEMP:SetAttribute("ANTI",0)TEMP.CFrame=TEMP.CFrame+Vector3.new(math.random(-1,1),0,math.random(-1,1))WAIT(0.02)TEMP:SetAttribute("ANTI",nil)end)end;WAIT(0.1)for i=0,13 do MeleeEvent:FireServer(NearPlayer)end;end;elseif v.Animation.AnimationId=="rbxassetid://218504594"then warn(NearPlayer.Name.." is exploiting..")v:Stop()if Humanoid.Health>0 then local TEMP =Sv.LPlr[_A.P].PrimaryPart;if TEMP~=_N then if TEMP:GetAttribute("ANTI")==_N then spawn(function()TEMP:SetAttribute("ANTI",0)TEMP.CFrame=TEMP.CFrame+Vector3.new(math.random(-1,1),0,math.random(-1,1))WAIT(0.02)TEMP:SetAttribute("ANTI",nil)end)end;end;WAIT(0.1)for i=0,13 do MeleeEvent:FireServer(NearPlayer)end;end;end;end;end;end;Head,PunchSound=_N,_N;end;end;Humanoid=_N;end;NearPlayer=_N;end;end;end;end;end
		if States.KillAura then LocalisedFunctions.DoKillAura(false)
		elseif States.TeamAura then LocalisedFunctions.DoKillAura(true)
		end

	end)
end
